
haversine_processor:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	f3 0f 1e fa          	endbr64
    4004:	48 83 ec 08          	sub    $0x8,%rsp
    4008:	48 8b 05 c9 4f 01 00 	mov    0x14fc9(%rip),%rax        # 18fd8 <__gmon_start__@Base>
    400f:	48 85 c0             	test   %rax,%rax
    4012:	74 02                	je     4016 <_init+0x16>
    4014:	ff d0                	call   *%rax
    4016:	48 83 c4 08          	add    $0x8,%rsp
    401a:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <__asan_report_store4@plt-0x10>:
    4020:	ff 35 ca 4f 01 00    	push   0x14fca(%rip)        # 18ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 4f 01 00    	jmp    *0x14fcc(%rip)        # 18ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <__asan_report_store4@plt>:
    4030:	ff 25 ca 4f 01 00    	jmp    *0x14fca(%rip)        # 19000 <__asan_report_store4@Base>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <__errno_location@plt>:
    4040:	ff 25 c2 4f 01 00    	jmp    *0x14fc2(%rip)        # 19008 <__errno_location@GLIBC_2.2.5>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <printf@plt>:
    4050:	ff 25 ba 4f 01 00    	jmp    *0x14fba(%rip)        # 19010 <printf@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <__asan_register_globals@plt>:
    4060:	ff 25 b2 4f 01 00    	jmp    *0x14fb2(%rip)        # 19018 <__asan_register_globals@Base>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <sin@plt>:
    4070:	ff 25 aa 4f 01 00    	jmp    *0x14faa(%rip)        # 19020 <sin@GLIBC_2.2.5>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <free@plt>:
    4080:	ff 25 a2 4f 01 00    	jmp    *0x14fa2(%rip)        # 19028 <free@Base>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <__asan_report_load_n@plt>:
    4090:	ff 25 9a 4f 01 00    	jmp    *0x14f9a(%rip)        # 19030 <__asan_report_load_n@Base>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <__asan_stack_malloc_0@plt>:
    40a0:	ff 25 92 4f 01 00    	jmp    *0x14f92(%rip)        # 19038 <__asan_stack_malloc_0@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <puts@plt>:
    40b0:	ff 25 8a 4f 01 00    	jmp    *0x14f8a(%rip)        # 19040 <puts@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <__asan_stack_malloc_9@plt>:
    40c0:	ff 25 82 4f 01 00    	jmp    *0x14f82(%rip)        # 19048 <__asan_stack_malloc_9@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <__asan_report_store16@plt>:
    40d0:	ff 25 7a 4f 01 00    	jmp    *0x14f7a(%rip)        # 19050 <__asan_report_store16@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <__asan_stack_malloc_1@plt>:
    40e0:	ff 25 72 4f 01 00    	jmp    *0x14f72(%rip)        # 19058 <__asan_stack_malloc_1@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <__asan_report_load4@plt>:
    40f0:	ff 25 6a 4f 01 00    	jmp    *0x14f6a(%rip)        # 19060 <__asan_report_load4@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <__asan_stack_free_9@plt>:
    4100:	ff 25 62 4f 01 00    	jmp    *0x14f62(%rip)        # 19068 <__asan_stack_free_9@Base>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <open@plt>:
    4110:	ff 25 5a 4f 01 00    	jmp    *0x14f5a(%rip)        # 19070 <open@GLIBC_2.2.5>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <sqrt@plt>:
    4120:	ff 25 52 4f 01 00    	jmp    *0x14f52(%rip)        # 19078 <sqrt@GLIBC_2.2.5>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <read@plt>:
    4130:	ff 25 4a 4f 01 00    	jmp    *0x14f4a(%rip)        # 19080 <read@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <__asan_report_store8@plt>:
    4140:	ff 25 42 4f 01 00    	jmp    *0x14f42(%rip)        # 19088 <__asan_report_store8@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <__asan_unregister_globals@plt>:
    4150:	ff 25 3a 4f 01 00    	jmp    *0x14f3a(%rip)        # 19090 <__asan_unregister_globals@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__stack_chk_fail@plt>:
    4160:	ff 25 32 4f 01 00    	jmp    *0x14f32(%rip)        # 19098 <__stack_chk_fail@GLIBC_2.4>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <__asan_init@plt>:
    4170:	ff 25 2a 4f 01 00    	jmp    *0x14f2a(%rip)        # 190a0 <__asan_init@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <malloc@plt>:
    4180:	ff 25 22 4f 01 00    	jmp    *0x14f22(%rip)        # 190a8 <malloc@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <__asan_report_load1@plt>:
    4190:	ff 25 1a 4f 01 00    	jmp    *0x14f1a(%rip)        # 190b0 <__asan_report_load1@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <__asan_report_load16@plt>:
    41a0:	ff 25 12 4f 01 00    	jmp    *0x14f12(%rip)        # 190b8 <__asan_report_load16@Base>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <__asan_report_store1@plt>:
    41b0:	ff 25 0a 4f 01 00    	jmp    *0x14f0a(%rip)        # 190c0 <__asan_report_store1@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <__asan_report_load8@plt>:
    41c0:	ff 25 02 4f 01 00    	jmp    *0x14f02(%rip)        # 190c8 <__asan_report_load8@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <vsnprintf@plt>:
    41d0:	ff 25 fa 4e 01 00    	jmp    *0x14efa(%rip)        # 190d0 <vsnprintf@Base>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <gettimeofday@plt>:
    41e0:	ff 25 f2 4e 01 00    	jmp    *0x14ef2(%rip)        # 190d8 <gettimeofday@GLIBC_2.2.5>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <stat@plt>:
    41f0:	ff 25 ea 4e 01 00    	jmp    *0x14eea(%rip)        # 190e0 <stat@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <asin@plt>:
    4200:	ff 25 e2 4e 01 00    	jmp    *0x14ee2(%rip)        # 190e8 <asin@GLIBC_2.2.5>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <realloc@plt>:
    4210:	ff 25 da 4e 01 00    	jmp    *0x14eda(%rip)        # 190f0 <realloc@Base>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <__asan_version_mismatch_check_v8@plt>:
    4220:	ff 25 d2 4e 01 00    	jmp    *0x14ed2(%rip)        # 190f8 <__asan_version_mismatch_check_v8@Base>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <cos@plt>:
    4230:	ff 25 ca 4e 01 00    	jmp    *0x14eca(%rip)        # 19100 <cos@GLIBC_2.2.5>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <__asan_stack_malloc_3@plt>:
    4240:	ff 25 c2 4e 01 00    	jmp    *0x14ec2(%rip)        # 19108 <__asan_stack_malloc_3@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .text:

0000000000004250 <_start>:
    4250:	f3 0f 1e fa          	endbr64
    4254:	31 ed                	xor    %ebp,%ebp
    4256:	49 89 d1             	mov    %rdx,%r9
    4259:	5e                   	pop    %rsi
    425a:	48 89 e2             	mov    %rsp,%rdx
    425d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    4261:	50                   	push   %rax
    4262:	54                   	push   %rsp
    4263:	45 31 c0             	xor    %r8d,%r8d
    4266:	31 c9                	xor    %ecx,%ecx
    4268:	48 8d 3d b2 de 00 00 	lea    0xdeb2(%rip),%rdi        # 12121 <main>
    426f:	ff 15 53 4d 01 00    	call   *0x14d53(%rip)        # 18fc8 <__libc_start_main@GLIBC_2.34>
    4275:	f4                   	hlt
    4276:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    427d:	00 00 00 
    4280:	48 8d 3d d9 6f 01 00 	lea    0x16fd9(%rip),%rdi        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    4287:	48 8d 05 d2 6f 01 00 	lea    0x16fd2(%rip),%rax        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    428e:	48 39 f8             	cmp    %rdi,%rax
    4291:	74 15                	je     42a8 <_start+0x58>
    4293:	48 8b 05 36 4d 01 00 	mov    0x14d36(%rip),%rax        # 18fd0 <_ITM_deregisterTMCloneTable@Base>
    429a:	48 85 c0             	test   %rax,%rax
    429d:	74 09                	je     42a8 <_start+0x58>
    429f:	ff e0                	jmp    *%rax
    42a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42a8:	c3                   	ret
    42a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42b0:	48 8d 3d a9 6f 01 00 	lea    0x16fa9(%rip),%rdi        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    42b7:	48 8d 35 a2 6f 01 00 	lea    0x16fa2(%rip),%rsi        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    42be:	48 29 fe             	sub    %rdi,%rsi
    42c1:	48 89 f0             	mov    %rsi,%rax
    42c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    42c8:	48 c1 f8 03          	sar    $0x3,%rax
    42cc:	48 01 c6             	add    %rax,%rsi
    42cf:	48 d1 fe             	sar    $1,%rsi
    42d2:	74 14                	je     42e8 <_start+0x98>
    42d4:	48 8b 05 05 4d 01 00 	mov    0x14d05(%rip),%rax        # 18fe0 <_ITM_registerTMCloneTable@Base>
    42db:	48 85 c0             	test   %rax,%rax
    42de:	74 08                	je     42e8 <_start+0x98>
    42e0:	ff e0                	jmp    *%rax
    42e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    42e8:	c3                   	ret
    42e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    42f0:	f3 0f 1e fa          	endbr64
    42f4:	80 3d 69 6f 01 00 00 	cmpb   $0x0,0x16f69(%rip)        # 1b264 <__asan_option_detect_stack_use_after_return+0x4>
    42fb:	75 33                	jne    4330 <_start+0xe0>
    42fd:	55                   	push   %rbp
    42fe:	48 83 3d ba 4c 01 00 	cmpq   $0x0,0x14cba(%rip)        # 18fc0 <__cxa_finalize@GLIBC_2.2.5>
    4305:	00 
    4306:	48 89 e5             	mov    %rsp,%rbp
    4309:	74 0d                	je     4318 <_start+0xc8>
    430b:	48 8b 3d 16 4e 01 00 	mov    0x14e16(%rip),%rdi        # 19128 <__dso_handle>
    4312:	ff 15 a8 4c 01 00    	call   *0x14ca8(%rip)        # 18fc0 <__cxa_finalize@GLIBC_2.2.5>
    4318:	e8 63 ff ff ff       	call   4280 <_start+0x30>
    431d:	c6 05 40 6f 01 00 01 	movb   $0x1,0x16f40(%rip)        # 1b264 <__asan_option_detect_stack_use_after_return+0x4>
    4324:	5d                   	pop    %rbp
    4325:	c3                   	ret
    4326:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    432d:	00 00 00 
    4330:	c3                   	ret
    4331:	0f 1f 40 00          	nopl   0x0(%rax)
    4335:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    433c:	00 00 00 00 
    4340:	f3 0f 1e fa          	endbr64
    4344:	e9 67 ff ff ff       	jmp    42b0 <_start+0x60>

0000000000004349 <jstring_log_stub>:
    4349:	55                   	push   %rbp
    434a:	48 89 e5             	mov    %rsp,%rbp
    434d:	48 83 ec 48          	sub    $0x48,%rsp
    4351:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    4358:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    435f:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    4366:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    436d:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    4374:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    437b:	84 c0                	test   %al,%al
    437d:	74 20                	je     439f <jstring_log_stub+0x56>
    437f:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    4383:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    4387:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    438b:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    438f:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    4393:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    4397:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    439b:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    439f:	90                   	nop
    43a0:	c9                   	leave
    43a1:	c3                   	ret

00000000000043a2 <jstring_memory_activate>:
    43a2:	55                   	push   %rbp
    43a3:	48 89 e5             	mov    %rsp,%rbp
    43a6:	48 83 ec 10          	sub    $0x10,%rsp
    43aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43b2:	8b 05 e0 6e 01 00    	mov    0x16ee0(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    43b8:	85 c0                	test   %eax,%eax
    43ba:	74 1f                	je     43db <jstring_memory_activate+0x39>
    43bc:	48 8b 15 7d 4d 01 00 	mov    0x14d7d(%rip),%rdx        # 19140 <jstring_log>
    43c3:	48 8d 05 56 ec 00 00 	lea    0xec56(%rip),%rax        # 13020 <_IO_stdin_used+0x20>
    43ca:	48 89 c7             	mov    %rax,%rdi
    43cd:	b8 00 00 00 00       	mov    $0x0,%eax
    43d2:	ff d2                	call   *%rdx
    43d4:	b8 00 00 00 00       	mov    $0x0,%eax
    43d9:	eb 30                	jmp    440b <jstring_memory_activate+0x69>
    43db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43df:	48 89 05 9a 6e 01 00 	mov    %rax,0x16e9a(%rip)        # 1b280 <jstring_temporary_memory_info>
    43e6:	48 c7 05 97 6e 01 00 	movq   $0x0,0x16e97(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    43ed:	00 00 00 00 
    43f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    43f5:	48 89 05 94 6e 01 00 	mov    %rax,0x16e94(%rip)        # 1b290 <jstring_temporary_memory_info+0x10>
    43fc:	c7 05 92 6e 01 00 01 	movl   $0x1,0x16e92(%rip)        # 1b298 <jstring_temporary_memory_info+0x18>
    4403:	00 00 00 
    4406:	b8 01 00 00 00       	mov    $0x1,%eax
    440b:	c9                   	leave
    440c:	c3                   	ret

000000000000440d <jstring_memory_reset>:
    440d:	55                   	push   %rbp
    440e:	48 89 e5             	mov    %rsp,%rbp
    4411:	48 83 ec 10          	sub    $0x10,%rsp
    4415:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4419:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    441d:	8b 05 75 6e 01 00    	mov    0x16e75(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    4423:	85 c0                	test   %eax,%eax
    4425:	75 1f                	jne    4446 <jstring_memory_reset+0x39>
    4427:	48 8b 15 12 4d 01 00 	mov    0x14d12(%rip),%rdx        # 19140 <jstring_log>
    442e:	48 8d 05 6b ec 00 00 	lea    0xec6b(%rip),%rax        # 130a0 <_IO_stdin_used+0xa0>
    4435:	48 89 c7             	mov    %rax,%rdi
    4438:	b8 00 00 00 00       	mov    $0x0,%eax
    443d:	ff d2                	call   *%rdx
    443f:	b8 00 00 00 00       	mov    $0x0,%eax
    4444:	eb 67                	jmp    44ad <jstring_memory_reset+0xa0>
    4446:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    444b:	75 14                	jne    4461 <jstring_memory_reset+0x54>
    444d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4452:	75 0d                	jne    4461 <jstring_memory_reset+0x54>
    4454:	48 c7 05 29 6e 01 00 	movq   $0x0,0x16e29(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    445b:	00 00 00 00 
    445f:	eb 21                	jmp    4482 <jstring_memory_reset+0x75>
    4461:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4465:	48 89 05 14 6e 01 00 	mov    %rax,0x16e14(%rip)        # 1b280 <jstring_temporary_memory_info>
    446c:	48 c7 05 11 6e 01 00 	movq   $0x0,0x16e11(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    4473:	00 00 00 00 
    4477:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    447b:	48 89 05 0e 6e 01 00 	mov    %rax,0x16e0e(%rip)        # 1b290 <jstring_temporary_memory_info+0x10>
    4482:	48 8b 0d b7 4c 01 00 	mov    0x14cb7(%rip),%rcx        # 19140 <jstring_log>
    4489:	48 8b 15 00 6e 01 00 	mov    0x16e00(%rip),%rdx        # 1b290 <jstring_temporary_memory_info+0x10>
    4490:	48 8b 05 e9 6d 01 00 	mov    0x16de9(%rip),%rax        # 1b280 <jstring_temporary_memory_info>
    4497:	48 8d 3d a2 ec 00 00 	lea    0xeca2(%rip),%rdi        # 13140 <_IO_stdin_used+0x140>
    449e:	48 89 c6             	mov    %rax,%rsi
    44a1:	b8 00 00 00 00       	mov    $0x0,%eax
    44a6:	ff d1                	call   *%rcx
    44a8:	b8 01 00 00 00       	mov    $0x1,%eax
    44ad:	c9                   	leave
    44ae:	c3                   	ret

00000000000044af <jstring_load_logging_function>:
    44af:	55                   	push   %rbp
    44b0:	48 89 e5             	mov    %rsp,%rbp
    44b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44b7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    44bc:	75 07                	jne    44c5 <jstring_load_logging_function+0x16>
    44be:	b8 00 00 00 00       	mov    $0x0,%eax
    44c3:	eb 10                	jmp    44d5 <jstring_load_logging_function+0x26>
    44c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44c9:	48 89 05 70 4c 01 00 	mov    %rax,0x14c70(%rip)        # 19140 <jstring_log>
    44d0:	b8 01 00 00 00       	mov    $0x1,%eax
    44d5:	5d                   	pop    %rbp
    44d6:	c3                   	ret

00000000000044d7 <jstring_temporary_memory_allocate_string>:
    44d7:	55                   	push   %rbp
    44d8:	48 89 e5             	mov    %rsp,%rbp
    44db:	48 83 ec 20          	sub    $0x20,%rsp
    44df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    44e3:	8b 05 af 6d 01 00    	mov    0x16daf(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    44e9:	85 c0                	test   %eax,%eax
    44eb:	75 1f                	jne    450c <jstring_temporary_memory_allocate_string+0x35>
    44ed:	48 8b 15 4c 4c 01 00 	mov    0x14c4c(%rip),%rdx        # 19140 <jstring_log>
    44f4:	48 8d 05 a5 ec 00 00 	lea    0xeca5(%rip),%rax        # 131a0 <_IO_stdin_used+0x1a0>
    44fb:	48 89 c7             	mov    %rax,%rdi
    44fe:	b8 00 00 00 00       	mov    $0x0,%eax
    4503:	ff d2                	call   *%rdx
    4505:	b8 00 00 00 00       	mov    $0x0,%eax
    450a:	eb 7a                	jmp    4586 <jstring_temporary_memory_allocate_string+0xaf>
    450c:	48 8b 15 75 6d 01 00 	mov    0x16d75(%rip),%rdx        # 1b288 <jstring_temporary_memory_info+0x8>
    4513:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4517:	48 01 d0             	add    %rdx,%rax
    451a:	48 8b 15 5f 6d 01 00 	mov    0x16d5f(%rip),%rdx        # 1b280 <jstring_temporary_memory_info>
    4521:	48 39 c2             	cmp    %rax,%rdx
    4524:	73 32                	jae    4558 <jstring_temporary_memory_allocate_string+0x81>
    4526:	4c 8b 05 13 4c 01 00 	mov    0x14c13(%rip),%r8        # 19140 <jstring_log>
    452d:	48 8b 0d 54 6d 01 00 	mov    0x16d54(%rip),%rcx        # 1b288 <jstring_temporary_memory_info+0x8>
    4534:	48 8b 15 45 6d 01 00 	mov    0x16d45(%rip),%rdx        # 1b280 <jstring_temporary_memory_info>
    453b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    453f:	48 8d 3d da ec 00 00 	lea    0xecda(%rip),%rdi        # 13220 <_IO_stdin_used+0x220>
    4546:	48 89 c6             	mov    %rax,%rsi
    4549:	b8 00 00 00 00       	mov    $0x0,%eax
    454e:	41 ff d0             	call   *%r8
    4551:	b8 00 00 00 00       	mov    $0x0,%eax
    4556:	eb 2e                	jmp    4586 <jstring_temporary_memory_allocate_string+0xaf>
    4558:	48 8b 15 31 6d 01 00 	mov    0x16d31(%rip),%rdx        # 1b290 <jstring_temporary_memory_info+0x10>
    455f:	48 8b 05 22 6d 01 00 	mov    0x16d22(%rip),%rax        # 1b288 <jstring_temporary_memory_info+0x8>
    4566:	48 01 d0             	add    %rdx,%rax
    4569:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    456d:	48 8b 15 14 6d 01 00 	mov    0x16d14(%rip),%rdx        # 1b288 <jstring_temporary_memory_info+0x8>
    4574:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4578:	48 01 d0             	add    %rdx,%rax
    457b:	48 89 05 06 6d 01 00 	mov    %rax,0x16d06(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    4582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4586:	c9                   	leave
    4587:	c3                   	ret

0000000000004588 <jstring_create_temporary>:
    4588:	55                   	push   %rbp
    4589:	48 89 e5             	mov    %rsp,%rbp
    458c:	41 56                	push   %r14
    458e:	41 55                	push   %r13
    4590:	41 54                	push   %r12
    4592:	53                   	push   %rbx
    4593:	48 83 ec 60          	sub    $0x60,%rsp
    4597:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    459b:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    459f:	4c 8d 65 a0          	lea    -0x60(%rbp),%r12
    45a3:	4d 89 e6             	mov    %r12,%r14
    45a6:	83 3d b3 6c 01 00 00 	cmpl   $0x0,0x16cb3(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    45ad:	74 12                	je     45c1 <jstring_create_temporary+0x39>
    45af:	bf 40 00 00 00       	mov    $0x40,%edi
    45b4:	e8 e7 fa ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    45b9:	48 85 c0             	test   %rax,%rax
    45bc:	74 03                	je     45c1 <jstring_create_temporary+0x39>
    45be:	49 89 c4             	mov    %rax,%r12
    45c1:	49 8d 44 24 40       	lea    0x40(%r12),%rax
    45c6:	48 89 c3             	mov    %rax,%rbx
    45c9:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    45d0:	41 
    45d1:	48 8d 05 08 ed 00 00 	lea    0xed08(%rip),%rax        # 132e0 <_IO_stdin_used+0x2e0>
    45d8:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    45dd:	48 8d 05 a4 ff ff ff 	lea    -0x5c(%rip),%rax        # 4588 <jstring_create_temporary>
    45e4:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    45e9:	4d 89 e5             	mov    %r12,%r13
    45ec:	49 c1 ed 03          	shr    $0x3,%r13
    45f0:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    45f7:	f1 f1 f1 f1 
    45fb:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    4602:	00 00 f3 f3 
    4606:	c7 43 e0 00 00 00 00 	movl   $0x0,-0x20(%rbx)
    460d:	c7 43 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbx)
    4614:	48 c7 43 e8 00 00 00 	movq   $0x0,-0x18(%rbx)
    461b:	00 
    461c:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    4621:	75 2c                	jne    464f <jstring_create_temporary+0xc7>
    4623:	48 8b 15 16 4b 01 00 	mov    0x14b16(%rip),%rdx        # 19140 <jstring_log>
    462a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    462e:	48 8d 0d cb ec 00 00 	lea    0xeccb(%rip),%rcx        # 13300 <_IO_stdin_used+0x300>
    4635:	48 89 c6             	mov    %rax,%rsi
    4638:	48 89 cf             	mov    %rcx,%rdi
    463b:	b8 00 00 00 00       	mov    $0x0,%eax
    4640:	ff d2                	call   *%rdx
    4642:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    4646:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    464a:	e9 9c 01 00 00       	jmp    47eb <jstring_create_temporary+0x263>
    464f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4653:	89 43 e0             	mov    %eax,-0x20(%rbx)
    4656:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    465a:	48 83 c0 01          	add    $0x1,%rax
    465e:	01 c0                	add    %eax,%eax
    4660:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    4663:	8b 43 e4             	mov    -0x1c(%rbx),%eax
    4666:	89 c0                	mov    %eax,%eax
    4668:	48 89 c7             	mov    %rax,%rdi
    466b:	e8 67 fe ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    4670:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4674:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    467b:	e9 0b 01 00 00       	jmp    478b <jstring_create_temporary+0x203>
    4680:	8b 55 94             	mov    -0x6c(%rbp),%edx
    4683:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4687:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    468b:	48 89 c8             	mov    %rcx,%rax
    468e:	48 89 c2             	mov    %rax,%rdx
    4691:	48 c1 ea 03          	shr    $0x3,%rdx
    4695:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    469c:	0f b6 12             	movzbl (%rdx),%edx
    469f:	84 d2                	test   %dl,%dl
    46a1:	40 0f 95 c6          	setne  %sil
    46a5:	48 89 c7             	mov    %rax,%rdi
    46a8:	83 e7 07             	and    $0x7,%edi
    46ab:	40 38 d7             	cmp    %dl,%dil
    46ae:	0f 9d c2             	setge  %dl
    46b1:	21 f2                	and    %esi,%edx
    46b3:	84 d2                	test   %dl,%dl
    46b5:	74 08                	je     46bf <jstring_create_temporary+0x137>
    46b7:	48 89 c7             	mov    %rax,%rdi
    46ba:	e8 d1 fa ff ff       	call   4190 <__asan_report_load1@plt>
    46bf:	0f b6 01             	movzbl (%rcx),%eax
    46c2:	84 c0                	test   %al,%al
    46c4:	75 3b                	jne    4701 <jstring_create_temporary+0x179>
    46c6:	48 8b 15 73 4a 01 00 	mov    0x14a73(%rip),%rdx        # 19140 <jstring_log>
    46cd:	48 8d 05 cc ec 00 00 	lea    0xeccc(%rip),%rax        # 133a0 <_IO_stdin_used+0x3a0>
    46d4:	48 89 c7             	mov    %rax,%rdi
    46d7:	b8 00 00 00 00       	mov    $0x0,%eax
    46dc:	ff d2                	call   *%rdx
    46de:	c7 43 e0 00 00 00 00 	movl   $0x0,-0x20(%rbx)
    46e5:	c7 43 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbx)
    46ec:	48 c7 43 e8 00 00 00 	movq   $0x0,-0x18(%rbx)
    46f3:	00 
    46f4:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    46f8:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    46fc:	e9 ea 00 00 00       	jmp    47eb <jstring_create_temporary+0x263>
    4701:	8b 55 94             	mov    -0x6c(%rbp),%edx
    4704:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4708:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    470c:	8b 55 94             	mov    -0x6c(%rbp),%edx
    470f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4713:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4717:	48 89 f0             	mov    %rsi,%rax
    471a:	48 89 c2             	mov    %rax,%rdx
    471d:	48 c1 ea 03          	shr    $0x3,%rdx
    4721:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4728:	0f b6 12             	movzbl (%rdx),%edx
    472b:	84 d2                	test   %dl,%dl
    472d:	40 0f 95 c7          	setne  %dil
    4731:	49 89 c0             	mov    %rax,%r8
    4734:	41 83 e0 07          	and    $0x7,%r8d
    4738:	41 38 d0             	cmp    %dl,%r8b
    473b:	0f 9d c2             	setge  %dl
    473e:	21 fa                	and    %edi,%edx
    4740:	84 d2                	test   %dl,%dl
    4742:	74 08                	je     474c <jstring_create_temporary+0x1c4>
    4744:	48 89 c7             	mov    %rax,%rdi
    4747:	e8 44 fa ff ff       	call   4190 <__asan_report_load1@plt>
    474c:	0f b6 36             	movzbl (%rsi),%esi
    474f:	48 89 c8             	mov    %rcx,%rax
    4752:	48 89 c2             	mov    %rax,%rdx
    4755:	48 c1 ea 03          	shr    $0x3,%rdx
    4759:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4760:	0f b6 12             	movzbl (%rdx),%edx
    4763:	84 d2                	test   %dl,%dl
    4765:	40 0f 95 c7          	setne  %dil
    4769:	49 89 c0             	mov    %rax,%r8
    476c:	41 83 e0 07          	and    $0x7,%r8d
    4770:	41 38 d0             	cmp    %dl,%r8b
    4773:	0f 9d c2             	setge  %dl
    4776:	21 fa                	and    %edi,%edx
    4778:	84 d2                	test   %dl,%dl
    477a:	74 08                	je     4784 <jstring_create_temporary+0x1fc>
    477c:	48 89 c7             	mov    %rax,%rdi
    477f:	e8 2c fa ff ff       	call   41b0 <__asan_report_store1@plt>
    4784:	40 88 31             	mov    %sil,(%rcx)
    4787:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
    478b:	8b 45 94             	mov    -0x6c(%rbp),%eax
    478e:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    4792:	0f 82 e8 fe ff ff    	jb     4680 <jstring_create_temporary+0xf8>
    4798:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    479c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    47a0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    47a4:	48 89 c8             	mov    %rcx,%rax
    47a7:	48 89 c2             	mov    %rax,%rdx
    47aa:	48 c1 ea 03          	shr    $0x3,%rdx
    47ae:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    47b5:	0f b6 12             	movzbl (%rdx),%edx
    47b8:	84 d2                	test   %dl,%dl
    47ba:	40 0f 95 c6          	setne  %sil
    47be:	48 89 c7             	mov    %rax,%rdi
    47c1:	83 e7 07             	and    $0x7,%edi
    47c4:	40 38 d7             	cmp    %dl,%dil
    47c7:	0f 9d c2             	setge  %dl
    47ca:	21 f2                	and    %esi,%edx
    47cc:	84 d2                	test   %dl,%dl
    47ce:	74 08                	je     47d8 <jstring_create_temporary+0x250>
    47d0:	48 89 c7             	mov    %rax,%rdi
    47d3:	e8 d8 f9 ff ff       	call   41b0 <__asan_report_store1@plt>
    47d8:	c6 01 00             	movb   $0x0,(%rcx)
    47db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    47df:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    47e3:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    47e7:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    47eb:	4d 39 e6             	cmp    %r12,%r14
    47ee:	74 23                	je     4813 <jstring_create_temporary+0x28b>
    47f0:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    47f7:	45 
    47f8:	48 be f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rsi
    47ff:	f5 f5 f5 
    4802:	49 89 b5 00 80 ff 7f 	mov    %rsi,0x7fff8000(%r13)
    4809:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    480e:	c6 01 00             	movb   $0x0,(%rcx)
    4811:	eb 0b                	jmp    481e <jstring_create_temporary+0x296>
    4813:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    481a:	00 00 00 00 
    481e:	48 83 c4 60          	add    $0x60,%rsp
    4822:	5b                   	pop    %rbx
    4823:	41 5c                	pop    %r12
    4825:	41 5d                	pop    %r13
    4827:	41 5e                	pop    %r14
    4829:	5d                   	pop    %rbp
    482a:	c3                   	ret

000000000000482b <jstring_create_temporary_from_initial_chars>:
    482b:	55                   	push   %rbp
    482c:	48 89 e5             	mov    %rsp,%rbp
    482f:	41 56                	push   %r14
    4831:	41 55                	push   %r13
    4833:	41 54                	push   %r12
    4835:	53                   	push   %rbx
    4836:	48 83 ec 60          	sub    $0x60,%rsp
    483a:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    483e:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    4842:	4c 8d 65 a0          	lea    -0x60(%rbp),%r12
    4846:	4d 89 e6             	mov    %r12,%r14
    4849:	83 3d 10 6a 01 00 00 	cmpl   $0x0,0x16a10(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    4850:	74 12                	je     4864 <jstring_create_temporary_from_initial_chars+0x39>
    4852:	bf 40 00 00 00       	mov    $0x40,%edi
    4857:	e8 44 f8 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    485c:	48 85 c0             	test   %rax,%rax
    485f:	74 03                	je     4864 <jstring_create_temporary_from_initial_chars+0x39>
    4861:	49 89 c4             	mov    %rax,%r12
    4864:	49 8d 44 24 40       	lea    0x40(%r12),%rax
    4869:	48 89 c3             	mov    %rax,%rbx
    486c:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    4873:	41 
    4874:	48 8d 05 c5 eb 00 00 	lea    0xebc5(%rip),%rax        # 13440 <_IO_stdin_used+0x440>
    487b:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    4880:	48 8d 05 a4 ff ff ff 	lea    -0x5c(%rip),%rax        # 482b <jstring_create_temporary_from_initial_chars>
    4887:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    488c:	4d 89 e5             	mov    %r12,%r13
    488f:	49 c1 ed 03          	shr    $0x3,%r13
    4893:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    489a:	f1 f1 f1 f1 
    489e:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    48a5:	00 00 f3 f3 
    48a9:	c7 43 e0 00 00 00 00 	movl   $0x0,-0x20(%rbx)
    48b0:	c7 43 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbx)
    48b7:	48 c7 43 e8 00 00 00 	movq   $0x0,-0x18(%rbx)
    48be:	00 
    48bf:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    48c4:	75 2c                	jne    48f2 <jstring_create_temporary_from_initial_chars+0xc7>
    48c6:	48 8b 15 73 48 01 00 	mov    0x14873(%rip),%rdx        # 19140 <jstring_log>
    48cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    48d1:	48 8d 0d 88 eb 00 00 	lea    0xeb88(%rip),%rcx        # 13460 <_IO_stdin_used+0x460>
    48d8:	48 89 c6             	mov    %rax,%rsi
    48db:	48 89 cf             	mov    %rcx,%rdi
    48de:	b8 00 00 00 00       	mov    $0x0,%eax
    48e3:	ff d2                	call   *%rdx
    48e5:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    48e9:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    48ed:	e9 9c 01 00 00       	jmp    4a8e <jstring_create_temporary_from_initial_chars+0x263>
    48f2:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    48f6:	89 43 e0             	mov    %eax,-0x20(%rbx)
    48f9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    48fd:	48 83 c0 01          	add    $0x1,%rax
    4901:	01 c0                	add    %eax,%eax
    4903:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    4906:	8b 43 e4             	mov    -0x1c(%rbx),%eax
    4909:	89 c0                	mov    %eax,%eax
    490b:	48 89 c7             	mov    %rax,%rdi
    490e:	e8 c4 fb ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    4913:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4917:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    491e:	e9 0b 01 00 00       	jmp    4a2e <jstring_create_temporary_from_initial_chars+0x203>
    4923:	8b 55 94             	mov    -0x6c(%rbp),%edx
    4926:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    492a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    492e:	48 89 c8             	mov    %rcx,%rax
    4931:	48 89 c2             	mov    %rax,%rdx
    4934:	48 c1 ea 03          	shr    $0x3,%rdx
    4938:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    493f:	0f b6 12             	movzbl (%rdx),%edx
    4942:	84 d2                	test   %dl,%dl
    4944:	40 0f 95 c6          	setne  %sil
    4948:	48 89 c7             	mov    %rax,%rdi
    494b:	83 e7 07             	and    $0x7,%edi
    494e:	40 38 d7             	cmp    %dl,%dil
    4951:	0f 9d c2             	setge  %dl
    4954:	21 f2                	and    %esi,%edx
    4956:	84 d2                	test   %dl,%dl
    4958:	74 08                	je     4962 <jstring_create_temporary_from_initial_chars+0x137>
    495a:	48 89 c7             	mov    %rax,%rdi
    495d:	e8 2e f8 ff ff       	call   4190 <__asan_report_load1@plt>
    4962:	0f b6 01             	movzbl (%rcx),%eax
    4965:	84 c0                	test   %al,%al
    4967:	75 3b                	jne    49a4 <jstring_create_temporary_from_initial_chars+0x179>
    4969:	48 8b 15 d0 47 01 00 	mov    0x147d0(%rip),%rdx        # 19140 <jstring_log>
    4970:	48 8d 05 89 eb 00 00 	lea    0xeb89(%rip),%rax        # 13500 <_IO_stdin_used+0x500>
    4977:	48 89 c7             	mov    %rax,%rdi
    497a:	b8 00 00 00 00       	mov    $0x0,%eax
    497f:	ff d2                	call   *%rdx
    4981:	c7 43 e0 00 00 00 00 	movl   $0x0,-0x20(%rbx)
    4988:	c7 43 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbx)
    498f:	48 c7 43 e8 00 00 00 	movq   $0x0,-0x18(%rbx)
    4996:	00 
    4997:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    499b:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    499f:	e9 ea 00 00 00       	jmp    4a8e <jstring_create_temporary_from_initial_chars+0x263>
    49a4:	8b 55 94             	mov    -0x6c(%rbp),%edx
    49a7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    49ab:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    49af:	8b 55 94             	mov    -0x6c(%rbp),%edx
    49b2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    49b6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    49ba:	48 89 f0             	mov    %rsi,%rax
    49bd:	48 89 c2             	mov    %rax,%rdx
    49c0:	48 c1 ea 03          	shr    $0x3,%rdx
    49c4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    49cb:	0f b6 12             	movzbl (%rdx),%edx
    49ce:	84 d2                	test   %dl,%dl
    49d0:	40 0f 95 c7          	setne  %dil
    49d4:	49 89 c0             	mov    %rax,%r8
    49d7:	41 83 e0 07          	and    $0x7,%r8d
    49db:	41 38 d0             	cmp    %dl,%r8b
    49de:	0f 9d c2             	setge  %dl
    49e1:	21 fa                	and    %edi,%edx
    49e3:	84 d2                	test   %dl,%dl
    49e5:	74 08                	je     49ef <jstring_create_temporary_from_initial_chars+0x1c4>
    49e7:	48 89 c7             	mov    %rax,%rdi
    49ea:	e8 a1 f7 ff ff       	call   4190 <__asan_report_load1@plt>
    49ef:	0f b6 36             	movzbl (%rsi),%esi
    49f2:	48 89 c8             	mov    %rcx,%rax
    49f5:	48 89 c2             	mov    %rax,%rdx
    49f8:	48 c1 ea 03          	shr    $0x3,%rdx
    49fc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4a03:	0f b6 12             	movzbl (%rdx),%edx
    4a06:	84 d2                	test   %dl,%dl
    4a08:	40 0f 95 c7          	setne  %dil
    4a0c:	49 89 c0             	mov    %rax,%r8
    4a0f:	41 83 e0 07          	and    $0x7,%r8d
    4a13:	41 38 d0             	cmp    %dl,%r8b
    4a16:	0f 9d c2             	setge  %dl
    4a19:	21 fa                	and    %edi,%edx
    4a1b:	84 d2                	test   %dl,%dl
    4a1d:	74 08                	je     4a27 <jstring_create_temporary_from_initial_chars+0x1fc>
    4a1f:	48 89 c7             	mov    %rax,%rdi
    4a22:	e8 89 f7 ff ff       	call   41b0 <__asan_report_store1@plt>
    4a27:	40 88 31             	mov    %sil,(%rcx)
    4a2a:	83 45 94 01          	addl   $0x1,-0x6c(%rbp)
    4a2e:	8b 45 94             	mov    -0x6c(%rbp),%eax
    4a31:	48 3b 45 80          	cmp    -0x80(%rbp),%rax
    4a35:	0f 82 e8 fe ff ff    	jb     4923 <jstring_create_temporary_from_initial_chars+0xf8>
    4a3b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    4a3f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    4a43:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4a47:	48 89 c8             	mov    %rcx,%rax
    4a4a:	48 89 c2             	mov    %rax,%rdx
    4a4d:	48 c1 ea 03          	shr    $0x3,%rdx
    4a51:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4a58:	0f b6 12             	movzbl (%rdx),%edx
    4a5b:	84 d2                	test   %dl,%dl
    4a5d:	40 0f 95 c6          	setne  %sil
    4a61:	48 89 c7             	mov    %rax,%rdi
    4a64:	83 e7 07             	and    $0x7,%edi
    4a67:	40 38 d7             	cmp    %dl,%dil
    4a6a:	0f 9d c2             	setge  %dl
    4a6d:	21 f2                	and    %esi,%edx
    4a6f:	84 d2                	test   %dl,%dl
    4a71:	74 08                	je     4a7b <jstring_create_temporary_from_initial_chars+0x250>
    4a73:	48 89 c7             	mov    %rax,%rdi
    4a76:	e8 35 f7 ff ff       	call   41b0 <__asan_report_store1@plt>
    4a7b:	c6 01 00             	movb   $0x0,(%rcx)
    4a7e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4a82:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    4a86:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    4a8a:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    4a8e:	4d 39 e6             	cmp    %r12,%r14
    4a91:	74 23                	je     4ab6 <jstring_create_temporary_from_initial_chars+0x28b>
    4a93:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    4a9a:	45 
    4a9b:	48 be f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rsi
    4aa2:	f5 f5 f5 
    4aa5:	49 89 b5 00 80 ff 7f 	mov    %rsi,0x7fff8000(%r13)
    4aac:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    4ab1:	c6 01 00             	movb   $0x0,(%rcx)
    4ab4:	eb 0b                	jmp    4ac1 <jstring_create_temporary_from_initial_chars+0x296>
    4ab6:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    4abd:	00 00 00 00 
    4ac1:	48 83 c4 60          	add    $0x60,%rsp
    4ac5:	5b                   	pop    %rbx
    4ac6:	41 5c                	pop    %r12
    4ac8:	41 5d                	pop    %r13
    4aca:	41 5e                	pop    %r14
    4acc:	5d                   	pop    %rbp
    4acd:	c3                   	ret

0000000000004ace <jstring_create_format_string>:
    4ace:	55                   	push   %rbp
    4acf:	48 89 e5             	mov    %rsp,%rbp
    4ad2:	48 83 ec 48          	sub    $0x48,%rsp
    4ad6:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    4add:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    4ae4:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    4aeb:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    4af2:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    4af9:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    4b00:	84 c0                	test   %al,%al
    4b02:	74 20                	je     4b24 <jstring_create_format_string+0x56>
    4b04:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    4b08:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    4b0c:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    4b10:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    4b14:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    4b18:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    4b1c:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    4b20:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    4b24:	b8 01 00 00 00       	mov    $0x1,%eax
    4b29:	c9                   	leave
    4b2a:	c3                   	ret

0000000000004b2b <jstring_length>:
    4b2b:	55                   	push   %rbp
    4b2c:	48 89 e5             	mov    %rsp,%rbp
    4b2f:	48 83 ec 20          	sub    $0x20,%rsp
    4b33:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b3f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    4b46:	eb 7d                	jmp    4bc5 <jstring_length+0x9a>
    4b48:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    4b4d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    4b51:	81 7d f4 ff 0f 00 00 	cmpl   $0xfff,-0xc(%rbp)
    4b58:	76 6b                	jbe    4bc5 <jstring_length+0x9a>
    4b5a:	4c 8b 05 df 45 01 00 	mov    0x145df(%rip),%r8        # 19140 <jstring_log>
    4b61:	48 8d 15 38 ea 00 00 	lea    0xea38(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    4b68:	48 8d 35 71 ea 00 00 	lea    0xea71(%rip),%rsi        # 135e0 <_IO_stdin_used+0x5e0>
    4b6f:	48 8d 05 aa ea 00 00 	lea    0xeaaa(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    4b76:	b9 26 01 00 00       	mov    $0x126,%ecx
    4b7b:	48 89 c7             	mov    %rax,%rdi
    4b7e:	b8 00 00 00 00       	mov    $0x0,%eax
    4b83:	41 ff d0             	call   *%r8
    4b86:	b9 00 00 00 00       	mov    $0x0,%ecx
    4b8b:	48 89 c8             	mov    %rcx,%rax
    4b8e:	48 89 c2             	mov    %rax,%rdx
    4b91:	48 c1 ea 03          	shr    $0x3,%rdx
    4b95:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4b9c:	0f b6 12             	movzbl (%rdx),%edx
    4b9f:	84 d2                	test   %dl,%dl
    4ba1:	40 0f 95 c6          	setne  %sil
    4ba5:	48 89 c7             	mov    %rax,%rdi
    4ba8:	83 e7 07             	and    $0x7,%edi
    4bab:	40 38 d7             	cmp    %dl,%dil
    4bae:	0f 9d c2             	setge  %dl
    4bb1:	21 f2                	and    %esi,%edx
    4bb3:	84 d2                	test   %dl,%dl
    4bb5:	74 08                	je     4bbf <jstring_length+0x94>
    4bb7:	48 89 c7             	mov    %rax,%rdi
    4bba:	e8 d1 f5 ff ff       	call   4190 <__asan_report_load1@plt>
    4bbf:	0f b6 01             	movzbl (%rcx),%eax
    4bc2:	88 45 f3             	mov    %al,-0xd(%rbp)
    4bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc9:	48 89 c2             	mov    %rax,%rdx
    4bcc:	48 c1 ea 03          	shr    $0x3,%rdx
    4bd0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4bd7:	0f b6 12             	movzbl (%rdx),%edx
    4bda:	84 d2                	test   %dl,%dl
    4bdc:	0f 95 c1             	setne  %cl
    4bdf:	48 89 c6             	mov    %rax,%rsi
    4be2:	83 e6 07             	and    $0x7,%esi
    4be5:	40 38 d6             	cmp    %dl,%sil
    4be8:	0f 9d c2             	setge  %dl
    4beb:	21 ca                	and    %ecx,%edx
    4bed:	84 d2                	test   %dl,%dl
    4bef:	74 08                	je     4bf9 <jstring_length+0xce>
    4bf1:	48 89 c7             	mov    %rax,%rdi
    4bf4:	e8 97 f5 ff ff       	call   4190 <__asan_report_load1@plt>
    4bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bfd:	0f b6 00             	movzbl (%rax),%eax
    4c00:	84 c0                	test   %al,%al
    4c02:	0f 85 40 ff ff ff    	jne    4b48 <jstring_length+0x1d>
    4c08:	8b 45 f4             	mov    -0xc(%rbp),%eax
    4c0b:	c9                   	leave
    4c0c:	c3                   	ret

0000000000004c0d <jstring_compare_raw>:
    4c0d:	55                   	push   %rbp
    4c0e:	48 89 e5             	mov    %rsp,%rbp
    4c11:	48 83 ec 20          	sub    $0x20,%rsp
    4c15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4c1d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    4c24:	e9 2c 01 00 00       	jmp    4d55 <jstring_compare_raw+0x148>
    4c29:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c30:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4c34:	48 89 c8             	mov    %rcx,%rax
    4c37:	48 89 c2             	mov    %rax,%rdx
    4c3a:	48 c1 ea 03          	shr    $0x3,%rdx
    4c3e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4c45:	0f b6 12             	movzbl (%rdx),%edx
    4c48:	84 d2                	test   %dl,%dl
    4c4a:	40 0f 95 c6          	setne  %sil
    4c4e:	48 89 c7             	mov    %rax,%rdi
    4c51:	83 e7 07             	and    $0x7,%edi
    4c54:	40 38 d7             	cmp    %dl,%dil
    4c57:	0f 9d c2             	setge  %dl
    4c5a:	21 f2                	and    %esi,%edx
    4c5c:	84 d2                	test   %dl,%dl
    4c5e:	74 08                	je     4c68 <jstring_compare_raw+0x5b>
    4c60:	48 89 c7             	mov    %rax,%rdi
    4c63:	e8 28 f5 ff ff       	call   4190 <__asan_report_load1@plt>
    4c68:	0f b6 31             	movzbl (%rcx),%esi
    4c6b:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4c6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c72:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4c76:	48 89 c8             	mov    %rcx,%rax
    4c79:	48 89 c2             	mov    %rax,%rdx
    4c7c:	48 c1 ea 03          	shr    $0x3,%rdx
    4c80:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4c87:	0f b6 12             	movzbl (%rdx),%edx
    4c8a:	84 d2                	test   %dl,%dl
    4c8c:	40 0f 95 c7          	setne  %dil
    4c90:	49 89 c0             	mov    %rax,%r8
    4c93:	41 83 e0 07          	and    $0x7,%r8d
    4c97:	41 38 d0             	cmp    %dl,%r8b
    4c9a:	0f 9d c2             	setge  %dl
    4c9d:	21 fa                	and    %edi,%edx
    4c9f:	84 d2                	test   %dl,%dl
    4ca1:	74 08                	je     4cab <jstring_compare_raw+0x9e>
    4ca3:	48 89 c7             	mov    %rax,%rdi
    4ca6:	e8 e5 f4 ff ff       	call   4190 <__asan_report_load1@plt>
    4cab:	0f b6 01             	movzbl (%rcx),%eax
    4cae:	40 38 c6             	cmp    %al,%sil
    4cb1:	7d 0a                	jge    4cbd <jstring_compare_raw+0xb0>
    4cb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4cb8:	e9 52 02 00 00       	jmp    4f0f <jstring_compare_raw+0x302>
    4cbd:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cc4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4cc8:	48 89 c8             	mov    %rcx,%rax
    4ccb:	48 89 c2             	mov    %rax,%rdx
    4cce:	48 c1 ea 03          	shr    $0x3,%rdx
    4cd2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4cd9:	0f b6 12             	movzbl (%rdx),%edx
    4cdc:	84 d2                	test   %dl,%dl
    4cde:	40 0f 95 c6          	setne  %sil
    4ce2:	48 89 c7             	mov    %rax,%rdi
    4ce5:	83 e7 07             	and    $0x7,%edi
    4ce8:	40 38 d7             	cmp    %dl,%dil
    4ceb:	0f 9d c2             	setge  %dl
    4cee:	21 f2                	and    %esi,%edx
    4cf0:	84 d2                	test   %dl,%dl
    4cf2:	74 08                	je     4cfc <jstring_compare_raw+0xef>
    4cf4:	48 89 c7             	mov    %rax,%rdi
    4cf7:	e8 94 f4 ff ff       	call   4190 <__asan_report_load1@plt>
    4cfc:	0f b6 31             	movzbl (%rcx),%esi
    4cff:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4d02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4d06:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4d0a:	48 89 c8             	mov    %rcx,%rax
    4d0d:	48 89 c2             	mov    %rax,%rdx
    4d10:	48 c1 ea 03          	shr    $0x3,%rdx
    4d14:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4d1b:	0f b6 12             	movzbl (%rdx),%edx
    4d1e:	84 d2                	test   %dl,%dl
    4d20:	40 0f 95 c7          	setne  %dil
    4d24:	49 89 c0             	mov    %rax,%r8
    4d27:	41 83 e0 07          	and    $0x7,%r8d
    4d2b:	41 38 d0             	cmp    %dl,%r8b
    4d2e:	0f 9d c2             	setge  %dl
    4d31:	21 fa                	and    %edi,%edx
    4d33:	84 d2                	test   %dl,%dl
    4d35:	74 08                	je     4d3f <jstring_compare_raw+0x132>
    4d37:	48 89 c7             	mov    %rax,%rdi
    4d3a:	e8 51 f4 ff ff       	call   4190 <__asan_report_load1@plt>
    4d3f:	0f b6 01             	movzbl (%rcx),%eax
    4d42:	40 38 c6             	cmp    %al,%sil
    4d45:	7e 0a                	jle    4d51 <jstring_compare_raw+0x144>
    4d47:	b8 01 00 00 00       	mov    $0x1,%eax
    4d4c:	e9 be 01 00 00       	jmp    4f0f <jstring_compare_raw+0x302>
    4d51:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    4d55:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4d58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4d5c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4d60:	48 89 c8             	mov    %rcx,%rax
    4d63:	48 89 c2             	mov    %rax,%rdx
    4d66:	48 c1 ea 03          	shr    $0x3,%rdx
    4d6a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4d71:	0f b6 12             	movzbl (%rdx),%edx
    4d74:	84 d2                	test   %dl,%dl
    4d76:	40 0f 95 c6          	setne  %sil
    4d7a:	48 89 c7             	mov    %rax,%rdi
    4d7d:	83 e7 07             	and    $0x7,%edi
    4d80:	40 38 d7             	cmp    %dl,%dil
    4d83:	0f 9d c2             	setge  %dl
    4d86:	21 f2                	and    %esi,%edx
    4d88:	84 d2                	test   %dl,%dl
    4d8a:	74 08                	je     4d94 <jstring_compare_raw+0x187>
    4d8c:	48 89 c7             	mov    %rax,%rdi
    4d8f:	e8 fc f3 ff ff       	call   4190 <__asan_report_load1@plt>
    4d94:	0f b6 01             	movzbl (%rcx),%eax
    4d97:	84 c0                	test   %al,%al
    4d99:	74 4a                	je     4de5 <jstring_compare_raw+0x1d8>
    4d9b:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4d9e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4da2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4da6:	48 89 c8             	mov    %rcx,%rax
    4da9:	48 89 c2             	mov    %rax,%rdx
    4dac:	48 c1 ea 03          	shr    $0x3,%rdx
    4db0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4db7:	0f b6 12             	movzbl (%rdx),%edx
    4dba:	84 d2                	test   %dl,%dl
    4dbc:	40 0f 95 c6          	setne  %sil
    4dc0:	48 89 c7             	mov    %rax,%rdi
    4dc3:	83 e7 07             	and    $0x7,%edi
    4dc6:	40 38 d7             	cmp    %dl,%dil
    4dc9:	0f 9d c2             	setge  %dl
    4dcc:	21 f2                	and    %esi,%edx
    4dce:	84 d2                	test   %dl,%dl
    4dd0:	74 08                	je     4dda <jstring_compare_raw+0x1cd>
    4dd2:	48 89 c7             	mov    %rax,%rdi
    4dd5:	e8 b6 f3 ff ff       	call   4190 <__asan_report_load1@plt>
    4dda:	0f b6 01             	movzbl (%rcx),%eax
    4ddd:	84 c0                	test   %al,%al
    4ddf:	0f 85 44 fe ff ff    	jne    4c29 <jstring_compare_raw+0x1c>
    4de5:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4dec:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4df0:	48 89 c8             	mov    %rcx,%rax
    4df3:	48 89 c2             	mov    %rax,%rdx
    4df6:	48 c1 ea 03          	shr    $0x3,%rdx
    4dfa:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4e01:	0f b6 12             	movzbl (%rdx),%edx
    4e04:	84 d2                	test   %dl,%dl
    4e06:	40 0f 95 c6          	setne  %sil
    4e0a:	48 89 c7             	mov    %rax,%rdi
    4e0d:	83 e7 07             	and    $0x7,%edi
    4e10:	40 38 d7             	cmp    %dl,%dil
    4e13:	0f 9d c2             	setge  %dl
    4e16:	21 f2                	and    %esi,%edx
    4e18:	84 d2                	test   %dl,%dl
    4e1a:	74 08                	je     4e24 <jstring_compare_raw+0x217>
    4e1c:	48 89 c7             	mov    %rax,%rdi
    4e1f:	e8 6c f3 ff ff       	call   4190 <__asan_report_load1@plt>
    4e24:	0f b6 31             	movzbl (%rcx),%esi
    4e27:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4e2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e2e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4e32:	48 89 c8             	mov    %rcx,%rax
    4e35:	48 89 c2             	mov    %rax,%rdx
    4e38:	48 c1 ea 03          	shr    $0x3,%rdx
    4e3c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4e43:	0f b6 12             	movzbl (%rdx),%edx
    4e46:	84 d2                	test   %dl,%dl
    4e48:	40 0f 95 c7          	setne  %dil
    4e4c:	49 89 c0             	mov    %rax,%r8
    4e4f:	41 83 e0 07          	and    $0x7,%r8d
    4e53:	41 38 d0             	cmp    %dl,%r8b
    4e56:	0f 9d c2             	setge  %dl
    4e59:	21 fa                	and    %edi,%edx
    4e5b:	84 d2                	test   %dl,%dl
    4e5d:	74 08                	je     4e67 <jstring_compare_raw+0x25a>
    4e5f:	48 89 c7             	mov    %rax,%rdi
    4e62:	e8 29 f3 ff ff       	call   4190 <__asan_report_load1@plt>
    4e67:	0f b6 01             	movzbl (%rcx),%eax
    4e6a:	40 38 c6             	cmp    %al,%sil
    4e6d:	7d 0a                	jge    4e79 <jstring_compare_raw+0x26c>
    4e6f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    4e74:	e9 96 00 00 00       	jmp    4f0f <jstring_compare_raw+0x302>
    4e79:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4e7c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e80:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4e84:	48 89 c8             	mov    %rcx,%rax
    4e87:	48 89 c2             	mov    %rax,%rdx
    4e8a:	48 c1 ea 03          	shr    $0x3,%rdx
    4e8e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4e95:	0f b6 12             	movzbl (%rdx),%edx
    4e98:	84 d2                	test   %dl,%dl
    4e9a:	40 0f 95 c6          	setne  %sil
    4e9e:	48 89 c7             	mov    %rax,%rdi
    4ea1:	83 e7 07             	and    $0x7,%edi
    4ea4:	40 38 d7             	cmp    %dl,%dil
    4ea7:	0f 9d c2             	setge  %dl
    4eaa:	21 f2                	and    %esi,%edx
    4eac:	84 d2                	test   %dl,%dl
    4eae:	74 08                	je     4eb8 <jstring_compare_raw+0x2ab>
    4eb0:	48 89 c7             	mov    %rax,%rdi
    4eb3:	e8 d8 f2 ff ff       	call   4190 <__asan_report_load1@plt>
    4eb8:	0f b6 31             	movzbl (%rcx),%esi
    4ebb:	8b 55 fc             	mov    -0x4(%rbp),%edx
    4ebe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ec2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    4ec6:	48 89 c8             	mov    %rcx,%rax
    4ec9:	48 89 c2             	mov    %rax,%rdx
    4ecc:	48 c1 ea 03          	shr    $0x3,%rdx
    4ed0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    4ed7:	0f b6 12             	movzbl (%rdx),%edx
    4eda:	84 d2                	test   %dl,%dl
    4edc:	40 0f 95 c7          	setne  %dil
    4ee0:	49 89 c0             	mov    %rax,%r8
    4ee3:	41 83 e0 07          	and    $0x7,%r8d
    4ee7:	41 38 d0             	cmp    %dl,%r8b
    4eea:	0f 9d c2             	setge  %dl
    4eed:	21 fa                	and    %edi,%edx
    4eef:	84 d2                	test   %dl,%dl
    4ef1:	74 08                	je     4efb <jstring_compare_raw+0x2ee>
    4ef3:	48 89 c7             	mov    %rax,%rdi
    4ef6:	e8 95 f2 ff ff       	call   4190 <__asan_report_load1@plt>
    4efb:	0f b6 01             	movzbl (%rcx),%eax
    4efe:	40 38 c6             	cmp    %al,%sil
    4f01:	7e 07                	jle    4f0a <jstring_compare_raw+0x2fd>
    4f03:	b8 01 00 00 00       	mov    $0x1,%eax
    4f08:	eb 05                	jmp    4f0f <jstring_compare_raw+0x302>
    4f0a:	b8 00 00 00 00       	mov    $0x0,%eax
    4f0f:	c9                   	leave
    4f10:	c3                   	ret

0000000000004f11 <jstring_compare_jstring>:
    4f11:	55                   	push   %rbp
    4f12:	48 89 e5             	mov    %rsp,%rbp
    4f15:	41 54                	push   %r12
    4f17:	53                   	push   %rbx
    4f18:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    4f1f:	48 89 f8             	mov    %rdi,%rax
    4f22:	49 89 f0             	mov    %rsi,%r8
    4f25:	48 89 c6             	mov    %rax,%rsi
    4f28:	bf 00 00 00 00       	mov    $0x0,%edi
    4f2d:	4c 89 c7             	mov    %r8,%rdi
    4f30:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    4f37:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    4f3e:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
    4f45:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
    4f4c:	48 8d 9d 70 ff ff ff 	lea    -0x90(%rbp),%rbx
    4f53:	49 89 dc             	mov    %rbx,%r12
    4f56:	83 3d 03 63 01 00 00 	cmpl   $0x0,0x16303(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    4f5d:	74 12                	je     4f71 <jstring_compare_jstring+0x60>
    4f5f:	bf 60 00 00 00       	mov    $0x60,%edi
    4f64:	e8 77 f1 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    4f69:	48 85 c0             	test   %rax,%rax
    4f6c:	74 03                	je     4f71 <jstring_compare_jstring+0x60>
    4f6e:	48 89 c3             	mov    %rax,%rbx
    4f71:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    4f78:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    4f7f:	48 8d 15 fa e6 00 00 	lea    0xe6fa(%rip),%rdx        # 13680 <_IO_stdin_used+0x680>
    4f86:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    4f8a:	48 8d 15 80 ff ff ff 	lea    -0x80(%rip),%rdx        # 4f11 <jstring_compare_jstring>
    4f91:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    4f95:	48 89 da             	mov    %rbx,%rdx
    4f98:	48 c1 ea 03          	shr    $0x3,%rdx
    4f9c:	c7 82 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rdx)
    4fa3:	f1 f1 f1 
    4fa6:	c7 82 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rdx)
    4fad:	00 f2 f2 
    4fb0:	c7 82 08 80 ff 7f 00 	movl   $0xf3f30000,0x7fff8008(%rdx)
    4fb7:	00 f3 f3 
    4fba:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    4fc1:	00 00 
    4fc3:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    4fc7:	31 c9                	xor    %ecx,%ecx
    4fc9:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    4fd0:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
    4fd7:	48 89 70 a0          	mov    %rsi,-0x60(%rax)
    4fdb:	48 89 78 a8          	mov    %rdi,-0x58(%rax)
    4fdf:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    4fe6:	48 8b bd 38 ff ff ff 	mov    -0xc8(%rbp),%rdi
    4fed:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    4ff1:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    4ff5:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    4ff9:	48 89 ce             	mov    %rcx,%rsi
    4ffc:	48 89 f1             	mov    %rsi,%rcx
    4fff:	48 c1 e9 03          	shr    $0x3,%rcx
    5003:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    500a:	0f b6 09             	movzbl (%rcx),%ecx
    500d:	84 c9                	test   %cl,%cl
    500f:	40 0f 95 c7          	setne  %dil
    5013:	80 f9 03             	cmp    $0x3,%cl
    5016:	0f 9e c1             	setle  %cl
    5019:	21 f9                	and    %edi,%ecx
    501b:	84 c9                	test   %cl,%cl
    501d:	74 08                	je     5027 <jstring_compare_jstring+0x116>
    501f:	48 89 f7             	mov    %rsi,%rdi
    5022:	e8 c9 f0 ff ff       	call   40f0 <__asan_report_load4@plt>
    5027:	8b 78 a0             	mov    -0x60(%rax),%edi
    502a:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    502e:	48 89 ce             	mov    %rcx,%rsi
    5031:	48 89 f1             	mov    %rsi,%rcx
    5034:	48 c1 e9 03          	shr    $0x3,%rcx
    5038:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    503f:	0f b6 09             	movzbl (%rcx),%ecx
    5042:	84 c9                	test   %cl,%cl
    5044:	41 0f 95 c0          	setne  %r8b
    5048:	80 f9 03             	cmp    $0x3,%cl
    504b:	0f 9e c1             	setle  %cl
    504e:	44 21 c1             	and    %r8d,%ecx
    5051:	84 c9                	test   %cl,%cl
    5053:	74 08                	je     505d <jstring_compare_jstring+0x14c>
    5055:	48 89 f7             	mov    %rsi,%rdi
    5058:	e8 93 f0 ff ff       	call   40f0 <__asan_report_load4@plt>
    505d:	8b 48 c0             	mov    -0x40(%rax),%ecx
    5060:	39 cf                	cmp    %ecx,%edi
    5062:	73 0a                	jae    506e <jstring_compare_jstring+0x15d>
    5064:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5069:	e9 8f 02 00 00       	jmp    52fd <jstring_compare_jstring+0x3ec>
    506e:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    5072:	48 89 ce             	mov    %rcx,%rsi
    5075:	48 89 f1             	mov    %rsi,%rcx
    5078:	48 c1 e9 03          	shr    $0x3,%rcx
    507c:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    5083:	0f b6 09             	movzbl (%rcx),%ecx
    5086:	84 c9                	test   %cl,%cl
    5088:	40 0f 95 c7          	setne  %dil
    508c:	80 f9 03             	cmp    $0x3,%cl
    508f:	0f 9e c1             	setle  %cl
    5092:	21 f9                	and    %edi,%ecx
    5094:	84 c9                	test   %cl,%cl
    5096:	74 08                	je     50a0 <jstring_compare_jstring+0x18f>
    5098:	48 89 f7             	mov    %rsi,%rdi
    509b:	e8 50 f0 ff ff       	call   40f0 <__asan_report_load4@plt>
    50a0:	8b 78 a0             	mov    -0x60(%rax),%edi
    50a3:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    50a7:	48 89 ce             	mov    %rcx,%rsi
    50aa:	48 89 f1             	mov    %rsi,%rcx
    50ad:	48 c1 e9 03          	shr    $0x3,%rcx
    50b1:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    50b8:	0f b6 09             	movzbl (%rcx),%ecx
    50bb:	84 c9                	test   %cl,%cl
    50bd:	41 0f 95 c0          	setne  %r8b
    50c1:	80 f9 03             	cmp    $0x3,%cl
    50c4:	0f 9e c1             	setle  %cl
    50c7:	44 21 c1             	and    %r8d,%ecx
    50ca:	84 c9                	test   %cl,%cl
    50cc:	74 08                	je     50d6 <jstring_compare_jstring+0x1c5>
    50ce:	48 89 f7             	mov    %rsi,%rdi
    50d1:	e8 1a f0 ff ff       	call   40f0 <__asan_report_load4@plt>
    50d6:	8b 48 c0             	mov    -0x40(%rax),%ecx
    50d9:	39 f9                	cmp    %edi,%ecx
    50db:	73 0a                	jae    50e7 <jstring_compare_jstring+0x1d6>
    50dd:	b8 01 00 00 00       	mov    $0x1,%eax
    50e2:	e9 16 02 00 00       	jmp    52fd <jstring_compare_jstring+0x3ec>
    50e7:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    50eb:	48 83 c1 08          	add    $0x8,%rcx
    50ef:	48 89 ce             	mov    %rcx,%rsi
    50f2:	48 c1 ee 03          	shr    $0x3,%rsi
    50f6:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    50fd:	0f b6 36             	movzbl (%rsi),%esi
    5100:	40 84 f6             	test   %sil,%sil
    5103:	74 08                	je     510d <jstring_compare_jstring+0x1fc>
    5105:	48 89 cf             	mov    %rcx,%rdi
    5108:	e8 b3 f0 ff ff       	call   41c0 <__asan_report_load8@plt>
    510d:	48 8b 48 a8          	mov    -0x58(%rax),%rcx
    5111:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    5118:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    511c:	48 83 c1 08          	add    $0x8,%rcx
    5120:	48 89 ce             	mov    %rcx,%rsi
    5123:	48 c1 ee 03          	shr    $0x3,%rsi
    5127:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    512e:	0f b6 36             	movzbl (%rsi),%esi
    5131:	40 84 f6             	test   %sil,%sil
    5134:	74 08                	je     513e <jstring_compare_jstring+0x22d>
    5136:	48 89 cf             	mov    %rcx,%rdi
    5139:	e8 82 f0 ff ff       	call   41c0 <__asan_report_load8@plt>
    513e:	48 8b 48 c8          	mov    -0x38(%rax),%rcx
    5142:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    5149:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    5150:	00 00 00 
    5153:	e9 5f 01 00 00       	jmp    52b7 <jstring_compare_jstring+0x3a6>
    5158:	8b b5 5c ff ff ff    	mov    -0xa4(%rbp),%esi
    515e:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    5165:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    5169:	48 89 f9             	mov    %rdi,%rcx
    516c:	48 89 ce             	mov    %rcx,%rsi
    516f:	48 c1 ee 03          	shr    $0x3,%rsi
    5173:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    517a:	0f b6 36             	movzbl (%rsi),%esi
    517d:	40 84 f6             	test   %sil,%sil
    5180:	41 0f 95 c0          	setne  %r8b
    5184:	49 89 c9             	mov    %rcx,%r9
    5187:	41 83 e1 07          	and    $0x7,%r9d
    518b:	41 38 f1             	cmp    %sil,%r9b
    518e:	40 0f 9d c6          	setge  %sil
    5192:	44 21 c6             	and    %r8d,%esi
    5195:	40 84 f6             	test   %sil,%sil
    5198:	74 08                	je     51a2 <jstring_compare_jstring+0x291>
    519a:	48 89 cf             	mov    %rcx,%rdi
    519d:	e8 ee ef ff ff       	call   4190 <__asan_report_load1@plt>
    51a2:	44 0f b6 07          	movzbl (%rdi),%r8d
    51a6:	8b b5 5c ff ff ff    	mov    -0xa4(%rbp),%esi
    51ac:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    51b3:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    51b7:	48 89 f9             	mov    %rdi,%rcx
    51ba:	48 89 ce             	mov    %rcx,%rsi
    51bd:	48 c1 ee 03          	shr    $0x3,%rsi
    51c1:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    51c8:	0f b6 36             	movzbl (%rsi),%esi
    51cb:	40 84 f6             	test   %sil,%sil
    51ce:	41 0f 95 c1          	setne  %r9b
    51d2:	49 89 ca             	mov    %rcx,%r10
    51d5:	41 83 e2 07          	and    $0x7,%r10d
    51d9:	41 38 f2             	cmp    %sil,%r10b
    51dc:	40 0f 9d c6          	setge  %sil
    51e0:	44 21 ce             	and    %r9d,%esi
    51e3:	40 84 f6             	test   %sil,%sil
    51e6:	74 08                	je     51f0 <jstring_compare_jstring+0x2df>
    51e8:	48 89 cf             	mov    %rcx,%rdi
    51eb:	e8 a0 ef ff ff       	call   4190 <__asan_report_load1@plt>
    51f0:	0f b6 0f             	movzbl (%rdi),%ecx
    51f3:	41 38 c8             	cmp    %cl,%r8b
    51f6:	7d 0a                	jge    5202 <jstring_compare_jstring+0x2f1>
    51f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    51fd:	e9 fb 00 00 00       	jmp    52fd <jstring_compare_jstring+0x3ec>
    5202:	8b b5 5c ff ff ff    	mov    -0xa4(%rbp),%esi
    5208:	48 8b 8d 60 ff ff ff 	mov    -0xa0(%rbp),%rcx
    520f:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    5213:	48 89 f9             	mov    %rdi,%rcx
    5216:	48 89 ce             	mov    %rcx,%rsi
    5219:	48 c1 ee 03          	shr    $0x3,%rsi
    521d:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    5224:	0f b6 36             	movzbl (%rsi),%esi
    5227:	40 84 f6             	test   %sil,%sil
    522a:	41 0f 95 c0          	setne  %r8b
    522e:	49 89 c9             	mov    %rcx,%r9
    5231:	41 83 e1 07          	and    $0x7,%r9d
    5235:	41 38 f1             	cmp    %sil,%r9b
    5238:	40 0f 9d c6          	setge  %sil
    523c:	44 21 c6             	and    %r8d,%esi
    523f:	40 84 f6             	test   %sil,%sil
    5242:	74 08                	je     524c <jstring_compare_jstring+0x33b>
    5244:	48 89 cf             	mov    %rcx,%rdi
    5247:	e8 44 ef ff ff       	call   4190 <__asan_report_load1@plt>
    524c:	44 0f b6 07          	movzbl (%rdi),%r8d
    5250:	8b b5 5c ff ff ff    	mov    -0xa4(%rbp),%esi
    5256:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    525d:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    5261:	48 89 f9             	mov    %rdi,%rcx
    5264:	48 89 ce             	mov    %rcx,%rsi
    5267:	48 c1 ee 03          	shr    $0x3,%rsi
    526b:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    5272:	0f b6 36             	movzbl (%rsi),%esi
    5275:	40 84 f6             	test   %sil,%sil
    5278:	41 0f 95 c1          	setne  %r9b
    527c:	49 89 ca             	mov    %rcx,%r10
    527f:	41 83 e2 07          	and    $0x7,%r10d
    5283:	41 38 f2             	cmp    %sil,%r10b
    5286:	40 0f 9d c6          	setge  %sil
    528a:	44 21 ce             	and    %r9d,%esi
    528d:	40 84 f6             	test   %sil,%sil
    5290:	74 08                	je     529a <jstring_compare_jstring+0x389>
    5292:	48 89 cf             	mov    %rcx,%rdi
    5295:	e8 f6 ee ff ff       	call   4190 <__asan_report_load1@plt>
    529a:	0f b6 0f             	movzbl (%rdi),%ecx
    529d:	41 38 c8             	cmp    %cl,%r8b
    52a0:	7e 07                	jle    52a9 <jstring_compare_jstring+0x398>
    52a2:	b8 01 00 00 00       	mov    $0x1,%eax
    52a7:	eb 54                	jmp    52fd <jstring_compare_jstring+0x3ec>
    52a9:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    52b0:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    52b7:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    52bb:	48 89 ce             	mov    %rcx,%rsi
    52be:	48 89 f1             	mov    %rsi,%rcx
    52c1:	48 c1 e9 03          	shr    $0x3,%rcx
    52c5:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    52cc:	0f b6 09             	movzbl (%rcx),%ecx
    52cf:	84 c9                	test   %cl,%cl
    52d1:	40 0f 95 c7          	setne  %dil
    52d5:	80 f9 03             	cmp    $0x3,%cl
    52d8:	0f 9e c1             	setle  %cl
    52db:	21 f9                	and    %edi,%ecx
    52dd:	84 c9                	test   %cl,%cl
    52df:	74 08                	je     52e9 <jstring_compare_jstring+0x3d8>
    52e1:	48 89 f7             	mov    %rsi,%rdi
    52e4:	e8 07 ee ff ff       	call   40f0 <__asan_report_load4@plt>
    52e9:	8b 48 a0             	mov    -0x60(%rax),%ecx
    52ec:	39 8d 5c ff ff ff    	cmp    %ecx,-0xa4(%rbp)
    52f2:	0f 82 60 fe ff ff    	jb     5158 <jstring_compare_jstring+0x247>
    52f8:	b8 00 00 00 00       	mov    $0x0,%eax
    52fd:	89 c1                	mov    %eax,%ecx
    52ff:	49 39 dc             	cmp    %rbx,%r12
    5302:	74 2b                	je     532f <jstring_compare_jstring+0x41e>
    5304:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    530b:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    5312:	f5 f5 f5 
    5315:	48 89 82 00 80 ff 7f 	mov    %rax,0x7fff8000(%rdx)
    531c:	c7 82 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rdx)
    5323:	f5 f5 f5 
    5326:	48 8b 43 78          	mov    0x78(%rbx),%rax
    532a:	c6 00 00             	movb   $0x0,(%rax)
    532d:	eb 15                	jmp    5344 <jstring_compare_jstring+0x433>
    532f:	48 c7 82 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rdx)
    5336:	00 00 00 00 
    533a:	c7 82 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rdx)
    5341:	00 00 00 
    5344:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5348:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    534f:	00 00 
    5351:	74 05                	je     5358 <jstring_compare_jstring+0x447>
    5353:	e8 08 ee ff ff       	call   4160 <__stack_chk_fail@plt>
    5358:	89 c8                	mov    %ecx,%eax
    535a:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
    5361:	5b                   	pop    %rbx
    5362:	41 5c                	pop    %r12
    5364:	5d                   	pop    %rbp
    5365:	c3                   	ret

0000000000005366 <jstring_compare_jstring_and_raw>:
    5366:	55                   	push   %rbp
    5367:	48 89 e5             	mov    %rsp,%rbp
    536a:	41 57                	push   %r15
    536c:	41 56                	push   %r14
    536e:	41 55                	push   %r13
    5370:	41 54                	push   %r12
    5372:	53                   	push   %rbx
    5373:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    537a:	48 89 f8             	mov    %rdi,%rax
    537d:	48 89 c1             	mov    %rax,%rcx
    5380:	bb 00 00 00 00       	mov    $0x0,%ebx
    5385:	48 89 f3             	mov    %rsi,%rbx
    5388:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
    538f:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
    5396:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    539d:	4c 8d a5 70 ff ff ff 	lea    -0x90(%rbp),%r12
    53a4:	4d 89 e7             	mov    %r12,%r15
    53a7:	83 3d b2 5e 01 00 00 	cmpl   $0x0,0x15eb2(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    53ae:	74 12                	je     53c2 <jstring_compare_jstring_and_raw+0x5c>
    53b0:	bf 40 00 00 00       	mov    $0x40,%edi
    53b5:	e8 e6 ec ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    53ba:	48 85 c0             	test   %rax,%rax
    53bd:	74 03                	je     53c2 <jstring_compare_jstring_and_raw+0x5c>
    53bf:	49 89 c4             	mov    %rax,%r12
    53c2:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    53c7:	48 89 c3             	mov    %rax,%rbx
    53ca:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    53d1:	41 
    53d2:	48 8d 05 cf e2 00 00 	lea    0xe2cf(%rip),%rax        # 136a8 <_IO_stdin_used+0x6a8>
    53d9:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    53de:	48 8d 05 81 ff ff ff 	lea    -0x7f(%rip),%rax        # 5366 <jstring_compare_jstring_and_raw>
    53e5:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    53ea:	4d 89 e5             	mov    %r12,%r13
    53ed:	49 c1 ed 03          	shr    $0x3,%r13
    53f1:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    53f8:	f1 f1 f1 f1 
    53fc:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    5403:	00 00 f3 f3 
    5407:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    540e:	00 00 
    5410:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5414:	31 c0                	xor    %eax,%eax
    5416:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    541d:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    5424:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    5428:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    542c:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5430:	48 89 c2             	mov    %rax,%rdx
    5433:	48 89 d0             	mov    %rdx,%rax
    5436:	48 c1 e8 03          	shr    $0x3,%rax
    543a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5440:	0f b6 00             	movzbl (%rax),%eax
    5443:	84 c0                	test   %al,%al
    5445:	0f 95 c1             	setne  %cl
    5448:	3c 03                	cmp    $0x3,%al
    544a:	0f 9e c0             	setle  %al
    544d:	21 c8                	and    %ecx,%eax
    544f:	84 c0                	test   %al,%al
    5451:	74 08                	je     545b <jstring_compare_jstring_and_raw+0xf5>
    5453:	48 89 d7             	mov    %rdx,%rdi
    5456:	e8 95 ec ff ff       	call   40f0 <__asan_report_load4@plt>
    545b:	44 8b 73 c0          	mov    -0x40(%rbx),%r14d
    545f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5466:	48 89 c7             	mov    %rax,%rdi
    5469:	e8 bd f6 ff ff       	call   4b2b <jstring_length>
    546e:	41 39 c6             	cmp    %eax,%r14d
    5471:	73 0a                	jae    547d <jstring_compare_jstring_and_raw+0x117>
    5473:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5478:	e9 2b 02 00 00       	jmp    56a8 <jstring_compare_jstring_and_raw+0x342>
    547d:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5481:	48 89 c2             	mov    %rax,%rdx
    5484:	48 89 d0             	mov    %rdx,%rax
    5487:	48 c1 e8 03          	shr    $0x3,%rax
    548b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5491:	0f b6 00             	movzbl (%rax),%eax
    5494:	84 c0                	test   %al,%al
    5496:	0f 95 c1             	setne  %cl
    5499:	3c 03                	cmp    $0x3,%al
    549b:	0f 9e c0             	setle  %al
    549e:	21 c8                	and    %ecx,%eax
    54a0:	84 c0                	test   %al,%al
    54a2:	74 08                	je     54ac <jstring_compare_jstring_and_raw+0x146>
    54a4:	48 89 d7             	mov    %rdx,%rdi
    54a7:	e8 44 ec ff ff       	call   40f0 <__asan_report_load4@plt>
    54ac:	44 8b 73 c0          	mov    -0x40(%rbx),%r14d
    54b0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    54b7:	48 89 c7             	mov    %rax,%rdi
    54ba:	e8 6c f6 ff ff       	call   4b2b <jstring_length>
    54bf:	44 39 f0             	cmp    %r14d,%eax
    54c2:	73 0a                	jae    54ce <jstring_compare_jstring_and_raw+0x168>
    54c4:	b8 01 00 00 00       	mov    $0x1,%eax
    54c9:	e9 da 01 00 00       	jmp    56a8 <jstring_compare_jstring_and_raw+0x342>
    54ce:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    54d5:	00 00 00 
    54d8:	e9 88 01 00 00       	jmp    5665 <jstring_compare_jstring_and_raw+0x2ff>
    54dd:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    54e1:	48 83 c0 08          	add    $0x8,%rax
    54e5:	48 89 c2             	mov    %rax,%rdx
    54e8:	48 c1 ea 03          	shr    $0x3,%rdx
    54ec:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    54f3:	0f b6 12             	movzbl (%rdx),%edx
    54f6:	84 d2                	test   %dl,%dl
    54f8:	74 08                	je     5502 <jstring_compare_jstring_and_raw+0x19c>
    54fa:	48 89 c7             	mov    %rax,%rdi
    54fd:	e8 be ec ff ff       	call   41c0 <__asan_report_load8@plt>
    5502:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    5506:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    550c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5510:	48 89 c8             	mov    %rcx,%rax
    5513:	48 89 c2             	mov    %rax,%rdx
    5516:	48 c1 ea 03          	shr    $0x3,%rdx
    551a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5521:	0f b6 12             	movzbl (%rdx),%edx
    5524:	84 d2                	test   %dl,%dl
    5526:	40 0f 95 c6          	setne  %sil
    552a:	48 89 c7             	mov    %rax,%rdi
    552d:	83 e7 07             	and    $0x7,%edi
    5530:	40 38 d7             	cmp    %dl,%dil
    5533:	0f 9d c2             	setge  %dl
    5536:	21 f2                	and    %esi,%edx
    5538:	84 d2                	test   %dl,%dl
    553a:	74 08                	je     5544 <jstring_compare_jstring_and_raw+0x1de>
    553c:	48 89 c7             	mov    %rax,%rdi
    553f:	e8 4c ec ff ff       	call   4190 <__asan_report_load1@plt>
    5544:	0f b6 31             	movzbl (%rcx),%esi
    5547:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    554d:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5554:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5558:	48 89 c8             	mov    %rcx,%rax
    555b:	48 89 c2             	mov    %rax,%rdx
    555e:	48 c1 ea 03          	shr    $0x3,%rdx
    5562:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5569:	0f b6 12             	movzbl (%rdx),%edx
    556c:	84 d2                	test   %dl,%dl
    556e:	40 0f 95 c7          	setne  %dil
    5572:	49 89 c0             	mov    %rax,%r8
    5575:	41 83 e0 07          	and    $0x7,%r8d
    5579:	41 38 d0             	cmp    %dl,%r8b
    557c:	0f 9d c2             	setge  %dl
    557f:	21 fa                	and    %edi,%edx
    5581:	84 d2                	test   %dl,%dl
    5583:	74 08                	je     558d <jstring_compare_jstring_and_raw+0x227>
    5585:	48 89 c7             	mov    %rax,%rdi
    5588:	e8 03 ec ff ff       	call   4190 <__asan_report_load1@plt>
    558d:	0f b6 01             	movzbl (%rcx),%eax
    5590:	40 38 c6             	cmp    %al,%sil
    5593:	7d 0a                	jge    559f <jstring_compare_jstring_and_raw+0x239>
    5595:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    559a:	e9 09 01 00 00       	jmp    56a8 <jstring_compare_jstring_and_raw+0x342>
    559f:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    55a3:	48 83 c0 08          	add    $0x8,%rax
    55a7:	48 89 c2             	mov    %rax,%rdx
    55aa:	48 c1 ea 03          	shr    $0x3,%rdx
    55ae:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    55b5:	0f b6 12             	movzbl (%rdx),%edx
    55b8:	84 d2                	test   %dl,%dl
    55ba:	74 08                	je     55c4 <jstring_compare_jstring_and_raw+0x25e>
    55bc:	48 89 c7             	mov    %rax,%rdi
    55bf:	e8 fc eb ff ff       	call   41c0 <__asan_report_load8@plt>
    55c4:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    55c8:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    55ce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55d2:	48 89 c8             	mov    %rcx,%rax
    55d5:	48 89 c2             	mov    %rax,%rdx
    55d8:	48 c1 ea 03          	shr    $0x3,%rdx
    55dc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    55e3:	0f b6 12             	movzbl (%rdx),%edx
    55e6:	84 d2                	test   %dl,%dl
    55e8:	40 0f 95 c6          	setne  %sil
    55ec:	48 89 c7             	mov    %rax,%rdi
    55ef:	83 e7 07             	and    $0x7,%edi
    55f2:	40 38 d7             	cmp    %dl,%dil
    55f5:	0f 9d c2             	setge  %dl
    55f8:	21 f2                	and    %esi,%edx
    55fa:	84 d2                	test   %dl,%dl
    55fc:	74 08                	je     5606 <jstring_compare_jstring_and_raw+0x2a0>
    55fe:	48 89 c7             	mov    %rax,%rdi
    5601:	e8 8a eb ff ff       	call   4190 <__asan_report_load1@plt>
    5606:	0f b6 31             	movzbl (%rcx),%esi
    5609:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    560f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    5616:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    561a:	48 89 c8             	mov    %rcx,%rax
    561d:	48 89 c2             	mov    %rax,%rdx
    5620:	48 c1 ea 03          	shr    $0x3,%rdx
    5624:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    562b:	0f b6 12             	movzbl (%rdx),%edx
    562e:	84 d2                	test   %dl,%dl
    5630:	40 0f 95 c7          	setne  %dil
    5634:	49 89 c0             	mov    %rax,%r8
    5637:	41 83 e0 07          	and    $0x7,%r8d
    563b:	41 38 d0             	cmp    %dl,%r8b
    563e:	0f 9d c2             	setge  %dl
    5641:	21 fa                	and    %edi,%edx
    5643:	84 d2                	test   %dl,%dl
    5645:	74 08                	je     564f <jstring_compare_jstring_and_raw+0x2e9>
    5647:	48 89 c7             	mov    %rax,%rdi
    564a:	e8 41 eb ff ff       	call   4190 <__asan_report_load1@plt>
    564f:	0f b6 01             	movzbl (%rcx),%eax
    5652:	40 38 c6             	cmp    %al,%sil
    5655:	7e 07                	jle    565e <jstring_compare_jstring_and_raw+0x2f8>
    5657:	b8 01 00 00 00       	mov    $0x1,%eax
    565c:	eb 4a                	jmp    56a8 <jstring_compare_jstring_and_raw+0x342>
    565e:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    5665:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5669:	48 89 c2             	mov    %rax,%rdx
    566c:	48 89 d0             	mov    %rdx,%rax
    566f:	48 c1 e8 03          	shr    $0x3,%rax
    5673:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5679:	0f b6 00             	movzbl (%rax),%eax
    567c:	84 c0                	test   %al,%al
    567e:	0f 95 c1             	setne  %cl
    5681:	3c 03                	cmp    $0x3,%al
    5683:	0f 9e c0             	setle  %al
    5686:	21 c8                	and    %ecx,%eax
    5688:	84 c0                	test   %al,%al
    568a:	74 08                	je     5694 <jstring_compare_jstring_and_raw+0x32e>
    568c:	48 89 d7             	mov    %rdx,%rdi
    568f:	e8 5c ea ff ff       	call   40f0 <__asan_report_load4@plt>
    5694:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5697:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
    569d:	0f 82 3a fe ff ff    	jb     54dd <jstring_compare_jstring_and_raw+0x177>
    56a3:	b8 00 00 00 00       	mov    $0x0,%eax
    56a8:	89 c2                	mov    %eax,%edx
    56aa:	4d 39 e7             	cmp    %r12,%r15
    56ad:	74 23                	je     56d2 <jstring_compare_jstring_and_raw+0x36c>
    56af:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    56b6:	45 
    56b7:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    56be:	f5 f5 f5 
    56c1:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    56c8:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    56cd:	c6 00 00             	movb   $0x0,(%rax)
    56d0:	eb 0b                	jmp    56dd <jstring_compare_jstring_and_raw+0x377>
    56d2:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    56d9:	00 00 00 00 
    56dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    56e1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    56e8:	00 00 
    56ea:	74 05                	je     56f1 <jstring_compare_jstring_and_raw+0x38b>
    56ec:	e8 6f ea ff ff       	call   4160 <__stack_chk_fail@plt>
    56f1:	89 d0                	mov    %edx,%eax
    56f3:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    56fa:	5b                   	pop    %rbx
    56fb:	41 5c                	pop    %r12
    56fd:	41 5d                	pop    %r13
    56ff:	41 5e                	pop    %r14
    5701:	41 5f                	pop    %r15
    5703:	5d                   	pop    %rbp
    5704:	c3                   	ret

0000000000005705 <jstring_equals_jstring_and_raw>:
    5705:	55                   	push   %rbp
    5706:	48 89 e5             	mov    %rsp,%rbp
    5709:	53                   	push   %rbx
    570a:	48 83 ec 28          	sub    $0x28,%rsp
    570e:	48 89 f8             	mov    %rdi,%rax
    5711:	48 89 c1             	mov    %rax,%rcx
    5714:	bb 00 00 00 00       	mov    $0x0,%ebx
    5719:	48 89 f3             	mov    %rsi,%rbx
    571c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    5720:	48 89 5d e8          	mov    %rbx,-0x18(%rbp)
    5724:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5728:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    572c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5734:	48 89 cf             	mov    %rcx,%rdi
    5737:	48 89 c6             	mov    %rax,%rsi
    573a:	e8 27 fc ff ff       	call   5366 <jstring_compare_jstring_and_raw>
    573f:	85 c0                	test   %eax,%eax
    5741:	75 07                	jne    574a <jstring_equals_jstring_and_raw+0x45>
    5743:	b8 01 00 00 00       	mov    $0x1,%eax
    5748:	eb 05                	jmp    574f <jstring_equals_jstring_and_raw+0x4a>
    574a:	b8 00 00 00 00       	mov    $0x0,%eax
    574f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5753:	c9                   	leave
    5754:	c3                   	ret

0000000000005755 <jstring_equals_raw>:
    5755:	55                   	push   %rbp
    5756:	48 89 e5             	mov    %rsp,%rbp
    5759:	48 83 ec 10          	sub    $0x10,%rsp
    575d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5761:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5765:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5769:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    576d:	48 89 d6             	mov    %rdx,%rsi
    5770:	48 89 c7             	mov    %rax,%rdi
    5773:	e8 95 f4 ff ff       	call   4c0d <jstring_compare_raw>
    5778:	85 c0                	test   %eax,%eax
    577a:	75 07                	jne    5783 <jstring_equals_raw+0x2e>
    577c:	b8 01 00 00 00       	mov    $0x1,%eax
    5781:	eb 05                	jmp    5788 <jstring_equals_raw+0x33>
    5783:	b8 00 00 00 00       	mov    $0x0,%eax
    5788:	c9                   	leave
    5789:	c3                   	ret

000000000000578a <jstring_equals_jstring>:
    578a:	55                   	push   %rbp
    578b:	48 89 e5             	mov    %rsp,%rbp
    578e:	48 83 ec 20          	sub    $0x20,%rsp
    5792:	48 89 f8             	mov    %rdi,%rax
    5795:	49 89 f0             	mov    %rsi,%r8
    5798:	48 89 c6             	mov    %rax,%rsi
    579b:	bf 00 00 00 00       	mov    $0x0,%edi
    57a0:	4c 89 c7             	mov    %r8,%rdi
    57a3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57ab:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    57af:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    57b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57b7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57bb:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
    57bf:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    57c3:	48 89 d1             	mov    %rdx,%rcx
    57c6:	48 89 c2             	mov    %rax,%rdx
    57c9:	e8 43 f7 ff ff       	call   4f11 <jstring_compare_jstring>
    57ce:	85 c0                	test   %eax,%eax
    57d0:	75 07                	jne    57d9 <jstring_equals_jstring+0x4f>
    57d2:	b8 01 00 00 00       	mov    $0x1,%eax
    57d7:	eb 05                	jmp    57de <jstring_equals_jstring+0x54>
    57d9:	b8 00 00 00 00       	mov    $0x0,%eax
    57de:	c9                   	leave
    57df:	c3                   	ret

00000000000057e0 <jstring_create_substring_temporary>:
    57e0:	55                   	push   %rbp
    57e1:	48 89 e5             	mov    %rsp,%rbp
    57e4:	41 56                	push   %r14
    57e6:	41 55                	push   %r13
    57e8:	41 54                	push   %r12
    57ea:	53                   	push   %rbx
    57eb:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    57f2:	48 89 f8             	mov    %rdi,%rax
    57f5:	49 89 f0             	mov    %rsi,%r8
    57f8:	48 89 c6             	mov    %rax,%rsi
    57fb:	bf 00 00 00 00       	mov    $0x0,%edi
    5800:	4c 89 c7             	mov    %r8,%rdi
    5803:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    580a:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    5811:	89 95 3c ff ff ff    	mov    %edx,-0xc4(%rbp)
    5817:	89 8d 38 ff ff ff    	mov    %ecx,-0xc8(%rbp)
    581d:	48 8d 9d 60 ff ff ff 	lea    -0xa0(%rbp),%rbx
    5824:	49 89 de             	mov    %rbx,%r14
    5827:	83 3d 32 5a 01 00 00 	cmpl   $0x0,0x15a32(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    582e:	74 12                	je     5842 <jstring_create_substring_temporary+0x62>
    5830:	bf 60 00 00 00       	mov    $0x60,%edi
    5835:	e8 a6 e8 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    583a:	48 85 c0             	test   %rax,%rax
    583d:	74 03                	je     5842 <jstring_create_substring_temporary+0x62>
    583f:	48 89 c3             	mov    %rax,%rbx
    5842:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    5849:	49 89 c4             	mov    %rax,%r12
    584c:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    5853:	48 8d 05 66 de 00 00 	lea    0xde66(%rip),%rax        # 136c0 <_IO_stdin_used+0x6c0>
    585a:	48 89 43 08          	mov    %rax,0x8(%rbx)
    585e:	48 8d 05 7b ff ff ff 	lea    -0x85(%rip),%rax        # 57e0 <jstring_create_substring_temporary>
    5865:	48 89 43 10          	mov    %rax,0x10(%rbx)
    5869:	49 89 dd             	mov    %rbx,%r13
    586c:	49 c1 ed 03          	shr    $0x3,%r13
    5870:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    5877:	f1 f1 f1 f1 
    587b:	41 c7 85 04 80 ff 7f 	movl   $0xf2f20000,0x7fff8004(%r13)
    5882:	00 00 f2 f2 
    5886:	41 c7 85 08 80 ff 7f 	movl   $0xf3f30000,0x7fff8008(%r13)
    588d:	00 00 f3 f3 
    5891:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5898:	00 00 
    589a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    589e:	31 c0                	xor    %eax,%eax
    58a0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    58a7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    58ae:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    58b3:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    58b8:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    58be:	2b 85 3c ff ff ff    	sub    -0xc4(%rbp),%eax
    58c4:	83 c0 01             	add    $0x1,%eax
    58c7:	41 89 44 24 a0       	mov    %eax,-0x60(%r12)
    58cc:	41 8b 44 24 a0       	mov    -0x60(%r12),%eax
    58d1:	83 c0 01             	add    $0x1,%eax
    58d4:	01 c0                	add    %eax,%eax
    58d6:	41 89 44 24 a4       	mov    %eax,-0x5c(%r12)
    58db:	41 8b 44 24 a4       	mov    -0x5c(%r12),%eax
    58e0:	89 c0                	mov    %eax,%eax
    58e2:	48 89 c7             	mov    %rax,%rdi
    58e5:	e8 ed eb ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    58ea:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    58f1:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    58f8:	00 00 00 
    58fb:	e9 c7 00 00 00       	jmp    59c7 <jstring_create_substring_temporary+0x1e7>
    5900:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    5905:	48 83 c0 08          	add    $0x8,%rax
    5909:	48 89 c2             	mov    %rax,%rdx
    590c:	48 c1 ea 03          	shr    $0x3,%rdx
    5910:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5917:	0f b6 12             	movzbl (%rdx),%edx
    591a:	84 d2                	test   %dl,%dl
    591c:	74 08                	je     5926 <jstring_create_substring_temporary+0x146>
    591e:	48 89 c7             	mov    %rax,%rdi
    5921:	e8 9a e8 ff ff       	call   41c0 <__asan_report_load8@plt>
    5926:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    592b:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
    5931:	8b 95 3c ff ff ff    	mov    -0xc4(%rbp),%edx
    5937:	01 ca                	add    %ecx,%edx
    5939:	89 d2                	mov    %edx,%edx
    593b:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
    593f:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
    5945:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    594c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5950:	48 89 f0             	mov    %rsi,%rax
    5953:	48 89 c2             	mov    %rax,%rdx
    5956:	48 c1 ea 03          	shr    $0x3,%rdx
    595a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5961:	0f b6 12             	movzbl (%rdx),%edx
    5964:	84 d2                	test   %dl,%dl
    5966:	40 0f 95 c7          	setne  %dil
    596a:	49 89 c0             	mov    %rax,%r8
    596d:	41 83 e0 07          	and    $0x7,%r8d
    5971:	41 38 d0             	cmp    %dl,%r8b
    5974:	0f 9d c2             	setge  %dl
    5977:	21 fa                	and    %edi,%edx
    5979:	84 d2                	test   %dl,%dl
    597b:	74 08                	je     5985 <jstring_create_substring_temporary+0x1a5>
    597d:	48 89 c7             	mov    %rax,%rdi
    5980:	e8 0b e8 ff ff       	call   4190 <__asan_report_load1@plt>
    5985:	0f b6 36             	movzbl (%rsi),%esi
    5988:	48 89 c8             	mov    %rcx,%rax
    598b:	48 89 c2             	mov    %rax,%rdx
    598e:	48 c1 ea 03          	shr    $0x3,%rdx
    5992:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5999:	0f b6 12             	movzbl (%rdx),%edx
    599c:	84 d2                	test   %dl,%dl
    599e:	40 0f 95 c7          	setne  %dil
    59a2:	49 89 c0             	mov    %rax,%r8
    59a5:	41 83 e0 07          	and    $0x7,%r8d
    59a9:	41 38 d0             	cmp    %dl,%r8b
    59ac:	0f 9d c2             	setge  %dl
    59af:	21 fa                	and    %edi,%edx
    59b1:	84 d2                	test   %dl,%dl
    59b3:	74 08                	je     59bd <jstring_create_substring_temporary+0x1dd>
    59b5:	48 89 c7             	mov    %rax,%rdi
    59b8:	e8 f3 e7 ff ff       	call   41b0 <__asan_report_store1@plt>
    59bd:	40 88 31             	mov    %sil,(%rcx)
    59c0:	83 85 54 ff ff ff 01 	addl   $0x1,-0xac(%rbp)
    59c7:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    59cd:	2b 85 3c ff ff ff    	sub    -0xc4(%rbp),%eax
    59d3:	3b 85 54 ff ff ff    	cmp    -0xac(%rbp),%eax
    59d9:	0f 83 21 ff ff ff    	jae    5900 <jstring_create_substring_temporary+0x120>
    59df:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
    59e5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    59ec:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    59f0:	48 89 c8             	mov    %rcx,%rax
    59f3:	48 89 c2             	mov    %rax,%rdx
    59f6:	48 c1 ea 03          	shr    $0x3,%rdx
    59fa:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5a01:	0f b6 12             	movzbl (%rdx),%edx
    5a04:	84 d2                	test   %dl,%dl
    5a06:	40 0f 95 c6          	setne  %sil
    5a0a:	48 89 c7             	mov    %rax,%rdi
    5a0d:	83 e7 07             	and    $0x7,%edi
    5a10:	40 38 d7             	cmp    %dl,%dil
    5a13:	0f 9d c2             	setge  %dl
    5a16:	21 f2                	and    %esi,%edx
    5a18:	84 d2                	test   %dl,%dl
    5a1a:	74 08                	je     5a24 <jstring_create_substring_temporary+0x244>
    5a1c:	48 89 c7             	mov    %rax,%rdi
    5a1f:	e8 8c e7 ff ff       	call   41b0 <__asan_report_store1@plt>
    5a24:	c6 01 00             	movb   $0x0,(%rcx)
    5a27:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5a2e:	49 89 44 24 a8       	mov    %rax,-0x58(%r12)
    5a33:	49 8b 44 24 a0       	mov    -0x60(%r12),%rax
    5a38:	49 8b 54 24 a8       	mov    -0x58(%r12),%rdx
    5a3d:	49 39 de             	cmp    %rbx,%r14
    5a40:	74 2c                	je     5a6e <jstring_create_substring_temporary+0x28e>
    5a42:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    5a49:	48 be f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rsi
    5a50:	f5 f5 f5 
    5a53:	49 89 b5 00 80 ff 7f 	mov    %rsi,0x7fff8000(%r13)
    5a5a:	41 c7 85 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r13)
    5a61:	f5 f5 f5 f5 
    5a65:	48 8b 4b 78          	mov    0x78(%rbx),%rcx
    5a69:	c6 01 00             	movb   $0x0,(%rcx)
    5a6c:	eb 16                	jmp    5a84 <jstring_create_substring_temporary+0x2a4>
    5a6e:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    5a75:	00 00 00 00 
    5a79:	41 c7 85 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r13)
    5a80:	00 00 00 00 
    5a84:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5a88:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    5a8f:	00 00 
    5a91:	74 05                	je     5a98 <jstring_create_substring_temporary+0x2b8>
    5a93:	e8 c8 e6 ff ff       	call   4160 <__stack_chk_fail@plt>
    5a98:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    5a9f:	5b                   	pop    %rbx
    5aa0:	41 5c                	pop    %r12
    5aa2:	41 5d                	pop    %r13
    5aa4:	41 5e                	pop    %r14
    5aa6:	5d                   	pop    %rbp
    5aa7:	c3                   	ret

0000000000005aa8 <jstring_concatenate_jstring>:
    5aa8:	55                   	push   %rbp
    5aa9:	48 89 e5             	mov    %rsp,%rbp
    5aac:	41 56                	push   %r14
    5aae:	41 55                	push   %r13
    5ab0:	41 54                	push   %r12
    5ab2:	53                   	push   %rbx
    5ab3:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    5aba:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    5ac1:	48 89 f0             	mov    %rsi,%rax
    5ac4:	48 89 d1             	mov    %rdx,%rcx
    5ac7:	48 89 c0             	mov    %rax,%rax
    5aca:	ba 00 00 00 00       	mov    $0x0,%edx
    5acf:	48 89 ca             	mov    %rcx,%rdx
    5ad2:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    5ad9:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    5ae0:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    5ae4:	4d 89 e6             	mov    %r12,%r14
    5ae7:	83 3d 72 57 01 00 00 	cmpl   $0x0,0x15772(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    5aee:	74 12                	je     5b02 <jstring_concatenate_jstring+0x5a>
    5af0:	bf 40 00 00 00       	mov    $0x40,%edi
    5af5:	e8 a6 e5 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    5afa:	48 85 c0             	test   %rax,%rax
    5afd:	74 03                	je     5b02 <jstring_concatenate_jstring+0x5a>
    5aff:	49 89 c4             	mov    %rax,%r12
    5b02:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    5b07:	48 89 c3             	mov    %rax,%rbx
    5b0a:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    5b11:	41 
    5b12:	48 8d 05 d9 db 00 00 	lea    0xdbd9(%rip),%rax        # 136f2 <_IO_stdin_used+0x6f2>
    5b19:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    5b1e:	48 8d 05 83 ff ff ff 	lea    -0x7d(%rip),%rax        # 5aa8 <jstring_concatenate_jstring>
    5b25:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    5b2a:	4d 89 e5             	mov    %r12,%r13
    5b2d:	49 c1 ed 03          	shr    $0x3,%r13
    5b31:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    5b38:	f1 f1 f1 f1 
    5b3c:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    5b43:	00 00 f3 f3 
    5b47:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5b4e:	00 00 
    5b50:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5b54:	31 c0                	xor    %eax,%eax
    5b56:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    5b5d:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    5b64:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    5b68:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    5b6c:	8b 05 26 57 01 00    	mov    0x15726(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    5b72:	85 c0                	test   %eax,%eax
    5b74:	75 78                	jne    5bee <jstring_concatenate_jstring+0x146>
    5b76:	4c 8b 05 c3 35 01 00 	mov    0x135c3(%rip),%r8        # 19140 <jstring_log>
    5b7d:	48 8d 15 1c da 00 00 	lea    0xda1c(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    5b84:	48 8d 35 95 db 00 00 	lea    0xdb95(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    5b8b:	48 8d 05 8e da 00 00 	lea    0xda8e(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    5b92:	b9 b6 01 00 00       	mov    $0x1b6,%ecx
    5b97:	48 89 c7             	mov    %rax,%rdi
    5b9a:	b8 00 00 00 00       	mov    $0x0,%eax
    5b9f:	41 ff d0             	call   *%r8
    5ba2:	b9 00 00 00 00       	mov    $0x0,%ecx
    5ba7:	48 89 c8             	mov    %rcx,%rax
    5baa:	48 89 c2             	mov    %rax,%rdx
    5bad:	48 c1 ea 03          	shr    $0x3,%rdx
    5bb1:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5bb8:	0f b6 12             	movzbl (%rdx),%edx
    5bbb:	84 d2                	test   %dl,%dl
    5bbd:	40 0f 95 c6          	setne  %sil
    5bc1:	48 89 c7             	mov    %rax,%rdi
    5bc4:	83 e7 07             	and    $0x7,%edi
    5bc7:	40 38 d7             	cmp    %dl,%dil
    5bca:	0f 9d c2             	setge  %dl
    5bcd:	21 f2                	and    %esi,%edx
    5bcf:	84 d2                	test   %dl,%dl
    5bd1:	74 08                	je     5bdb <jstring_concatenate_jstring+0x133>
    5bd3:	48 89 c7             	mov    %rax,%rdi
    5bd6:	e8 b5 e5 ff ff       	call   4190 <__asan_report_load1@plt>
    5bdb:	0f b6 01             	movzbl (%rcx),%eax
    5bde:	88 85 67 ff ff ff    	mov    %al,-0x99(%rbp)
    5be4:	b8 00 00 00 00       	mov    $0x0,%eax
    5be9:	e9 f7 06 00 00       	jmp    62e5 <jstring_concatenate_jstring+0x83d>
    5bee:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5bf5:	48 89 c2             	mov    %rax,%rdx
    5bf8:	48 89 d0             	mov    %rdx,%rax
    5bfb:	48 c1 e8 03          	shr    $0x3,%rax
    5bff:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5c05:	0f b6 00             	movzbl (%rax),%eax
    5c08:	84 c0                	test   %al,%al
    5c0a:	0f 95 c1             	setne  %cl
    5c0d:	3c 03                	cmp    $0x3,%al
    5c0f:	0f 9e c0             	setle  %al
    5c12:	21 c8                	and    %ecx,%eax
    5c14:	84 c0                	test   %al,%al
    5c16:	74 08                	je     5c20 <jstring_concatenate_jstring+0x178>
    5c18:	48 89 d7             	mov    %rdx,%rdi
    5c1b:	e8 d0 e4 ff ff       	call   40f0 <__asan_report_load4@plt>
    5c20:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5c27:	8b 08                	mov    (%rax),%ecx
    5c29:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5c2d:	48 89 c2             	mov    %rax,%rdx
    5c30:	48 89 d0             	mov    %rdx,%rax
    5c33:	48 c1 e8 03          	shr    $0x3,%rax
    5c37:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5c3d:	0f b6 00             	movzbl (%rax),%eax
    5c40:	84 c0                	test   %al,%al
    5c42:	40 0f 95 c6          	setne  %sil
    5c46:	3c 03                	cmp    $0x3,%al
    5c48:	0f 9e c0             	setle  %al
    5c4b:	21 f0                	and    %esi,%eax
    5c4d:	84 c0                	test   %al,%al
    5c4f:	74 08                	je     5c59 <jstring_concatenate_jstring+0x1b1>
    5c51:	48 89 d7             	mov    %rdx,%rdi
    5c54:	e8 97 e4 ff ff       	call   40f0 <__asan_report_load4@plt>
    5c59:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5c5c:	01 c1                	add    %eax,%ecx
    5c5e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5c65:	48 83 c0 04          	add    $0x4,%rax
    5c69:	48 89 c2             	mov    %rax,%rdx
    5c6c:	48 c1 ea 03          	shr    $0x3,%rdx
    5c70:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5c77:	0f b6 12             	movzbl (%rdx),%edx
    5c7a:	84 d2                	test   %dl,%dl
    5c7c:	40 0f 95 c7          	setne  %dil
    5c80:	48 89 c6             	mov    %rax,%rsi
    5c83:	83 e6 07             	and    $0x7,%esi
    5c86:	83 c6 03             	add    $0x3,%esi
    5c89:	40 38 d6             	cmp    %dl,%sil
    5c8c:	0f 9d c2             	setge  %dl
    5c8f:	21 fa                	and    %edi,%edx
    5c91:	84 d2                	test   %dl,%dl
    5c93:	74 08                	je     5c9d <jstring_concatenate_jstring+0x1f5>
    5c95:	48 89 c7             	mov    %rax,%rdi
    5c98:	e8 53 e4 ff ff       	call   40f0 <__asan_report_load4@plt>
    5c9d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5ca4:	8b 40 04             	mov    0x4(%rax),%eax
    5ca7:	39 c1                	cmp    %eax,%ecx
    5ca9:	0f 83 9e 01 00 00    	jae    5e4d <jstring_concatenate_jstring+0x3a5>
    5caf:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5cb6:	48 83 c0 08          	add    $0x8,%rax
    5cba:	48 89 c2             	mov    %rax,%rdx
    5cbd:	48 c1 ea 03          	shr    $0x3,%rdx
    5cc1:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5cc8:	0f b6 12             	movzbl (%rdx),%edx
    5ccb:	84 d2                	test   %dl,%dl
    5ccd:	74 08                	je     5cd7 <jstring_concatenate_jstring+0x22f>
    5ccf:	48 89 c7             	mov    %rax,%rdi
    5cd2:	e8 e9 e4 ff ff       	call   41c0 <__asan_report_load8@plt>
    5cd7:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5cde:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5ce2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5ce9:	8b 00                	mov    (%rax),%eax
    5ceb:	89 c0                	mov    %eax,%eax
    5ced:	48 01 d0             	add    %rdx,%rax
    5cf0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5cf7:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
    5cfe:	00 00 00 
    5d01:	e9 bb 00 00 00       	jmp    5dc1 <jstring_concatenate_jstring+0x319>
    5d06:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5d0a:	48 83 c0 08          	add    $0x8,%rax
    5d0e:	48 89 c2             	mov    %rax,%rdx
    5d11:	48 c1 ea 03          	shr    $0x3,%rdx
    5d15:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5d1c:	0f b6 12             	movzbl (%rdx),%edx
    5d1f:	84 d2                	test   %dl,%dl
    5d21:	74 08                	je     5d2b <jstring_concatenate_jstring+0x283>
    5d23:	48 89 c7             	mov    %rax,%rdi
    5d26:	e8 95 e4 ff ff       	call   41c0 <__asan_report_load8@plt>
    5d2b:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    5d2f:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    5d35:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    5d39:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
    5d3f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5d46:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5d4a:	48 89 f0             	mov    %rsi,%rax
    5d4d:	48 89 c2             	mov    %rax,%rdx
    5d50:	48 c1 ea 03          	shr    $0x3,%rdx
    5d54:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5d5b:	0f b6 12             	movzbl (%rdx),%edx
    5d5e:	84 d2                	test   %dl,%dl
    5d60:	40 0f 95 c7          	setne  %dil
    5d64:	49 89 c0             	mov    %rax,%r8
    5d67:	41 83 e0 07          	and    $0x7,%r8d
    5d6b:	41 38 d0             	cmp    %dl,%r8b
    5d6e:	0f 9d c2             	setge  %dl
    5d71:	21 fa                	and    %edi,%edx
    5d73:	84 d2                	test   %dl,%dl
    5d75:	74 08                	je     5d7f <jstring_concatenate_jstring+0x2d7>
    5d77:	48 89 c7             	mov    %rax,%rdi
    5d7a:	e8 11 e4 ff ff       	call   4190 <__asan_report_load1@plt>
    5d7f:	0f b6 36             	movzbl (%rsi),%esi
    5d82:	48 89 c8             	mov    %rcx,%rax
    5d85:	48 89 c2             	mov    %rax,%rdx
    5d88:	48 c1 ea 03          	shr    $0x3,%rdx
    5d8c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5d93:	0f b6 12             	movzbl (%rdx),%edx
    5d96:	84 d2                	test   %dl,%dl
    5d98:	40 0f 95 c7          	setne  %dil
    5d9c:	49 89 c0             	mov    %rax,%r8
    5d9f:	41 83 e0 07          	and    $0x7,%r8d
    5da3:	41 38 d0             	cmp    %dl,%r8b
    5da6:	0f 9d c2             	setge  %dl
    5da9:	21 fa                	and    %edi,%edx
    5dab:	84 d2                	test   %dl,%dl
    5dad:	74 08                	je     5db7 <jstring_concatenate_jstring+0x30f>
    5daf:	48 89 c7             	mov    %rax,%rdi
    5db2:	e8 f9 e3 ff ff       	call   41b0 <__asan_report_store1@plt>
    5db7:	40 88 31             	mov    %sil,(%rcx)
    5dba:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%rbp)
    5dc1:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5dc5:	48 89 c2             	mov    %rax,%rdx
    5dc8:	48 89 d0             	mov    %rdx,%rax
    5dcb:	48 c1 e8 03          	shr    $0x3,%rax
    5dcf:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5dd5:	0f b6 00             	movzbl (%rax),%eax
    5dd8:	84 c0                	test   %al,%al
    5dda:	0f 95 c1             	setne  %cl
    5ddd:	3c 03                	cmp    $0x3,%al
    5ddf:	0f 9e c0             	setle  %al
    5de2:	21 c8                	and    %ecx,%eax
    5de4:	84 c0                	test   %al,%al
    5de6:	74 08                	je     5df0 <jstring_concatenate_jstring+0x348>
    5de8:	48 89 d7             	mov    %rdx,%rdi
    5deb:	e8 00 e3 ff ff       	call   40f0 <__asan_report_load4@plt>
    5df0:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5df3:	3b 85 68 ff ff ff    	cmp    -0x98(%rbp),%eax
    5df9:	0f 83 07 ff ff ff    	jae    5d06 <jstring_concatenate_jstring+0x25e>
    5dff:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e06:	48 89 c2             	mov    %rax,%rdx
    5e09:	48 89 d0             	mov    %rdx,%rax
    5e0c:	48 c1 e8 03          	shr    $0x3,%rax
    5e10:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5e16:	0f b6 00             	movzbl (%rax),%eax
    5e19:	84 c0                	test   %al,%al
    5e1b:	0f 95 c1             	setne  %cl
    5e1e:	3c 03                	cmp    $0x3,%al
    5e20:	0f 9e c0             	setle  %al
    5e23:	21 c8                	and    %ecx,%eax
    5e25:	84 c0                	test   %al,%al
    5e27:	74 08                	je     5e31 <jstring_concatenate_jstring+0x389>
    5e29:	48 89 d7             	mov    %rdx,%rdi
    5e2c:	e8 bf e2 ff ff       	call   40f0 <__asan_report_load4@plt>
    5e31:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e38:	8b 10                	mov    (%rax),%edx
    5e3a:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5e3d:	01 c2                	add    %eax,%edx
    5e3f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e46:	89 10                	mov    %edx,(%rax)
    5e48:	e9 93 04 00 00       	jmp    62e0 <jstring_concatenate_jstring+0x838>
    5e4d:	48 8b 0d 2c 54 01 00 	mov    0x1542c(%rip),%rcx        # 1b280 <jstring_temporary_memory_info>
    5e54:	48 8b 35 2d 54 01 00 	mov    0x1542d(%rip),%rsi        # 1b288 <jstring_temporary_memory_info+0x8>
    5e5b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e62:	48 89 c2             	mov    %rax,%rdx
    5e65:	48 89 d0             	mov    %rdx,%rax
    5e68:	48 c1 e8 03          	shr    $0x3,%rax
    5e6c:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5e72:	0f b6 00             	movzbl (%rax),%eax
    5e75:	84 c0                	test   %al,%al
    5e77:	40 0f 95 c7          	setne  %dil
    5e7b:	3c 03                	cmp    $0x3,%al
    5e7d:	0f 9e c0             	setle  %al
    5e80:	21 f8                	and    %edi,%eax
    5e82:	84 c0                	test   %al,%al
    5e84:	74 08                	je     5e8e <jstring_concatenate_jstring+0x3e6>
    5e86:	48 89 d7             	mov    %rdx,%rdi
    5e89:	e8 62 e2 ff ff       	call   40f0 <__asan_report_load4@plt>
    5e8e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5e95:	8b 38                	mov    (%rax),%edi
    5e97:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5e9b:	48 89 c2             	mov    %rax,%rdx
    5e9e:	48 89 d0             	mov    %rdx,%rax
    5ea1:	48 c1 e8 03          	shr    $0x3,%rax
    5ea5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5eab:	0f b6 00             	movzbl (%rax),%eax
    5eae:	84 c0                	test   %al,%al
    5eb0:	41 0f 95 c0          	setne  %r8b
    5eb4:	3c 03                	cmp    $0x3,%al
    5eb6:	0f 9e c0             	setle  %al
    5eb9:	44 21 c0             	and    %r8d,%eax
    5ebc:	84 c0                	test   %al,%al
    5ebe:	74 08                	je     5ec8 <jstring_concatenate_jstring+0x420>
    5ec0:	48 89 d7             	mov    %rdx,%rdi
    5ec3:	e8 28 e2 ff ff       	call   40f0 <__asan_report_load4@plt>
    5ec8:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5ecb:	01 f8                	add    %edi,%eax
    5ecd:	83 c0 01             	add    $0x1,%eax
    5ed0:	01 c0                	add    %eax,%eax
    5ed2:	89 c0                	mov    %eax,%eax
    5ed4:	48 01 f0             	add    %rsi,%rax
    5ed7:	48 39 c1             	cmp    %rax,%rcx
    5eda:	73 6e                	jae    5f4a <jstring_concatenate_jstring+0x4a2>
    5edc:	4c 8b 05 5d 32 01 00 	mov    0x1325d(%rip),%r8        # 19140 <jstring_log>
    5ee3:	48 8d 15 b6 d6 00 00 	lea    0xd6b6(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    5eea:	48 8d 35 2f d8 00 00 	lea    0xd82f(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    5ef1:	48 8d 05 28 d7 00 00 	lea    0xd728(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    5ef8:	b9 cb 01 00 00       	mov    $0x1cb,%ecx
    5efd:	48 89 c7             	mov    %rax,%rdi
    5f00:	b8 00 00 00 00       	mov    $0x0,%eax
    5f05:	41 ff d0             	call   *%r8
    5f08:	b9 00 00 00 00       	mov    $0x0,%ecx
    5f0d:	48 89 c8             	mov    %rcx,%rax
    5f10:	48 89 c2             	mov    %rax,%rdx
    5f13:	48 c1 ea 03          	shr    $0x3,%rdx
    5f17:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5f1e:	0f b6 12             	movzbl (%rdx),%edx
    5f21:	84 d2                	test   %dl,%dl
    5f23:	40 0f 95 c6          	setne  %sil
    5f27:	48 89 c7             	mov    %rax,%rdi
    5f2a:	83 e7 07             	and    $0x7,%edi
    5f2d:	40 38 d7             	cmp    %dl,%dil
    5f30:	0f 9d c2             	setge  %dl
    5f33:	21 f2                	and    %esi,%edx
    5f35:	84 d2                	test   %dl,%dl
    5f37:	74 08                	je     5f41 <jstring_concatenate_jstring+0x499>
    5f39:	48 89 c7             	mov    %rax,%rdi
    5f3c:	e8 4f e2 ff ff       	call   4190 <__asan_report_load1@plt>
    5f41:	0f b6 01             	movzbl (%rcx),%eax
    5f44:	88 85 66 ff ff ff    	mov    %al,-0x9a(%rbp)
    5f4a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5f51:	48 89 c2             	mov    %rax,%rdx
    5f54:	48 89 d0             	mov    %rdx,%rax
    5f57:	48 c1 e8 03          	shr    $0x3,%rax
    5f5b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5f61:	0f b6 00             	movzbl (%rax),%eax
    5f64:	84 c0                	test   %al,%al
    5f66:	0f 95 c1             	setne  %cl
    5f69:	3c 03                	cmp    $0x3,%al
    5f6b:	0f 9e c0             	setle  %al
    5f6e:	21 c8                	and    %ecx,%eax
    5f70:	84 c0                	test   %al,%al
    5f72:	74 08                	je     5f7c <jstring_concatenate_jstring+0x4d4>
    5f74:	48 89 d7             	mov    %rdx,%rdi
    5f77:	e8 74 e1 ff ff       	call   40f0 <__asan_report_load4@plt>
    5f7c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5f83:	8b 08                	mov    (%rax),%ecx
    5f85:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    5f89:	48 89 c2             	mov    %rax,%rdx
    5f8c:	48 89 d0             	mov    %rdx,%rax
    5f8f:	48 c1 e8 03          	shr    $0x3,%rax
    5f93:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    5f99:	0f b6 00             	movzbl (%rax),%eax
    5f9c:	84 c0                	test   %al,%al
    5f9e:	40 0f 95 c6          	setne  %sil
    5fa2:	3c 03                	cmp    $0x3,%al
    5fa4:	0f 9e c0             	setle  %al
    5fa7:	21 f0                	and    %esi,%eax
    5fa9:	84 c0                	test   %al,%al
    5fab:	74 08                	je     5fb5 <jstring_concatenate_jstring+0x50d>
    5fad:	48 89 d7             	mov    %rdx,%rdi
    5fb0:	e8 3b e1 ff ff       	call   40f0 <__asan_report_load4@plt>
    5fb5:	8b 43 c0             	mov    -0x40(%rbx),%eax
    5fb8:	01 c8                	add    %ecx,%eax
    5fba:	83 c0 01             	add    $0x1,%eax
    5fbd:	01 c0                	add    %eax,%eax
    5fbf:	89 c0                	mov    %eax,%eax
    5fc1:	48 89 c7             	mov    %rax,%rdi
    5fc4:	e8 0e e5 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    5fc9:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    5fd0:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    5fd7:	00 00 00 
    5fda:	e9 c5 00 00 00       	jmp    60a4 <jstring_concatenate_jstring+0x5fc>
    5fdf:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    5fe6:	48 83 c0 08          	add    $0x8,%rax
    5fea:	48 89 c2             	mov    %rax,%rdx
    5fed:	48 c1 ea 03          	shr    $0x3,%rdx
    5ff1:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    5ff8:	0f b6 12             	movzbl (%rdx),%edx
    5ffb:	84 d2                	test   %dl,%dl
    5ffd:	74 08                	je     6007 <jstring_concatenate_jstring+0x55f>
    5fff:	48 89 c7             	mov    %rax,%rdi
    6002:	e8 b9 e1 ff ff       	call   41c0 <__asan_report_load8@plt>
    6007:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    600e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6012:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    6018:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    601c:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    6022:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6029:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    602d:	48 89 f0             	mov    %rsi,%rax
    6030:	48 89 c2             	mov    %rax,%rdx
    6033:	48 c1 ea 03          	shr    $0x3,%rdx
    6037:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    603e:	0f b6 12             	movzbl (%rdx),%edx
    6041:	84 d2                	test   %dl,%dl
    6043:	40 0f 95 c7          	setne  %dil
    6047:	49 89 c0             	mov    %rax,%r8
    604a:	41 83 e0 07          	and    $0x7,%r8d
    604e:	41 38 d0             	cmp    %dl,%r8b
    6051:	0f 9d c2             	setge  %dl
    6054:	21 fa                	and    %edi,%edx
    6056:	84 d2                	test   %dl,%dl
    6058:	74 08                	je     6062 <jstring_concatenate_jstring+0x5ba>
    605a:	48 89 c7             	mov    %rax,%rdi
    605d:	e8 2e e1 ff ff       	call   4190 <__asan_report_load1@plt>
    6062:	0f b6 36             	movzbl (%rsi),%esi
    6065:	48 89 c8             	mov    %rcx,%rax
    6068:	48 89 c2             	mov    %rax,%rdx
    606b:	48 c1 ea 03          	shr    $0x3,%rdx
    606f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6076:	0f b6 12             	movzbl (%rdx),%edx
    6079:	84 d2                	test   %dl,%dl
    607b:	40 0f 95 c7          	setne  %dil
    607f:	49 89 c0             	mov    %rax,%r8
    6082:	41 83 e0 07          	and    $0x7,%r8d
    6086:	41 38 d0             	cmp    %dl,%r8b
    6089:	0f 9d c2             	setge  %dl
    608c:	21 fa                	and    %edi,%edx
    608e:	84 d2                	test   %dl,%dl
    6090:	74 08                	je     609a <jstring_concatenate_jstring+0x5f2>
    6092:	48 89 c7             	mov    %rax,%rdi
    6095:	e8 16 e1 ff ff       	call   41b0 <__asan_report_store1@plt>
    609a:	40 88 31             	mov    %sil,(%rcx)
    609d:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    60a4:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    60ab:	48 89 c2             	mov    %rax,%rdx
    60ae:	48 89 d0             	mov    %rdx,%rax
    60b1:	48 c1 e8 03          	shr    $0x3,%rax
    60b5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    60bb:	0f b6 00             	movzbl (%rax),%eax
    60be:	84 c0                	test   %al,%al
    60c0:	0f 95 c1             	setne  %cl
    60c3:	3c 03                	cmp    $0x3,%al
    60c5:	0f 9e c0             	setle  %al
    60c8:	21 c8                	and    %ecx,%eax
    60ca:	84 c0                	test   %al,%al
    60cc:	74 08                	je     60d6 <jstring_concatenate_jstring+0x62e>
    60ce:	48 89 d7             	mov    %rdx,%rdi
    60d1:	e8 1a e0 ff ff       	call   40f0 <__asan_report_load4@plt>
    60d6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    60dd:	8b 00                	mov    (%rax),%eax
    60df:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
    60e5:	0f 82 f4 fe ff ff    	jb     5fdf <jstring_concatenate_jstring+0x537>
    60eb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    60f2:	48 83 c0 08          	add    $0x8,%rax
    60f6:	48 89 c2             	mov    %rax,%rdx
    60f9:	48 c1 ea 03          	shr    $0x3,%rdx
    60fd:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6104:	0f b6 12             	movzbl (%rdx),%edx
    6107:	84 d2                	test   %dl,%dl
    6109:	74 08                	je     6113 <jstring_concatenate_jstring+0x66b>
    610b:	48 89 c7             	mov    %rax,%rdi
    610e:	e8 2d e0 ff ff       	call   4140 <__asan_report_store8@plt>
    6113:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    611a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    6121:	48 89 50 08          	mov    %rdx,0x8(%rax)
    6125:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    612c:	8b 00                	mov    (%rax),%eax
    612e:	89 c0                	mov    %eax,%eax
    6130:	48 01 85 70 ff ff ff 	add    %rax,-0x90(%rbp)
    6137:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    613e:	00 00 00 
    6141:	e9 bb 00 00 00       	jmp    6201 <jstring_concatenate_jstring+0x759>
    6146:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    614a:	48 83 c0 08          	add    $0x8,%rax
    614e:	48 89 c2             	mov    %rax,%rdx
    6151:	48 c1 ea 03          	shr    $0x3,%rdx
    6155:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    615c:	0f b6 12             	movzbl (%rdx),%edx
    615f:	84 d2                	test   %dl,%dl
    6161:	74 08                	je     616b <jstring_concatenate_jstring+0x6c3>
    6163:	48 89 c7             	mov    %rax,%rdi
    6166:	e8 55 e0 ff ff       	call   41c0 <__asan_report_load8@plt>
    616b:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    616f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    6175:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    6179:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    617f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6186:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    618a:	48 89 f0             	mov    %rsi,%rax
    618d:	48 89 c2             	mov    %rax,%rdx
    6190:	48 c1 ea 03          	shr    $0x3,%rdx
    6194:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    619b:	0f b6 12             	movzbl (%rdx),%edx
    619e:	84 d2                	test   %dl,%dl
    61a0:	40 0f 95 c7          	setne  %dil
    61a4:	49 89 c0             	mov    %rax,%r8
    61a7:	41 83 e0 07          	and    $0x7,%r8d
    61ab:	41 38 d0             	cmp    %dl,%r8b
    61ae:	0f 9d c2             	setge  %dl
    61b1:	21 fa                	and    %edi,%edx
    61b3:	84 d2                	test   %dl,%dl
    61b5:	74 08                	je     61bf <jstring_concatenate_jstring+0x717>
    61b7:	48 89 c7             	mov    %rax,%rdi
    61ba:	e8 d1 df ff ff       	call   4190 <__asan_report_load1@plt>
    61bf:	0f b6 36             	movzbl (%rsi),%esi
    61c2:	48 89 c8             	mov    %rcx,%rax
    61c5:	48 89 c2             	mov    %rax,%rdx
    61c8:	48 c1 ea 03          	shr    $0x3,%rdx
    61cc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    61d3:	0f b6 12             	movzbl (%rdx),%edx
    61d6:	84 d2                	test   %dl,%dl
    61d8:	40 0f 95 c7          	setne  %dil
    61dc:	49 89 c0             	mov    %rax,%r8
    61df:	41 83 e0 07          	and    $0x7,%r8d
    61e3:	41 38 d0             	cmp    %dl,%r8b
    61e6:	0f 9d c2             	setge  %dl
    61e9:	21 fa                	and    %edi,%edx
    61eb:	84 d2                	test   %dl,%dl
    61ed:	74 08                	je     61f7 <jstring_concatenate_jstring+0x74f>
    61ef:	48 89 c7             	mov    %rax,%rdi
    61f2:	e8 b9 df ff ff       	call   41b0 <__asan_report_store1@plt>
    61f7:	40 88 31             	mov    %sil,(%rcx)
    61fa:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    6201:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    6205:	48 89 c2             	mov    %rax,%rdx
    6208:	48 89 d0             	mov    %rdx,%rax
    620b:	48 c1 e8 03          	shr    $0x3,%rax
    620f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6215:	0f b6 00             	movzbl (%rax),%eax
    6218:	84 c0                	test   %al,%al
    621a:	0f 95 c1             	setne  %cl
    621d:	3c 03                	cmp    $0x3,%al
    621f:	0f 9e c0             	setle  %al
    6222:	21 c8                	and    %ecx,%eax
    6224:	84 c0                	test   %al,%al
    6226:	74 08                	je     6230 <jstring_concatenate_jstring+0x788>
    6228:	48 89 d7             	mov    %rdx,%rdi
    622b:	e8 c0 de ff ff       	call   40f0 <__asan_report_load4@plt>
    6230:	8b 43 c0             	mov    -0x40(%rbx),%eax
    6233:	3b 85 6c ff ff ff    	cmp    -0x94(%rbp),%eax
    6239:	0f 83 07 ff ff ff    	jae    6146 <jstring_concatenate_jstring+0x69e>
    623f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6246:	48 89 c2             	mov    %rax,%rdx
    6249:	48 89 d0             	mov    %rdx,%rax
    624c:	48 c1 e8 03          	shr    $0x3,%rax
    6250:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6256:	0f b6 00             	movzbl (%rax),%eax
    6259:	84 c0                	test   %al,%al
    625b:	0f 95 c1             	setne  %cl
    625e:	3c 03                	cmp    $0x3,%al
    6260:	0f 9e c0             	setle  %al
    6263:	21 c8                	and    %ecx,%eax
    6265:	84 c0                	test   %al,%al
    6267:	74 08                	je     6271 <jstring_concatenate_jstring+0x7c9>
    6269:	48 89 d7             	mov    %rdx,%rdi
    626c:	e8 7f de ff ff       	call   40f0 <__asan_report_load4@plt>
    6271:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6278:	8b 10                	mov    (%rax),%edx
    627a:	8b 43 c0             	mov    -0x40(%rbx),%eax
    627d:	01 c2                	add    %eax,%edx
    627f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6286:	89 10                	mov    %edx,(%rax)
    6288:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    628f:	8b 00                	mov    (%rax),%eax
    6291:	83 c0 01             	add    $0x1,%eax
    6294:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
    6297:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    629e:	48 83 c0 04          	add    $0x4,%rax
    62a2:	48 89 c2             	mov    %rax,%rdx
    62a5:	48 c1 ea 03          	shr    $0x3,%rdx
    62a9:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    62b0:	0f b6 12             	movzbl (%rdx),%edx
    62b3:	84 d2                	test   %dl,%dl
    62b5:	40 0f 95 c7          	setne  %dil
    62b9:	48 89 c6             	mov    %rax,%rsi
    62bc:	83 e6 07             	and    $0x7,%esi
    62bf:	83 c6 03             	add    $0x3,%esi
    62c2:	40 38 d6             	cmp    %dl,%sil
    62c5:	0f 9d c2             	setge  %dl
    62c8:	21 fa                	and    %edi,%edx
    62ca:	84 d2                	test   %dl,%dl
    62cc:	74 08                	je     62d6 <jstring_concatenate_jstring+0x82e>
    62ce:	48 89 c7             	mov    %rax,%rdi
    62d1:	e8 5a dd ff ff       	call   4030 <__asan_report_store4@plt>
    62d6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    62dd:	89 48 04             	mov    %ecx,0x4(%rax)
    62e0:	b8 01 00 00 00       	mov    $0x1,%eax
    62e5:	89 c2                	mov    %eax,%edx
    62e7:	4d 39 e6             	cmp    %r12,%r14
    62ea:	74 23                	je     630f <jstring_concatenate_jstring+0x867>
    62ec:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    62f3:	45 
    62f4:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    62fb:	f5 f5 f5 
    62fe:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    6305:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    630a:	c6 00 00             	movb   $0x0,(%rax)
    630d:	eb 0b                	jmp    631a <jstring_concatenate_jstring+0x872>
    630f:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    6316:	00 00 00 00 
    631a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    631e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6325:	00 00 
    6327:	74 05                	je     632e <jstring_concatenate_jstring+0x886>
    6329:	e8 32 de ff ff       	call   4160 <__stack_chk_fail@plt>
    632e:	89 d0                	mov    %edx,%eax
    6330:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    6337:	5b                   	pop    %rbx
    6338:	41 5c                	pop    %r12
    633a:	41 5d                	pop    %r13
    633c:	41 5e                	pop    %r14
    633e:	5d                   	pop    %rbp
    633f:	c3                   	ret

0000000000006340 <jstring_concatenate_raw>:
    6340:	55                   	push   %rbp
    6341:	48 89 e5             	mov    %rsp,%rbp
    6344:	48 83 ec 30          	sub    $0x30,%rsp
    6348:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    634c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6350:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6354:	48 89 c7             	mov    %rax,%rdi
    6357:	e8 cf e7 ff ff       	call   4b2b <jstring_length>
    635c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    635f:	8b 05 33 4f 01 00    	mov    0x14f33(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    6365:	85 c0                	test   %eax,%eax
    6367:	75 6b                	jne    63d4 <jstring_concatenate_raw+0x94>
    6369:	4c 8b 05 d0 2d 01 00 	mov    0x12dd0(%rip),%r8        # 19140 <jstring_log>
    6370:	48 8d 15 29 d2 00 00 	lea    0xd229(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    6377:	48 8d 35 a2 d3 00 00 	lea    0xd3a2(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    637e:	48 8d 05 9b d2 00 00 	lea    0xd29b(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    6385:	b9 e9 01 00 00       	mov    $0x1e9,%ecx
    638a:	48 89 c7             	mov    %rax,%rdi
    638d:	b8 00 00 00 00       	mov    $0x0,%eax
    6392:	41 ff d0             	call   *%r8
    6395:	b9 00 00 00 00       	mov    $0x0,%ecx
    639a:	48 89 c8             	mov    %rcx,%rax
    639d:	48 89 c2             	mov    %rax,%rdx
    63a0:	48 c1 ea 03          	shr    $0x3,%rdx
    63a4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    63ab:	0f b6 12             	movzbl (%rdx),%edx
    63ae:	84 d2                	test   %dl,%dl
    63b0:	40 0f 95 c6          	setne  %sil
    63b4:	48 89 c7             	mov    %rax,%rdi
    63b7:	83 e7 07             	and    $0x7,%edi
    63ba:	40 38 d7             	cmp    %dl,%dil
    63bd:	0f 9d c2             	setge  %dl
    63c0:	21 f2                	and    %esi,%edx
    63c2:	84 d2                	test   %dl,%dl
    63c4:	74 08                	je     63ce <jstring_concatenate_raw+0x8e>
    63c6:	48 89 c7             	mov    %rax,%rdi
    63c9:	e8 c2 dd ff ff       	call   4190 <__asan_report_load1@plt>
    63ce:	0f b6 01             	movzbl (%rcx),%eax
    63d1:	88 45 e3             	mov    %al,-0x1d(%rbp)
    63d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63d8:	48 89 c2             	mov    %rax,%rdx
    63db:	48 89 d0             	mov    %rdx,%rax
    63de:	48 c1 e8 03          	shr    $0x3,%rax
    63e2:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    63e8:	0f b6 00             	movzbl (%rax),%eax
    63eb:	84 c0                	test   %al,%al
    63ed:	0f 95 c1             	setne  %cl
    63f0:	3c 03                	cmp    $0x3,%al
    63f2:	0f 9e c0             	setle  %al
    63f5:	21 c8                	and    %ecx,%eax
    63f7:	84 c0                	test   %al,%al
    63f9:	74 08                	je     6403 <jstring_concatenate_raw+0xc3>
    63fb:	48 89 d7             	mov    %rdx,%rdi
    63fe:	e8 ed dc ff ff       	call   40f0 <__asan_report_load4@plt>
    6403:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6407:	8b 10                	mov    (%rax),%edx
    6409:	8b 45 ec             	mov    -0x14(%rbp),%eax
    640c:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    640f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6413:	48 83 c0 04          	add    $0x4,%rax
    6417:	48 89 c2             	mov    %rax,%rdx
    641a:	48 c1 ea 03          	shr    $0x3,%rdx
    641e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6425:	0f b6 12             	movzbl (%rdx),%edx
    6428:	84 d2                	test   %dl,%dl
    642a:	40 0f 95 c7          	setne  %dil
    642e:	48 89 c6             	mov    %rax,%rsi
    6431:	83 e6 07             	and    $0x7,%esi
    6434:	83 c6 03             	add    $0x3,%esi
    6437:	40 38 d6             	cmp    %dl,%sil
    643a:	0f 9d c2             	setge  %dl
    643d:	21 fa                	and    %edi,%edx
    643f:	84 d2                	test   %dl,%dl
    6441:	74 08                	je     644b <jstring_concatenate_raw+0x10b>
    6443:	48 89 c7             	mov    %rax,%rdi
    6446:	e8 a5 dc ff ff       	call   40f0 <__asan_report_load4@plt>
    644b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    644f:	8b 40 04             	mov    0x4(%rax),%eax
    6452:	39 c1                	cmp    %eax,%ecx
    6454:	0f 83 23 01 00 00    	jae    657d <jstring_concatenate_raw+0x23d>
    645a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    645e:	48 83 c0 08          	add    $0x8,%rax
    6462:	48 89 c2             	mov    %rax,%rdx
    6465:	48 c1 ea 03          	shr    $0x3,%rdx
    6469:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6470:	0f b6 12             	movzbl (%rdx),%edx
    6473:	84 d2                	test   %dl,%dl
    6475:	74 08                	je     647f <jstring_concatenate_raw+0x13f>
    6477:	48 89 c7             	mov    %rax,%rdi
    647a:	e8 41 dd ff ff       	call   41c0 <__asan_report_load8@plt>
    647f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6483:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6487:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    648b:	8b 00                	mov    (%rax),%eax
    648d:	89 c0                	mov    %eax,%eax
    648f:	48 01 d0             	add    %rdx,%rax
    6492:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6496:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    649d:	e9 8a 00 00 00       	jmp    652c <jstring_concatenate_raw+0x1ec>
    64a2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    64a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64a9:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    64ad:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    64b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    64b8:	48 89 f0             	mov    %rsi,%rax
    64bb:	48 89 c2             	mov    %rax,%rdx
    64be:	48 c1 ea 03          	shr    $0x3,%rdx
    64c2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    64c9:	0f b6 12             	movzbl (%rdx),%edx
    64cc:	84 d2                	test   %dl,%dl
    64ce:	40 0f 95 c7          	setne  %dil
    64d2:	49 89 c0             	mov    %rax,%r8
    64d5:	41 83 e0 07          	and    $0x7,%r8d
    64d9:	41 38 d0             	cmp    %dl,%r8b
    64dc:	0f 9d c2             	setge  %dl
    64df:	21 fa                	and    %edi,%edx
    64e1:	84 d2                	test   %dl,%dl
    64e3:	74 08                	je     64ed <jstring_concatenate_raw+0x1ad>
    64e5:	48 89 c7             	mov    %rax,%rdi
    64e8:	e8 a3 dc ff ff       	call   4190 <__asan_report_load1@plt>
    64ed:	0f b6 36             	movzbl (%rsi),%esi
    64f0:	48 89 c8             	mov    %rcx,%rax
    64f3:	48 89 c2             	mov    %rax,%rdx
    64f6:	48 c1 ea 03          	shr    $0x3,%rdx
    64fa:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6501:	0f b6 12             	movzbl (%rdx),%edx
    6504:	84 d2                	test   %dl,%dl
    6506:	40 0f 95 c7          	setne  %dil
    650a:	49 89 c0             	mov    %rax,%r8
    650d:	41 83 e0 07          	and    $0x7,%r8d
    6511:	41 38 d0             	cmp    %dl,%r8b
    6514:	0f 9d c2             	setge  %dl
    6517:	21 fa                	and    %edi,%edx
    6519:	84 d2                	test   %dl,%dl
    651b:	74 08                	je     6525 <jstring_concatenate_raw+0x1e5>
    651d:	48 89 c7             	mov    %rax,%rdi
    6520:	e8 8b dc ff ff       	call   41b0 <__asan_report_store1@plt>
    6525:	40 88 31             	mov    %sil,(%rcx)
    6528:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    652c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    652f:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6532:	0f 83 6a ff ff ff    	jae    64a2 <jstring_concatenate_raw+0x162>
    6538:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    653c:	48 89 c2             	mov    %rax,%rdx
    653f:	48 89 d0             	mov    %rdx,%rax
    6542:	48 c1 e8 03          	shr    $0x3,%rax
    6546:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    654c:	0f b6 00             	movzbl (%rax),%eax
    654f:	84 c0                	test   %al,%al
    6551:	0f 95 c1             	setne  %cl
    6554:	3c 03                	cmp    $0x3,%al
    6556:	0f 9e c0             	setle  %al
    6559:	21 c8                	and    %ecx,%eax
    655b:	84 c0                	test   %al,%al
    655d:	74 08                	je     6567 <jstring_concatenate_raw+0x227>
    655f:	48 89 d7             	mov    %rdx,%rdi
    6562:	e8 89 db ff ff       	call   40f0 <__asan_report_load4@plt>
    6567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    656b:	8b 10                	mov    (%rax),%edx
    656d:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6570:	01 c2                	add    %eax,%edx
    6572:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6576:	89 10                	mov    %edx,(%rax)
    6578:	e9 b8 02 00 00       	jmp    6835 <jstring_concatenate_raw+0x4f5>
    657d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6581:	48 89 c2             	mov    %rax,%rdx
    6584:	48 89 d0             	mov    %rdx,%rax
    6587:	48 c1 e8 03          	shr    $0x3,%rax
    658b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6591:	0f b6 00             	movzbl (%rax),%eax
    6594:	84 c0                	test   %al,%al
    6596:	0f 95 c1             	setne  %cl
    6599:	3c 03                	cmp    $0x3,%al
    659b:	0f 9e c0             	setle  %al
    659e:	21 c8                	and    %ecx,%eax
    65a0:	84 c0                	test   %al,%al
    65a2:	74 08                	je     65ac <jstring_concatenate_raw+0x26c>
    65a4:	48 89 d7             	mov    %rdx,%rdi
    65a7:	e8 44 db ff ff       	call   40f0 <__asan_report_load4@plt>
    65ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65b0:	8b 10                	mov    (%rax),%edx
    65b2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    65b5:	01 d0                	add    %edx,%eax
    65b7:	83 c0 01             	add    $0x1,%eax
    65ba:	01 c0                	add    %eax,%eax
    65bc:	89 c0                	mov    %eax,%eax
    65be:	48 89 c7             	mov    %rax,%rdi
    65c1:	e8 11 df ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    65c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    65ca:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    65d1:	e9 b3 00 00 00       	jmp    6689 <jstring_concatenate_raw+0x349>
    65d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65da:	48 83 c0 08          	add    $0x8,%rax
    65de:	48 89 c2             	mov    %rax,%rdx
    65e1:	48 c1 ea 03          	shr    $0x3,%rdx
    65e5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    65ec:	0f b6 12             	movzbl (%rdx),%edx
    65ef:	84 d2                	test   %dl,%dl
    65f1:	74 08                	je     65fb <jstring_concatenate_raw+0x2bb>
    65f3:	48 89 c7             	mov    %rax,%rdi
    65f6:	e8 c5 db ff ff       	call   41c0 <__asan_report_load8@plt>
    65fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    65ff:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6603:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6606:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    660a:	8b 55 e8             	mov    -0x18(%rbp),%edx
    660d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6611:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6615:	48 89 f0             	mov    %rsi,%rax
    6618:	48 89 c2             	mov    %rax,%rdx
    661b:	48 c1 ea 03          	shr    $0x3,%rdx
    661f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6626:	0f b6 12             	movzbl (%rdx),%edx
    6629:	84 d2                	test   %dl,%dl
    662b:	40 0f 95 c7          	setne  %dil
    662f:	49 89 c0             	mov    %rax,%r8
    6632:	41 83 e0 07          	and    $0x7,%r8d
    6636:	41 38 d0             	cmp    %dl,%r8b
    6639:	0f 9d c2             	setge  %dl
    663c:	21 fa                	and    %edi,%edx
    663e:	84 d2                	test   %dl,%dl
    6640:	74 08                	je     664a <jstring_concatenate_raw+0x30a>
    6642:	48 89 c7             	mov    %rax,%rdi
    6645:	e8 46 db ff ff       	call   4190 <__asan_report_load1@plt>
    664a:	0f b6 36             	movzbl (%rsi),%esi
    664d:	48 89 c8             	mov    %rcx,%rax
    6650:	48 89 c2             	mov    %rax,%rdx
    6653:	48 c1 ea 03          	shr    $0x3,%rdx
    6657:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    665e:	0f b6 12             	movzbl (%rdx),%edx
    6661:	84 d2                	test   %dl,%dl
    6663:	40 0f 95 c7          	setne  %dil
    6667:	49 89 c0             	mov    %rax,%r8
    666a:	41 83 e0 07          	and    $0x7,%r8d
    666e:	41 38 d0             	cmp    %dl,%r8b
    6671:	0f 9d c2             	setge  %dl
    6674:	21 fa                	and    %edi,%edx
    6676:	84 d2                	test   %dl,%dl
    6678:	74 08                	je     6682 <jstring_concatenate_raw+0x342>
    667a:	48 89 c7             	mov    %rax,%rdi
    667d:	e8 2e db ff ff       	call   41b0 <__asan_report_store1@plt>
    6682:	40 88 31             	mov    %sil,(%rcx)
    6685:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    6689:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    668d:	48 89 c2             	mov    %rax,%rdx
    6690:	48 89 d0             	mov    %rdx,%rax
    6693:	48 c1 e8 03          	shr    $0x3,%rax
    6697:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    669d:	0f b6 00             	movzbl (%rax),%eax
    66a0:	84 c0                	test   %al,%al
    66a2:	0f 95 c1             	setne  %cl
    66a5:	3c 03                	cmp    $0x3,%al
    66a7:	0f 9e c0             	setle  %al
    66aa:	21 c8                	and    %ecx,%eax
    66ac:	84 c0                	test   %al,%al
    66ae:	74 08                	je     66b8 <jstring_concatenate_raw+0x378>
    66b0:	48 89 d7             	mov    %rdx,%rdi
    66b3:	e8 38 da ff ff       	call   40f0 <__asan_report_load4@plt>
    66b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66bc:	8b 00                	mov    (%rax),%eax
    66be:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    66c1:	0f 82 0f ff ff ff    	jb     65d6 <jstring_concatenate_raw+0x296>
    66c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66cb:	48 83 c0 08          	add    $0x8,%rax
    66cf:	48 89 c2             	mov    %rax,%rdx
    66d2:	48 c1 ea 03          	shr    $0x3,%rdx
    66d6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    66dd:	0f b6 12             	movzbl (%rdx),%edx
    66e0:	84 d2                	test   %dl,%dl
    66e2:	74 08                	je     66ec <jstring_concatenate_raw+0x3ac>
    66e4:	48 89 c7             	mov    %rax,%rdi
    66e7:	e8 54 da ff ff       	call   4140 <__asan_report_store8@plt>
    66ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66f0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66f4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    66f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66fc:	8b 00                	mov    (%rax),%eax
    66fe:	89 c0                	mov    %eax,%eax
    6700:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    6704:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    670b:	e9 8a 00 00 00       	jmp    679a <jstring_concatenate_raw+0x45a>
    6710:	8b 55 e8             	mov    -0x18(%rbp),%edx
    6713:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6717:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    671b:	8b 55 e8             	mov    -0x18(%rbp),%edx
    671e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6722:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6726:	48 89 f0             	mov    %rsi,%rax
    6729:	48 89 c2             	mov    %rax,%rdx
    672c:	48 c1 ea 03          	shr    $0x3,%rdx
    6730:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6737:	0f b6 12             	movzbl (%rdx),%edx
    673a:	84 d2                	test   %dl,%dl
    673c:	40 0f 95 c7          	setne  %dil
    6740:	49 89 c0             	mov    %rax,%r8
    6743:	41 83 e0 07          	and    $0x7,%r8d
    6747:	41 38 d0             	cmp    %dl,%r8b
    674a:	0f 9d c2             	setge  %dl
    674d:	21 fa                	and    %edi,%edx
    674f:	84 d2                	test   %dl,%dl
    6751:	74 08                	je     675b <jstring_concatenate_raw+0x41b>
    6753:	48 89 c7             	mov    %rax,%rdi
    6756:	e8 35 da ff ff       	call   4190 <__asan_report_load1@plt>
    675b:	0f b6 36             	movzbl (%rsi),%esi
    675e:	48 89 c8             	mov    %rcx,%rax
    6761:	48 89 c2             	mov    %rax,%rdx
    6764:	48 c1 ea 03          	shr    $0x3,%rdx
    6768:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    676f:	0f b6 12             	movzbl (%rdx),%edx
    6772:	84 d2                	test   %dl,%dl
    6774:	40 0f 95 c7          	setne  %dil
    6778:	49 89 c0             	mov    %rax,%r8
    677b:	41 83 e0 07          	and    $0x7,%r8d
    677f:	41 38 d0             	cmp    %dl,%r8b
    6782:	0f 9d c2             	setge  %dl
    6785:	21 fa                	and    %edi,%edx
    6787:	84 d2                	test   %dl,%dl
    6789:	74 08                	je     6793 <jstring_concatenate_raw+0x453>
    678b:	48 89 c7             	mov    %rax,%rdi
    678e:	e8 1d da ff ff       	call   41b0 <__asan_report_store1@plt>
    6793:	40 88 31             	mov    %sil,(%rcx)
    6796:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    679a:	8b 45 e8             	mov    -0x18(%rbp),%eax
    679d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    67a0:	0f 83 6a ff ff ff    	jae    6710 <jstring_concatenate_raw+0x3d0>
    67a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67aa:	48 89 c2             	mov    %rax,%rdx
    67ad:	48 89 d0             	mov    %rdx,%rax
    67b0:	48 c1 e8 03          	shr    $0x3,%rax
    67b4:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    67ba:	0f b6 00             	movzbl (%rax),%eax
    67bd:	84 c0                	test   %al,%al
    67bf:	0f 95 c1             	setne  %cl
    67c2:	3c 03                	cmp    $0x3,%al
    67c4:	0f 9e c0             	setle  %al
    67c7:	21 c8                	and    %ecx,%eax
    67c9:	84 c0                	test   %al,%al
    67cb:	74 08                	je     67d5 <jstring_concatenate_raw+0x495>
    67cd:	48 89 d7             	mov    %rdx,%rdi
    67d0:	e8 1b d9 ff ff       	call   40f0 <__asan_report_load4@plt>
    67d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67d9:	8b 10                	mov    (%rax),%edx
    67db:	8b 45 ec             	mov    -0x14(%rbp),%eax
    67de:	01 c2                	add    %eax,%edx
    67e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67e4:	89 10                	mov    %edx,(%rax)
    67e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67ea:	8b 00                	mov    (%rax),%eax
    67ec:	83 c0 01             	add    $0x1,%eax
    67ef:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
    67f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    67f6:	48 83 c0 04          	add    $0x4,%rax
    67fa:	48 89 c2             	mov    %rax,%rdx
    67fd:	48 c1 ea 03          	shr    $0x3,%rdx
    6801:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6808:	0f b6 12             	movzbl (%rdx),%edx
    680b:	84 d2                	test   %dl,%dl
    680d:	40 0f 95 c7          	setne  %dil
    6811:	48 89 c6             	mov    %rax,%rsi
    6814:	83 e6 07             	and    $0x7,%esi
    6817:	83 c6 03             	add    $0x3,%esi
    681a:	40 38 d6             	cmp    %dl,%sil
    681d:	0f 9d c2             	setge  %dl
    6820:	21 fa                	and    %edi,%edx
    6822:	84 d2                	test   %dl,%dl
    6824:	74 08                	je     682e <jstring_concatenate_raw+0x4ee>
    6826:	48 89 c7             	mov    %rax,%rdi
    6829:	e8 02 d8 ff ff       	call   4030 <__asan_report_store4@plt>
    682e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6832:	89 48 04             	mov    %ecx,0x4(%rax)
    6835:	b8 01 00 00 00       	mov    $0x1,%eax
    683a:	c9                   	leave
    683b:	c3                   	ret

000000000000683c <jstring_begins_with>:
    683c:	55                   	push   %rbp
    683d:	48 89 e5             	mov    %rsp,%rbp
    6840:	41 56                	push   %r14
    6842:	41 55                	push   %r13
    6844:	41 54                	push   %r12
    6846:	53                   	push   %rbx
    6847:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    684e:	48 89 f8             	mov    %rdi,%rax
    6851:	48 89 c1             	mov    %rax,%rcx
    6854:	bb 00 00 00 00       	mov    $0x0,%ebx
    6859:	48 89 f3             	mov    %rsi,%rbx
    685c:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    6863:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    686a:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    6871:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    6875:	49 89 de             	mov    %rbx,%r14
    6878:	83 3d e1 49 01 00 00 	cmpl   $0x0,0x149e1(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    687f:	74 12                	je     6893 <jstring_begins_with+0x57>
    6881:	bf 40 00 00 00       	mov    $0x40,%edi
    6886:	e8 15 d8 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    688b:	48 85 c0             	test   %rax,%rax
    688e:	74 03                	je     6893 <jstring_begins_with+0x57>
    6890:	48 89 c3             	mov    %rax,%rbx
    6893:	48 8d 43 60          	lea    0x60(%rbx),%rax
    6897:	49 89 c4             	mov    %rax,%r12
    689a:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    68a1:	48 8d 05 b8 ce 00 00 	lea    0xceb8(%rip),%rax        # 13760 <_IO_stdin_used+0x760>
    68a8:	48 89 43 08          	mov    %rax,0x8(%rbx)
    68ac:	48 8d 05 89 ff ff ff 	lea    -0x77(%rip),%rax        # 683c <jstring_begins_with>
    68b3:	48 89 43 10          	mov    %rax,0x10(%rbx)
    68b7:	49 89 dd             	mov    %rbx,%r13
    68ba:	49 c1 ed 03          	shr    $0x3,%r13
    68be:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    68c5:	f1 f1 f1 f1 
    68c9:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    68d0:	00 00 f3 f3 
    68d4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    68db:	00 00 
    68dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    68e1:	31 c0                	xor    %eax,%eax
    68e3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    68ea:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    68f1:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    68f6:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    68fb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6902:	48 89 c7             	mov    %rax,%rdi
    6905:	e8 21 e2 ff ff       	call   4b2b <jstring_length>
    690a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    6910:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    6915:	48 89 c2             	mov    %rax,%rdx
    6918:	48 89 d0             	mov    %rdx,%rax
    691b:	48 c1 e8 03          	shr    $0x3,%rax
    691f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6925:	0f b6 00             	movzbl (%rax),%eax
    6928:	84 c0                	test   %al,%al
    692a:	0f 95 c1             	setne  %cl
    692d:	3c 03                	cmp    $0x3,%al
    692f:	0f 9e c0             	setle  %al
    6932:	21 c8                	and    %ecx,%eax
    6934:	84 c0                	test   %al,%al
    6936:	74 08                	je     6940 <jstring_begins_with+0x104>
    6938:	48 89 d7             	mov    %rdx,%rdi
    693b:	e8 b0 d7 ff ff       	call   40f0 <__asan_report_load4@plt>
    6940:	41 8b 44 24 c0       	mov    -0x40(%r12),%eax
    6945:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    694b:	73 0a                	jae    6957 <jstring_begins_with+0x11b>
    694d:	b8 00 00 00 00       	mov    $0x0,%eax
    6952:	e9 ee 00 00 00       	jmp    6a45 <jstring_begins_with+0x209>
    6957:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    695e:	00 00 00 
    6961:	eb 1f                	jmp    6982 <jstring_begins_with+0x146>
    6963:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
    696a:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    6970:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    6976:	75 0a                	jne    6982 <jstring_begins_with+0x146>
    6978:	b8 01 00 00 00       	mov    $0x1,%eax
    697d:	e9 c3 00 00 00       	jmp    6a45 <jstring_begins_with+0x209>
    6982:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    6988:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    698f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6993:	48 89 c8             	mov    %rcx,%rax
    6996:	48 89 c2             	mov    %rax,%rdx
    6999:	48 c1 ea 03          	shr    $0x3,%rdx
    699d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    69a4:	0f b6 12             	movzbl (%rdx),%edx
    69a7:	84 d2                	test   %dl,%dl
    69a9:	40 0f 95 c6          	setne  %sil
    69ad:	48 89 c7             	mov    %rax,%rdi
    69b0:	83 e7 07             	and    $0x7,%edi
    69b3:	40 38 d7             	cmp    %dl,%dil
    69b6:	0f 9d c2             	setge  %dl
    69b9:	21 f2                	and    %esi,%edx
    69bb:	84 d2                	test   %dl,%dl
    69bd:	74 08                	je     69c7 <jstring_begins_with+0x18b>
    69bf:	48 89 c7             	mov    %rax,%rdi
    69c2:	e8 c9 d7 ff ff       	call   4190 <__asan_report_load1@plt>
    69c7:	0f b6 31             	movzbl (%rcx),%esi
    69ca:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    69cf:	48 83 c0 08          	add    $0x8,%rax
    69d3:	48 89 c2             	mov    %rax,%rdx
    69d6:	48 c1 ea 03          	shr    $0x3,%rdx
    69da:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    69e1:	0f b6 12             	movzbl (%rdx),%edx
    69e4:	84 d2                	test   %dl,%dl
    69e6:	74 08                	je     69f0 <jstring_begins_with+0x1b4>
    69e8:	48 89 c7             	mov    %rax,%rdi
    69eb:	e8 d0 d7 ff ff       	call   41c0 <__asan_report_load8@plt>
    69f0:	49 8b 54 24 c8       	mov    -0x38(%r12),%rdx
    69f5:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    69fb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    69ff:	48 89 c8             	mov    %rcx,%rax
    6a02:	48 89 c2             	mov    %rax,%rdx
    6a05:	48 c1 ea 03          	shr    $0x3,%rdx
    6a09:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6a10:	0f b6 12             	movzbl (%rdx),%edx
    6a13:	84 d2                	test   %dl,%dl
    6a15:	40 0f 95 c7          	setne  %dil
    6a19:	49 89 c0             	mov    %rax,%r8
    6a1c:	41 83 e0 07          	and    $0x7,%r8d
    6a20:	41 38 d0             	cmp    %dl,%r8b
    6a23:	0f 9d c2             	setge  %dl
    6a26:	21 fa                	and    %edi,%edx
    6a28:	84 d2                	test   %dl,%dl
    6a2a:	74 08                	je     6a34 <jstring_begins_with+0x1f8>
    6a2c:	48 89 c7             	mov    %rax,%rdi
    6a2f:	e8 5c d7 ff ff       	call   4190 <__asan_report_load1@plt>
    6a34:	0f b6 01             	movzbl (%rcx),%eax
    6a37:	40 38 c6             	cmp    %al,%sil
    6a3a:	0f 84 23 ff ff ff    	je     6963 <jstring_begins_with+0x127>
    6a40:	b8 00 00 00 00       	mov    $0x0,%eax
    6a45:	89 c2                	mov    %eax,%edx
    6a47:	49 39 de             	cmp    %rbx,%r14
    6a4a:	74 21                	je     6a6d <jstring_begins_with+0x231>
    6a4c:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    6a53:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    6a5a:	f5 f5 f5 
    6a5d:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    6a64:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6a68:	c6 00 00             	movb   $0x0,(%rax)
    6a6b:	eb 0b                	jmp    6a78 <jstring_begins_with+0x23c>
    6a6d:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    6a74:	00 00 00 00 
    6a78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a7c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6a83:	00 00 
    6a85:	74 05                	je     6a8c <jstring_begins_with+0x250>
    6a87:	e8 d4 d6 ff ff       	call   4160 <__stack_chk_fail@plt>
    6a8c:	89 d0                	mov    %edx,%eax
    6a8e:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    6a95:	5b                   	pop    %rbx
    6a96:	41 5c                	pop    %r12
    6a98:	41 5d                	pop    %r13
    6a9a:	41 5e                	pop    %r14
    6a9c:	5d                   	pop    %rbp
    6a9d:	c3                   	ret

0000000000006a9e <jstring_ends_with>:
    6a9e:	55                   	push   %rbp
    6a9f:	48 89 e5             	mov    %rsp,%rbp
    6aa2:	41 56                	push   %r14
    6aa4:	41 55                	push   %r13
    6aa6:	41 54                	push   %r12
    6aa8:	53                   	push   %rbx
    6aa9:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    6ab0:	48 89 f8             	mov    %rdi,%rax
    6ab3:	48 89 c1             	mov    %rax,%rcx
    6ab6:	bb 00 00 00 00       	mov    $0x0,%ebx
    6abb:	48 89 f3             	mov    %rsi,%rbx
    6abe:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    6ac5:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    6acc:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    6ad3:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    6ad7:	49 89 de             	mov    %rbx,%r14
    6ada:	83 3d 7f 47 01 00 00 	cmpl   $0x0,0x1477f(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    6ae1:	74 12                	je     6af5 <jstring_ends_with+0x57>
    6ae3:	bf 40 00 00 00       	mov    $0x40,%edi
    6ae8:	e8 b3 d5 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    6aed:	48 85 c0             	test   %rax,%rax
    6af0:	74 03                	je     6af5 <jstring_ends_with+0x57>
    6af2:	48 89 c3             	mov    %rax,%rbx
    6af5:	48 8d 43 60          	lea    0x60(%rbx),%rax
    6af9:	49 89 c4             	mov    %rax,%r12
    6afc:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    6b03:	48 8d 05 6c cc 00 00 	lea    0xcc6c(%rip),%rax        # 13776 <_IO_stdin_used+0x776>
    6b0a:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6b0e:	48 8d 05 89 ff ff ff 	lea    -0x77(%rip),%rax        # 6a9e <jstring_ends_with>
    6b15:	48 89 43 10          	mov    %rax,0x10(%rbx)
    6b19:	49 89 dd             	mov    %rbx,%r13
    6b1c:	49 c1 ed 03          	shr    $0x3,%r13
    6b20:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    6b27:	f1 f1 f1 f1 
    6b2b:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    6b32:	00 00 f3 f3 
    6b36:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6b3d:	00 00 
    6b3f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    6b43:	31 c0                	xor    %eax,%eax
    6b45:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    6b4c:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    6b53:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    6b58:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    6b5d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6b64:	48 89 c7             	mov    %rax,%rdi
    6b67:	e8 bf df ff ff       	call   4b2b <jstring_length>
    6b6c:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    6b72:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    6b77:	48 89 c2             	mov    %rax,%rdx
    6b7a:	48 89 d0             	mov    %rdx,%rax
    6b7d:	48 c1 e8 03          	shr    $0x3,%rax
    6b81:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6b87:	0f b6 00             	movzbl (%rax),%eax
    6b8a:	84 c0                	test   %al,%al
    6b8c:	0f 95 c1             	setne  %cl
    6b8f:	3c 03                	cmp    $0x3,%al
    6b91:	0f 9e c0             	setle  %al
    6b94:	21 c8                	and    %ecx,%eax
    6b96:	84 c0                	test   %al,%al
    6b98:	74 08                	je     6ba2 <jstring_ends_with+0x104>
    6b9a:	48 89 d7             	mov    %rdx,%rdi
    6b9d:	e8 4e d5 ff ff       	call   40f0 <__asan_report_load4@plt>
    6ba2:	41 8b 44 24 c0       	mov    -0x40(%r12),%eax
    6ba7:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    6bad:	73 0a                	jae    6bb9 <jstring_ends_with+0x11b>
    6baf:	b8 00 00 00 00       	mov    $0x0,%eax
    6bb4:	e9 2f 01 00 00       	jmp    6ce8 <jstring_ends_with+0x24a>
    6bb9:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    6bc0:	00 00 00 
    6bc3:	eb 1f                	jmp    6be4 <jstring_ends_with+0x146>
    6bc5:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
    6bcc:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    6bd2:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    6bd8:	75 0a                	jne    6be4 <jstring_ends_with+0x146>
    6bda:	b8 01 00 00 00       	mov    $0x1,%eax
    6bdf:	e9 04 01 00 00       	jmp    6ce8 <jstring_ends_with+0x24a>
    6be4:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    6bea:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    6bf1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6bf5:	48 89 c8             	mov    %rcx,%rax
    6bf8:	48 89 c2             	mov    %rax,%rdx
    6bfb:	48 c1 ea 03          	shr    $0x3,%rdx
    6bff:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6c06:	0f b6 12             	movzbl (%rdx),%edx
    6c09:	84 d2                	test   %dl,%dl
    6c0b:	40 0f 95 c6          	setne  %sil
    6c0f:	48 89 c7             	mov    %rax,%rdi
    6c12:	83 e7 07             	and    $0x7,%edi
    6c15:	40 38 d7             	cmp    %dl,%dil
    6c18:	0f 9d c2             	setge  %dl
    6c1b:	21 f2                	and    %esi,%edx
    6c1d:	84 d2                	test   %dl,%dl
    6c1f:	74 08                	je     6c29 <jstring_ends_with+0x18b>
    6c21:	48 89 c7             	mov    %rax,%rdi
    6c24:	e8 67 d5 ff ff       	call   4190 <__asan_report_load1@plt>
    6c29:	0f b6 31             	movzbl (%rcx),%esi
    6c2c:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    6c31:	48 83 c0 08          	add    $0x8,%rax
    6c35:	48 89 c2             	mov    %rax,%rdx
    6c38:	48 c1 ea 03          	shr    $0x3,%rdx
    6c3c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6c43:	0f b6 12             	movzbl (%rdx),%edx
    6c46:	84 d2                	test   %dl,%dl
    6c48:	74 08                	je     6c52 <jstring_ends_with+0x1b4>
    6c4a:	48 89 c7             	mov    %rax,%rdi
    6c4d:	e8 6e d5 ff ff       	call   41c0 <__asan_report_load8@plt>
    6c52:	49 8b 4c 24 c8       	mov    -0x38(%r12),%rcx
    6c57:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    6c5c:	48 89 c2             	mov    %rax,%rdx
    6c5f:	48 89 d0             	mov    %rdx,%rax
    6c62:	48 c1 e8 03          	shr    $0x3,%rax
    6c66:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    6c6c:	0f b6 00             	movzbl (%rax),%eax
    6c6f:	84 c0                	test   %al,%al
    6c71:	40 0f 95 c7          	setne  %dil
    6c75:	3c 03                	cmp    $0x3,%al
    6c77:	0f 9e c0             	setle  %al
    6c7a:	21 f8                	and    %edi,%eax
    6c7c:	84 c0                	test   %al,%al
    6c7e:	74 08                	je     6c88 <jstring_ends_with+0x1ea>
    6c80:	48 89 d7             	mov    %rdx,%rdi
    6c83:	e8 68 d4 ff ff       	call   40f0 <__asan_report_load4@plt>
    6c88:	41 8b 44 24 c0       	mov    -0x40(%r12),%eax
    6c8d:	2b 85 7c ff ff ff    	sub    -0x84(%rbp),%eax
    6c93:	89 c2                	mov    %eax,%edx
    6c95:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    6c9b:	01 d0                	add    %edx,%eax
    6c9d:	89 c0                	mov    %eax,%eax
    6c9f:	48 01 c1             	add    %rax,%rcx
    6ca2:	48 89 c8             	mov    %rcx,%rax
    6ca5:	48 89 c2             	mov    %rax,%rdx
    6ca8:	48 c1 ea 03          	shr    $0x3,%rdx
    6cac:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6cb3:	0f b6 12             	movzbl (%rdx),%edx
    6cb6:	84 d2                	test   %dl,%dl
    6cb8:	40 0f 95 c7          	setne  %dil
    6cbc:	49 89 c0             	mov    %rax,%r8
    6cbf:	41 83 e0 07          	and    $0x7,%r8d
    6cc3:	41 38 d0             	cmp    %dl,%r8b
    6cc6:	0f 9d c2             	setge  %dl
    6cc9:	21 fa                	and    %edi,%edx
    6ccb:	84 d2                	test   %dl,%dl
    6ccd:	74 08                	je     6cd7 <jstring_ends_with+0x239>
    6ccf:	48 89 c7             	mov    %rax,%rdi
    6cd2:	e8 b9 d4 ff ff       	call   4190 <__asan_report_load1@plt>
    6cd7:	0f b6 01             	movzbl (%rcx),%eax
    6cda:	40 38 c6             	cmp    %al,%sil
    6cdd:	0f 84 e2 fe ff ff    	je     6bc5 <jstring_ends_with+0x127>
    6ce3:	b8 00 00 00 00       	mov    $0x0,%eax
    6ce8:	89 c2                	mov    %eax,%edx
    6cea:	49 39 de             	cmp    %rbx,%r14
    6ced:	74 21                	je     6d10 <jstring_ends_with+0x272>
    6cef:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    6cf6:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    6cfd:	f5 f5 f5 
    6d00:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    6d07:	48 8b 43 38          	mov    0x38(%rbx),%rax
    6d0b:	c6 00 00             	movb   $0x0,(%rax)
    6d0e:	eb 0b                	jmp    6d1b <jstring_ends_with+0x27d>
    6d10:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    6d17:	00 00 00 00 
    6d1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d1f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6d26:	00 00 
    6d28:	74 05                	je     6d2f <jstring_ends_with+0x291>
    6d2a:	e8 31 d4 ff ff       	call   4160 <__stack_chk_fail@plt>
    6d2f:	89 d0                	mov    %edx,%eax
    6d31:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    6d38:	5b                   	pop    %rbx
    6d39:	41 5c                	pop    %r12
    6d3b:	41 5d                	pop    %r13
    6d3d:	41 5e                	pop    %r14
    6d3f:	5d                   	pop    %rbp
    6d40:	c3                   	ret

0000000000006d41 <jstring_create_integer>:
    6d41:	55                   	push   %rbp
    6d42:	48 89 e5             	mov    %rsp,%rbp
    6d45:	41 56                	push   %r14
    6d47:	41 55                	push   %r13
    6d49:	41 54                	push   %r12
    6d4b:	53                   	push   %rbx
    6d4c:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6d50:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    6d57:	89 b5 64 ff ff ff    	mov    %esi,-0x9c(%rbp)
    6d5d:	4c 8d 65 a0          	lea    -0x60(%rbp),%r12
    6d61:	4d 89 e6             	mov    %r12,%r14
    6d64:	83 3d f5 44 01 00 00 	cmpl   $0x0,0x144f5(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    6d6b:	74 12                	je     6d7f <jstring_create_integer+0x3e>
    6d6d:	bf 40 00 00 00       	mov    $0x40,%edi
    6d72:	e8 29 d3 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    6d77:	48 85 c0             	test   %rax,%rax
    6d7a:	74 03                	je     6d7f <jstring_create_integer+0x3e>
    6d7c:	49 89 c4             	mov    %rax,%r12
    6d7f:	49 8d 44 24 40       	lea    0x40(%r12),%rax
    6d84:	48 89 c3             	mov    %rax,%rbx
    6d87:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    6d8e:	41 
    6d8f:	48 8d 05 f6 c9 00 00 	lea    0xc9f6(%rip),%rax        # 1378c <_IO_stdin_used+0x78c>
    6d96:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    6d9b:	48 8d 05 9f ff ff ff 	lea    -0x61(%rip),%rax        # 6d41 <jstring_create_integer>
    6da2:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    6da7:	4d 89 e5             	mov    %r12,%r13
    6daa:	49 c1 ed 03          	shr    $0x3,%r13
    6dae:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    6db5:	f1 f1 f1 f1 
    6db9:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    6dc0:	00 00 f3 f3 
    6dc4:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    6dcb:	00 
    6dcc:	0f 85 ce 00 00 00    	jne    6ea0 <jstring_create_integer+0x15f>
    6dd2:	bf 04 00 00 00       	mov    $0x4,%edi
    6dd7:	e8 fb d6 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    6ddc:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6de0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6de4:	48 89 c2             	mov    %rax,%rdx
    6de7:	48 c1 ea 03          	shr    $0x3,%rdx
    6deb:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6df2:	0f b6 12             	movzbl (%rdx),%edx
    6df5:	84 d2                	test   %dl,%dl
    6df7:	0f 95 c1             	setne  %cl
    6dfa:	48 89 c6             	mov    %rax,%rsi
    6dfd:	83 e6 07             	and    $0x7,%esi
    6e00:	40 38 d6             	cmp    %dl,%sil
    6e03:	0f 9d c2             	setge  %dl
    6e06:	21 ca                	and    %ecx,%edx
    6e08:	84 d2                	test   %dl,%dl
    6e0a:	74 08                	je     6e14 <jstring_create_integer+0xd3>
    6e0c:	48 89 c7             	mov    %rax,%rdi
    6e0f:	e8 9c d3 ff ff       	call   41b0 <__asan_report_store1@plt>
    6e14:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6e18:	c6 00 30             	movb   $0x30,(%rax)
    6e1b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6e1f:	48 8d 48 01          	lea    0x1(%rax),%rcx
    6e23:	48 89 c8             	mov    %rcx,%rax
    6e26:	48 89 c2             	mov    %rax,%rdx
    6e29:	48 c1 ea 03          	shr    $0x3,%rdx
    6e2d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6e34:	0f b6 12             	movzbl (%rdx),%edx
    6e37:	84 d2                	test   %dl,%dl
    6e39:	40 0f 95 c6          	setne  %sil
    6e3d:	48 89 c7             	mov    %rax,%rdi
    6e40:	83 e7 07             	and    $0x7,%edi
    6e43:	40 38 d7             	cmp    %dl,%dil
    6e46:	0f 9d c2             	setge  %dl
    6e49:	21 f2                	and    %esi,%edx
    6e4b:	84 d2                	test   %dl,%dl
    6e4d:	74 08                	je     6e57 <jstring_create_integer+0x116>
    6e4f:	48 89 c7             	mov    %rax,%rdi
    6e52:	e8 59 d3 ff ff       	call   41b0 <__asan_report_store1@plt>
    6e57:	c6 01 00             	movb   $0x0,(%rcx)
    6e5a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6e5e:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    6e62:	c7 43 e0 01 00 00 00 	movl   $0x1,-0x20(%rbx)
    6e69:	8b 43 e0             	mov    -0x20(%rbx),%eax
    6e6c:	83 c0 01             	add    $0x1,%eax
    6e6f:	01 c0                	add    %eax,%eax
    6e71:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    6e74:	48 8b 15 c5 22 01 00 	mov    0x122c5(%rip),%rdx        # 19140 <jstring_log>
    6e7b:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    6e7f:	48 8d 0d 3a c9 00 00 	lea    0xc93a(%rip),%rcx        # 137c0 <_IO_stdin_used+0x7c0>
    6e86:	48 89 c6             	mov    %rax,%rsi
    6e89:	48 89 cf             	mov    %rcx,%rdi
    6e8c:	b8 00 00 00 00       	mov    $0x0,%eax
    6e91:	ff d2                	call   *%rdx
    6e93:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    6e97:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    6e9b:	e9 29 06 00 00       	jmp    74c9 <jstring_create_integer+0x788>
    6ea0:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    6ea7:	00 
    6ea8:	0f 89 8d 02 00 00    	jns    713b <jstring_create_integer+0x3fa>
    6eae:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
    6eb5:	74 6e                	je     6f25 <jstring_create_integer+0x1e4>
    6eb7:	4c 8b 05 82 22 01 00 	mov    0x12282(%rip),%r8        # 19140 <jstring_log>
    6ebe:	48 8d 15 db c6 00 00 	lea    0xc6db(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    6ec5:	48 8d 35 54 c9 00 00 	lea    0xc954(%rip),%rsi        # 13820 <_IO_stdin_used+0x820>
    6ecc:	48 8d 05 4d c7 00 00 	lea    0xc74d(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    6ed3:	b9 4d 02 00 00       	mov    $0x24d,%ecx
    6ed8:	48 89 c7             	mov    %rax,%rdi
    6edb:	b8 00 00 00 00       	mov    $0x0,%eax
    6ee0:	41 ff d0             	call   *%r8
    6ee3:	b9 00 00 00 00       	mov    $0x0,%ecx
    6ee8:	48 89 c8             	mov    %rcx,%rax
    6eeb:	48 89 c2             	mov    %rax,%rdx
    6eee:	48 c1 ea 03          	shr    $0x3,%rdx
    6ef2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    6ef9:	0f b6 12             	movzbl (%rdx),%edx
    6efc:	84 d2                	test   %dl,%dl
    6efe:	40 0f 95 c6          	setne  %sil
    6f02:	48 89 c7             	mov    %rax,%rdi
    6f05:	83 e7 07             	and    $0x7,%edi
    6f08:	40 38 d7             	cmp    %dl,%dil
    6f0b:	0f 9d c2             	setge  %dl
    6f0e:	21 f2                	and    %esi,%edx
    6f10:	84 d2                	test   %dl,%dl
    6f12:	74 08                	je     6f1c <jstring_create_integer+0x1db>
    6f14:	48 89 c7             	mov    %rax,%rdi
    6f17:	e8 74 d2 ff ff       	call   4190 <__asan_report_load1@plt>
    6f1c:	0f b6 01             	movzbl (%rcx),%eax
    6f1f:	88 85 7b ff ff ff    	mov    %al,-0x85(%rbp)
    6f25:	c7 85 64 ff ff ff 01 	movl   $0x1,-0x9c(%rbp)
    6f2c:	00 00 00 
    6f2f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    6f36:	48 f7 d8             	neg    %rax
    6f39:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6f3d:	eb 30                	jmp    6f6f <jstring_create_integer+0x22e>
    6f3f:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    6f43:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    6f4a:	66 66 66 
    6f4d:	48 89 c8             	mov    %rcx,%rax
    6f50:	48 f7 ea             	imul   %rdx
    6f53:	48 89 d0             	mov    %rdx,%rax
    6f56:	48 c1 f8 02          	sar    $0x2,%rax
    6f5a:	48 c1 f9 3f          	sar    $0x3f,%rcx
    6f5e:	48 89 ca             	mov    %rcx,%rdx
    6f61:	48 29 d0             	sub    %rdx,%rax
    6f64:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    6f68:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    6f6f:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    6f74:	75 c9                	jne    6f3f <jstring_create_integer+0x1fe>
    6f76:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    6f7c:	83 c0 01             	add    $0x1,%eax
    6f7f:	01 c0                	add    %eax,%eax
    6f81:	89 c0                	mov    %eax,%eax
    6f83:	48 89 c7             	mov    %rax,%rdi
    6f86:	e8 4c d5 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    6f8b:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    6f8f:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    6f95:	83 e8 01             	sub    $0x1,%eax
    6f98:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    6f9e:	48 f7 9d 68 ff ff ff 	negq   -0x98(%rbp)
    6fa5:	e9 bc 00 00 00       	jmp    7066 <jstring_create_integer+0x325>
    6faa:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    6fb1:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    6fb8:	66 66 66 
    6fbb:	48 89 c8             	mov    %rcx,%rax
    6fbe:	48 f7 ea             	imul   %rdx
    6fc1:	48 c1 fa 02          	sar    $0x2,%rdx
    6fc5:	48 89 c8             	mov    %rcx,%rax
    6fc8:	48 c1 f8 3f          	sar    $0x3f,%rax
    6fcc:	48 29 c2             	sub    %rax,%rdx
    6fcf:	48 89 d0             	mov    %rdx,%rax
    6fd2:	48 c1 e0 02          	shl    $0x2,%rax
    6fd6:	48 01 d0             	add    %rdx,%rax
    6fd9:	48 01 c0             	add    %rax,%rax
    6fdc:	48 29 c1             	sub    %rax,%rcx
    6fdf:	48 89 ca             	mov    %rcx,%rdx
    6fe2:	89 d0                	mov    %edx,%eax
    6fe4:	8d 70 30             	lea    0x30(%rax),%esi
    6fe7:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6fed:	48 63 d0             	movslq %eax,%rdx
    6ff0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6ff4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6ff8:	48 89 c8             	mov    %rcx,%rax
    6ffb:	48 89 c2             	mov    %rax,%rdx
    6ffe:	48 c1 ea 03          	shr    $0x3,%rdx
    7002:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7009:	0f b6 12             	movzbl (%rdx),%edx
    700c:	84 d2                	test   %dl,%dl
    700e:	40 0f 95 c7          	setne  %dil
    7012:	49 89 c0             	mov    %rax,%r8
    7015:	41 83 e0 07          	and    $0x7,%r8d
    7019:	41 38 d0             	cmp    %dl,%r8b
    701c:	0f 9d c2             	setge  %dl
    701f:	21 fa                	and    %edi,%edx
    7021:	84 d2                	test   %dl,%dl
    7023:	74 08                	je     702d <jstring_create_integer+0x2ec>
    7025:	48 89 c7             	mov    %rax,%rdi
    7028:	e8 83 d1 ff ff       	call   41b0 <__asan_report_store1@plt>
    702d:	40 88 31             	mov    %sil,(%rcx)
    7030:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    7037:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    703e:	66 66 66 
    7041:	48 89 c8             	mov    %rcx,%rax
    7044:	48 f7 ea             	imul   %rdx
    7047:	48 89 d0             	mov    %rdx,%rax
    704a:	48 c1 f8 02          	sar    $0x2,%rax
    704e:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7052:	48 89 ca             	mov    %rcx,%rdx
    7055:	48 29 d0             	sub    %rdx,%rax
    7058:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    705f:	83 ad 7c ff ff ff 01 	subl   $0x1,-0x84(%rbp)
    7066:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    706d:	0f 8f 37 ff ff ff    	jg     6faa <jstring_create_integer+0x269>
    7073:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7077:	48 89 c2             	mov    %rax,%rdx
    707a:	48 c1 ea 03          	shr    $0x3,%rdx
    707e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7085:	0f b6 12             	movzbl (%rdx),%edx
    7088:	84 d2                	test   %dl,%dl
    708a:	0f 95 c1             	setne  %cl
    708d:	48 89 c6             	mov    %rax,%rsi
    7090:	83 e6 07             	and    $0x7,%esi
    7093:	40 38 d6             	cmp    %dl,%sil
    7096:	0f 9d c2             	setge  %dl
    7099:	21 ca                	and    %ecx,%edx
    709b:	84 d2                	test   %dl,%dl
    709d:	74 08                	je     70a7 <jstring_create_integer+0x366>
    709f:	48 89 c7             	mov    %rax,%rdi
    70a2:	e8 09 d1 ff ff       	call   41b0 <__asan_report_store1@plt>
    70a7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    70ab:	c6 00 2d             	movb   $0x2d,(%rax)
    70ae:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
    70b4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    70b8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    70bc:	48 89 c8             	mov    %rcx,%rax
    70bf:	48 89 c2             	mov    %rax,%rdx
    70c2:	48 c1 ea 03          	shr    $0x3,%rdx
    70c6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    70cd:	0f b6 12             	movzbl (%rdx),%edx
    70d0:	84 d2                	test   %dl,%dl
    70d2:	40 0f 95 c6          	setne  %sil
    70d6:	48 89 c7             	mov    %rax,%rdi
    70d9:	83 e7 07             	and    $0x7,%edi
    70dc:	40 38 d7             	cmp    %dl,%dil
    70df:	0f 9d c2             	setge  %dl
    70e2:	21 f2                	and    %esi,%edx
    70e4:	84 d2                	test   %dl,%dl
    70e6:	74 08                	je     70f0 <jstring_create_integer+0x3af>
    70e8:	48 89 c7             	mov    %rax,%rdi
    70eb:	e8 c0 d0 ff ff       	call   41b0 <__asan_report_store1@plt>
    70f0:	c6 01 00             	movb   $0x0,(%rcx)
    70f3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    70f7:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    70fb:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    7101:	89 43 e0             	mov    %eax,-0x20(%rbx)
    7104:	8b 43 e0             	mov    -0x20(%rbx),%eax
    7107:	83 c0 01             	add    $0x1,%eax
    710a:	01 c0                	add    %eax,%eax
    710c:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    710f:	48 8b 15 2a 20 01 00 	mov    0x1202a(%rip),%rdx        # 19140 <jstring_log>
    7116:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    711a:	48 8d 0d 9f c6 00 00 	lea    0xc69f(%rip),%rcx        # 137c0 <_IO_stdin_used+0x7c0>
    7121:	48 89 c6             	mov    %rax,%rsi
    7124:	48 89 cf             	mov    %rcx,%rdi
    7127:	b8 00 00 00 00       	mov    $0x0,%eax
    712c:	ff d2                	call   *%rdx
    712e:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    7132:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    7136:	e9 8e 03 00 00       	jmp    74c9 <jstring_create_integer+0x788>
    713b:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
    7142:	0f 85 bb 01 00 00    	jne    7303 <jstring_create_integer+0x5c2>
    7148:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    714f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7153:	eb 30                	jmp    7185 <jstring_create_integer+0x444>
    7155:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx
    7159:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    7160:	66 66 66 
    7163:	48 89 c8             	mov    %rcx,%rax
    7166:	48 f7 ea             	imul   %rdx
    7169:	48 89 d0             	mov    %rdx,%rax
    716c:	48 c1 f8 02          	sar    $0x2,%rax
    7170:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7174:	48 89 ca             	mov    %rcx,%rdx
    7177:	48 29 d0             	sub    %rdx,%rax
    717a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    717e:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    7185:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    718a:	75 c9                	jne    7155 <jstring_create_integer+0x414>
    718c:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    7192:	83 c0 01             	add    $0x1,%eax
    7195:	01 c0                	add    %eax,%eax
    7197:	89 c0                	mov    %eax,%eax
    7199:	48 89 c7             	mov    %rax,%rdi
    719c:	e8 36 d3 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    71a1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    71a5:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    71ab:	83 e8 01             	sub    $0x1,%eax
    71ae:	89 45 80             	mov    %eax,-0x80(%rbp)
    71b1:	e9 b6 00 00 00       	jmp    726c <jstring_create_integer+0x52b>
    71b6:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    71bd:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    71c4:	66 66 66 
    71c7:	48 89 c8             	mov    %rcx,%rax
    71ca:	48 f7 ea             	imul   %rdx
    71cd:	48 c1 fa 02          	sar    $0x2,%rdx
    71d1:	48 89 c8             	mov    %rcx,%rax
    71d4:	48 c1 f8 3f          	sar    $0x3f,%rax
    71d8:	48 29 c2             	sub    %rax,%rdx
    71db:	48 89 d0             	mov    %rdx,%rax
    71de:	48 c1 e0 02          	shl    $0x2,%rax
    71e2:	48 01 d0             	add    %rdx,%rax
    71e5:	48 01 c0             	add    %rax,%rax
    71e8:	48 29 c1             	sub    %rax,%rcx
    71eb:	48 89 ca             	mov    %rcx,%rdx
    71ee:	89 d0                	mov    %edx,%eax
    71f0:	8d 70 30             	lea    0x30(%rax),%esi
    71f3:	8b 45 80             	mov    -0x80(%rbp),%eax
    71f6:	48 63 d0             	movslq %eax,%rdx
    71f9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    71fd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7201:	48 89 c8             	mov    %rcx,%rax
    7204:	48 89 c2             	mov    %rax,%rdx
    7207:	48 c1 ea 03          	shr    $0x3,%rdx
    720b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7212:	0f b6 12             	movzbl (%rdx),%edx
    7215:	84 d2                	test   %dl,%dl
    7217:	40 0f 95 c7          	setne  %dil
    721b:	49 89 c0             	mov    %rax,%r8
    721e:	41 83 e0 07          	and    $0x7,%r8d
    7222:	41 38 d0             	cmp    %dl,%r8b
    7225:	0f 9d c2             	setge  %dl
    7228:	21 fa                	and    %edi,%edx
    722a:	84 d2                	test   %dl,%dl
    722c:	74 08                	je     7236 <jstring_create_integer+0x4f5>
    722e:	48 89 c7             	mov    %rax,%rdi
    7231:	e8 7a cf ff ff       	call   41b0 <__asan_report_store1@plt>
    7236:	40 88 31             	mov    %sil,(%rcx)
    7239:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    7240:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    7247:	66 66 66 
    724a:	48 89 c8             	mov    %rcx,%rax
    724d:	48 f7 ea             	imul   %rdx
    7250:	48 89 d0             	mov    %rdx,%rax
    7253:	48 c1 f8 02          	sar    $0x2,%rax
    7257:	48 c1 f9 3f          	sar    $0x3f,%rcx
    725b:	48 89 ca             	mov    %rcx,%rdx
    725e:	48 29 d0             	sub    %rdx,%rax
    7261:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7268:	83 6d 80 01          	subl   $0x1,-0x80(%rbp)
    726c:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    7270:	0f 89 40 ff ff ff    	jns    71b6 <jstring_create_integer+0x475>
    7276:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
    727c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7280:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7284:	48 89 c8             	mov    %rcx,%rax
    7287:	48 89 c2             	mov    %rax,%rdx
    728a:	48 c1 ea 03          	shr    $0x3,%rdx
    728e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7295:	0f b6 12             	movzbl (%rdx),%edx
    7298:	84 d2                	test   %dl,%dl
    729a:	40 0f 95 c6          	setne  %sil
    729e:	48 89 c7             	mov    %rax,%rdi
    72a1:	83 e7 07             	and    $0x7,%edi
    72a4:	40 38 d7             	cmp    %dl,%dil
    72a7:	0f 9d c2             	setge  %dl
    72aa:	21 f2                	and    %esi,%edx
    72ac:	84 d2                	test   %dl,%dl
    72ae:	74 08                	je     72b8 <jstring_create_integer+0x577>
    72b0:	48 89 c7             	mov    %rax,%rdi
    72b3:	e8 f8 ce ff ff       	call   41b0 <__asan_report_store1@plt>
    72b8:	c6 01 00             	movb   $0x0,(%rcx)
    72bb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    72bf:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    72c3:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    72c9:	89 43 e0             	mov    %eax,-0x20(%rbx)
    72cc:	8b 43 e0             	mov    -0x20(%rbx),%eax
    72cf:	83 c0 01             	add    $0x1,%eax
    72d2:	01 c0                	add    %eax,%eax
    72d4:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    72d7:	48 8b 15 62 1e 01 00 	mov    0x11e62(%rip),%rdx        # 19140 <jstring_log>
    72de:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    72e2:	48 8d 0d d7 c4 00 00 	lea    0xc4d7(%rip),%rcx        # 137c0 <_IO_stdin_used+0x7c0>
    72e9:	48 89 c6             	mov    %rax,%rsi
    72ec:	48 89 cf             	mov    %rcx,%rdi
    72ef:	b8 00 00 00 00       	mov    $0x0,%eax
    72f4:	ff d2                	call   *%rdx
    72f6:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    72fa:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    72fe:	e9 c6 01 00 00       	jmp    74c9 <jstring_create_integer+0x788>
    7303:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    7309:	83 c0 01             	add    $0x1,%eax
    730c:	01 c0                	add    %eax,%eax
    730e:	89 c0                	mov    %eax,%eax
    7310:	48 89 c7             	mov    %rax,%rdi
    7313:	e8 bf d1 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    7318:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    731c:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    7322:	83 e8 01             	sub    $0x1,%eax
    7325:	89 45 84             	mov    %eax,-0x7c(%rbp)
    7328:	e9 0a 01 00 00       	jmp    7437 <jstring_create_integer+0x6f6>
    732d:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)
    7334:	00 
    7335:	75 4a                	jne    7381 <jstring_create_integer+0x640>
    7337:	8b 45 84             	mov    -0x7c(%rbp),%eax
    733a:	48 63 d0             	movslq %eax,%rdx
    733d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7341:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7345:	48 89 c8             	mov    %rcx,%rax
    7348:	48 89 c2             	mov    %rax,%rdx
    734b:	48 c1 ea 03          	shr    $0x3,%rdx
    734f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7356:	0f b6 12             	movzbl (%rdx),%edx
    7359:	84 d2                	test   %dl,%dl
    735b:	40 0f 95 c6          	setne  %sil
    735f:	48 89 c7             	mov    %rax,%rdi
    7362:	83 e7 07             	and    $0x7,%edi
    7365:	40 38 d7             	cmp    %dl,%dil
    7368:	0f 9d c2             	setge  %dl
    736b:	21 f2                	and    %esi,%edx
    736d:	84 d2                	test   %dl,%dl
    736f:	74 08                	je     7379 <jstring_create_integer+0x638>
    7371:	48 89 c7             	mov    %rax,%rdi
    7374:	e8 37 ce ff ff       	call   41b0 <__asan_report_store1@plt>
    7379:	c6 01 30             	movb   $0x30,(%rcx)
    737c:	e9 b2 00 00 00       	jmp    7433 <jstring_create_integer+0x6f2>
    7381:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    7388:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    738f:	66 66 66 
    7392:	48 89 c8             	mov    %rcx,%rax
    7395:	48 f7 ea             	imul   %rdx
    7398:	48 c1 fa 02          	sar    $0x2,%rdx
    739c:	48 89 c8             	mov    %rcx,%rax
    739f:	48 c1 f8 3f          	sar    $0x3f,%rax
    73a3:	48 29 c2             	sub    %rax,%rdx
    73a6:	48 89 d0             	mov    %rdx,%rax
    73a9:	48 c1 e0 02          	shl    $0x2,%rax
    73ad:	48 01 d0             	add    %rdx,%rax
    73b0:	48 01 c0             	add    %rax,%rax
    73b3:	48 29 c1             	sub    %rax,%rcx
    73b6:	48 89 ca             	mov    %rcx,%rdx
    73b9:	89 d0                	mov    %edx,%eax
    73bb:	8d 70 30             	lea    0x30(%rax),%esi
    73be:	8b 45 84             	mov    -0x7c(%rbp),%eax
    73c1:	48 63 d0             	movslq %eax,%rdx
    73c4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73c8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    73cc:	48 89 c8             	mov    %rcx,%rax
    73cf:	48 89 c2             	mov    %rax,%rdx
    73d2:	48 c1 ea 03          	shr    $0x3,%rdx
    73d6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    73dd:	0f b6 12             	movzbl (%rdx),%edx
    73e0:	84 d2                	test   %dl,%dl
    73e2:	40 0f 95 c7          	setne  %dil
    73e6:	49 89 c0             	mov    %rax,%r8
    73e9:	41 83 e0 07          	and    $0x7,%r8d
    73ed:	41 38 d0             	cmp    %dl,%r8b
    73f0:	0f 9d c2             	setge  %dl
    73f3:	21 fa                	and    %edi,%edx
    73f5:	84 d2                	test   %dl,%dl
    73f7:	74 08                	je     7401 <jstring_create_integer+0x6c0>
    73f9:	48 89 c7             	mov    %rax,%rdi
    73fc:	e8 af cd ff ff       	call   41b0 <__asan_report_store1@plt>
    7401:	40 88 31             	mov    %sil,(%rcx)
    7404:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    740b:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
    7412:	66 66 66 
    7415:	48 89 c8             	mov    %rcx,%rax
    7418:	48 f7 ea             	imul   %rdx
    741b:	48 89 d0             	mov    %rdx,%rax
    741e:	48 c1 f8 02          	sar    $0x2,%rax
    7422:	48 c1 f9 3f          	sar    $0x3f,%rcx
    7426:	48 89 ca             	mov    %rcx,%rdx
    7429:	48 29 d0             	sub    %rdx,%rax
    742c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    7433:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
    7437:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
    743b:	0f 89 ec fe ff ff    	jns    732d <jstring_create_integer+0x5ec>
    7441:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
    7447:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    744b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    744f:	48 89 c8             	mov    %rcx,%rax
    7452:	48 89 c2             	mov    %rax,%rdx
    7455:	48 c1 ea 03          	shr    $0x3,%rdx
    7459:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7460:	0f b6 12             	movzbl (%rdx),%edx
    7463:	84 d2                	test   %dl,%dl
    7465:	40 0f 95 c6          	setne  %sil
    7469:	48 89 c7             	mov    %rax,%rdi
    746c:	83 e7 07             	and    $0x7,%edi
    746f:	40 38 d7             	cmp    %dl,%dil
    7472:	0f 9d c2             	setge  %dl
    7475:	21 f2                	and    %esi,%edx
    7477:	84 d2                	test   %dl,%dl
    7479:	74 08                	je     7483 <jstring_create_integer+0x742>
    747b:	48 89 c7             	mov    %rax,%rdi
    747e:	e8 2d cd ff ff       	call   41b0 <__asan_report_store1@plt>
    7483:	c6 01 00             	movb   $0x0,(%rcx)
    7486:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    748a:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    748e:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    7494:	89 43 e0             	mov    %eax,-0x20(%rbx)
    7497:	8b 43 e0             	mov    -0x20(%rbx),%eax
    749a:	83 c0 01             	add    $0x1,%eax
    749d:	01 c0                	add    %eax,%eax
    749f:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    74a2:	48 8b 15 97 1c 01 00 	mov    0x11c97(%rip),%rdx        # 19140 <jstring_log>
    74a9:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    74ad:	48 8d 0d 0c c3 00 00 	lea    0xc30c(%rip),%rcx        # 137c0 <_IO_stdin_used+0x7c0>
    74b4:	48 89 c6             	mov    %rax,%rsi
    74b7:	48 89 cf             	mov    %rcx,%rdi
    74ba:	b8 00 00 00 00       	mov    $0x0,%eax
    74bf:	ff d2                	call   *%rdx
    74c1:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    74c5:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    74c9:	4d 39 e6             	cmp    %r12,%r14
    74cc:	74 23                	je     74f1 <jstring_create_integer+0x7b0>
    74ce:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    74d5:	45 
    74d6:	48 bb f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rbx
    74dd:	f5 f5 f5 
    74e0:	49 89 9d 00 80 ff 7f 	mov    %rbx,0x7fff8000(%r13)
    74e7:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    74ec:	c6 01 00             	movb   $0x0,(%rcx)
    74ef:	eb 0b                	jmp    74fc <jstring_create_integer+0x7bb>
    74f1:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    74f8:	00 00 00 00 
    74fc:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    7500:	5b                   	pop    %rbx
    7501:	41 5c                	pop    %r12
    7503:	41 5d                	pop    %r13
    7505:	41 5e                	pop    %r14
    7507:	5d                   	pop    %rbp
    7508:	c3                   	ret

0000000000007509 <jstring_create_double>:
    7509:	55                   	push   %rbp
    750a:	48 89 e5             	mov    %rsp,%rbp
    750d:	41 56                	push   %r14
    750f:	41 55                	push   %r13
    7511:	41 54                	push   %r12
    7513:	53                   	push   %rbx
    7514:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    751b:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
    7522:	ff 
    7523:	89 bd 24 ff ff ff    	mov    %edi,-0xdc(%rbp)
    7529:	4c 8d a5 60 ff ff ff 	lea    -0xa0(%rbp),%r12
    7530:	4d 89 e6             	mov    %r12,%r14
    7533:	83 3d 26 3d 01 00 00 	cmpl   $0x0,0x13d26(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    753a:	74 12                	je     754e <jstring_create_double+0x45>
    753c:	bf 60 00 00 00       	mov    $0x60,%edi
    7541:	e8 9a cb ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    7546:	48 85 c0             	test   %rax,%rax
    7549:	74 03                	je     754e <jstring_create_double+0x45>
    754b:	49 89 c4             	mov    %rax,%r12
    754e:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
    7555:	00 
    7556:	48 89 c3             	mov    %rax,%rbx
    7559:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    7560:	41 
    7561:	48 8d 05 38 c3 00 00 	lea    0xc338(%rip),%rax        # 138a0 <_IO_stdin_used+0x8a0>
    7568:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    756d:	48 8d 05 95 ff ff ff 	lea    -0x6b(%rip),%rax        # 7509 <jstring_create_double>
    7574:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    7579:	4d 89 e5             	mov    %r12,%r13
    757c:	49 c1 ed 03          	shr    $0x3,%r13
    7580:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    7587:	f1 f1 f1 f1 
    758b:	41 c7 85 04 80 ff 7f 	movl   $0xf2f20000,0x7fff8004(%r13)
    7592:	00 00 f2 f2 
    7596:	41 c7 85 08 80 ff 7f 	movl   $0xf3f30000,0x7fff8008(%r13)
    759d:	00 00 f3 f3 
    75a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    75a8:	00 00 
    75aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    75ae:	31 c0                	xor    %eax,%eax
    75b0:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
    75b7:	ff 
    75b8:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    75bd:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    75c4:	66 0f ef c9          	pxor   %xmm1,%xmm1
    75c8:	f2 48 0f 2a 8d 50 ff 	cvtsi2sdq -0xb0(%rbp),%xmm1
    75cf:	ff ff 
    75d1:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
    75d8:	ff 
    75d9:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    75dd:	f2 0f 11 85 48 ff ff 	movsd  %xmm0,-0xb8(%rbp)
    75e4:	ff 
    75e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    75e9:	66 0f 2f 85 48 ff ff 	comisd -0xb8(%rbp),%xmm0
    75f0:	ff 
    75f1:	76 1c                	jbe    760f <jstring_create_double+0x106>
    75f3:	f2 0f 10 85 48 ff ff 	movsd  -0xb8(%rbp),%xmm0
    75fa:	ff 
    75fb:	f3 0f 7e 0d 7d f0 00 	movq   0xf07d(%rip),%xmm1        # 16680 <__func__.0+0x420>
    7602:	00 
    7603:	66 0f 57 c1          	xorpd  %xmm1,%xmm0
    7607:	f2 0f 11 85 48 ff ff 	movsd  %xmm0,-0xb8(%rbp)
    760e:	ff 
    760f:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    7613:	48 89 c2             	mov    %rax,%rdx
    7616:	48 c1 ea 03          	shr    $0x3,%rdx
    761a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7621:	0f b7 12             	movzwl (%rdx),%edx
    7624:	66 85 d2             	test   %dx,%dx
    7627:	74 08                	je     7631 <jstring_create_double+0x128>
    7629:	48 89 c7             	mov    %rax,%rdi
    762c:	e8 9f ca ff ff       	call   40d0 <__asan_report_store16@plt>
    7631:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    7638:	be 00 00 00 00       	mov    $0x0,%esi
    763d:	48 89 c7             	mov    %rax,%rdi
    7640:	e8 fc f6 ff ff       	call   6d41 <jstring_create_integer>
    7645:	48 89 43 a0          	mov    %rax,-0x60(%rbx)
    7649:	48 89 53 a8          	mov    %rdx,-0x58(%rbx)
    764d:	83 bd 24 ff ff ff 00 	cmpl   $0x0,-0xdc(%rbp)
    7654:	74 53                	je     76a9 <jstring_create_double+0x1a0>
    7656:	48 8d 15 a3 c2 00 00 	lea    0xc2a3(%rip),%rdx        # 13900 <_IO_stdin_used+0x900>
    765d:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    7661:	48 89 d6             	mov    %rdx,%rsi
    7664:	48 89 c7             	mov    %rax,%rdi
    7667:	e8 d4 ec ff ff       	call   6340 <jstring_concatenate_raw>
    766c:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    7673:	00 00 00 
    7676:	eb 23                	jmp    769b <jstring_create_double+0x192>
    7678:	f2 0f 10 8d 48 ff ff 	movsd  -0xb8(%rbp),%xmm1
    767f:	ff 
    7680:	f2 0f 10 05 08 f0 00 	movsd  0xf008(%rip),%xmm0        # 16690 <__func__.0+0x430>
    7687:	00 
    7688:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    768c:	f2 0f 11 85 48 ff ff 	movsd  %xmm0,-0xb8(%rbp)
    7693:	ff 
    7694:	83 85 40 ff ff ff 01 	addl   $0x1,-0xc0(%rbp)
    769b:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    76a1:	3b 85 24 ff ff ff    	cmp    -0xdc(%rbp),%eax
    76a7:	72 cf                	jb     7678 <jstring_create_double+0x16f>
    76a9:	f2 0f 10 85 48 ff ff 	movsd  -0xb8(%rbp),%xmm0
    76b0:	ff 
    76b1:	66 0f 2f 05 df ef 00 	comisd 0xefdf(%rip),%xmm0        # 16698 <__func__.0+0x438>
    76b8:	00 
    76b9:	73 16                	jae    76d1 <jstring_create_double+0x1c8>
    76bb:	f2 0f 10 85 48 ff ff 	movsd  -0xb8(%rbp),%xmm0
    76c2:	ff 
    76c3:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    76c8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    76cf:	eb 31                	jmp    7702 <jstring_create_double+0x1f9>
    76d1:	f2 0f 10 85 48 ff ff 	movsd  -0xb8(%rbp),%xmm0
    76d8:	ff 
    76d9:	f2 0f 10 0d b7 ef 00 	movsd  0xefb7(%rip),%xmm1        # 16698 <__func__.0+0x438>
    76e0:	00 
    76e1:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    76e5:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    76ea:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    76f1:	48 b8 00 00 00 00 00 	movabs $0x8000000000000000,%rax
    76f8:	00 00 80 
    76fb:	48 31 85 58 ff ff ff 	xor    %rax,-0xa8(%rbp)
    7702:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    7709:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    7710:	f2 0f 10 85 48 ff ff 	movsd  -0xb8(%rbp),%xmm0
    7717:	ff 
    7718:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    771d:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    7723:	89 d6                	mov    %edx,%esi
    7725:	48 89 c7             	mov    %rax,%rdi
    7728:	e8 14 f6 ff ff       	call   6d41 <jstring_create_integer>
    772d:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    7731:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    7735:	8b 43 c0             	mov    -0x40(%rbx),%eax
    7738:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    773e:	eb 1d                	jmp    775d <jstring_create_double+0x254>
    7740:	48 8d 15 f9 c1 00 00 	lea    0xc1f9(%rip),%rdx        # 13940 <_IO_stdin_used+0x940>
    7747:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    774b:	48 89 d6             	mov    %rdx,%rsi
    774e:	48 89 c7             	mov    %rax,%rdi
    7751:	e8 ea eb ff ff       	call   6340 <jstring_concatenate_raw>
    7756:	83 85 44 ff ff ff 01 	addl   $0x1,-0xbc(%rbp)
    775d:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    7763:	3b 85 24 ff ff ff    	cmp    -0xdc(%rbp),%eax
    7769:	72 d5                	jb     7740 <jstring_create_double+0x237>
    776b:	48 8b 4b c0          	mov    -0x40(%rbx),%rcx
    776f:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    7773:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    7777:	48 89 ce             	mov    %rcx,%rsi
    777a:	48 89 c7             	mov    %rax,%rdi
    777d:	e8 26 e3 ff ff       	call   5aa8 <jstring_concatenate_jstring>
    7782:	85 c0                	test   %eax,%eax
    7784:	0f 85 9a 00 00 00    	jne    7824 <jstring_create_double+0x31b>
    778a:	4c 8b 05 af 19 01 00 	mov    0x119af(%rip),%r8        # 19140 <jstring_log>
    7791:	48 8d 15 08 be 00 00 	lea    0xbe08(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    7798:	48 8d 35 81 bf 00 00 	lea    0xbf81(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    779f:	48 8d 05 7a be 00 00 	lea    0xbe7a(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    77a6:	b9 c4 02 00 00       	mov    $0x2c4,%ecx
    77ab:	48 89 c7             	mov    %rax,%rdi
    77ae:	b8 00 00 00 00       	mov    $0x0,%eax
    77b3:	41 ff d0             	call   *%r8
    77b6:	b9 00 00 00 00       	mov    $0x0,%ecx
    77bb:	48 89 c8             	mov    %rcx,%rax
    77be:	48 89 c2             	mov    %rax,%rdx
    77c1:	48 c1 ea 03          	shr    $0x3,%rdx
    77c5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    77cc:	0f b6 12             	movzbl (%rdx),%edx
    77cf:	84 d2                	test   %dl,%dl
    77d1:	40 0f 95 c6          	setne  %sil
    77d5:	48 89 c7             	mov    %rax,%rdi
    77d8:	83 e7 07             	and    $0x7,%edi
    77db:	40 38 d7             	cmp    %dl,%dil
    77de:	0f 9d c2             	setge  %dl
    77e1:	21 f2                	and    %esi,%edx
    77e3:	84 d2                	test   %dl,%dl
    77e5:	74 08                	je     77ef <jstring_create_double+0x2e6>
    77e7:	48 89 c7             	mov    %rax,%rdi
    77ea:	e8 a1 c9 ff ff       	call   4190 <__asan_report_load1@plt>
    77ef:	0f b6 01             	movzbl (%rcx),%eax
    77f2:	88 85 3f ff ff ff    	mov    %al,-0xc1(%rbp)
    77f8:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    77fc:	48 89 c2             	mov    %rax,%rdx
    77ff:	48 c1 ea 03          	shr    $0x3,%rdx
    7803:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    780a:	0f b7 12             	movzwl (%rdx),%edx
    780d:	66 85 d2             	test   %dx,%dx
    7810:	74 08                	je     781a <jstring_create_double+0x311>
    7812:	48 89 c7             	mov    %rax,%rdi
    7815:	e8 86 c9 ff ff       	call   41a0 <__asan_report_load16@plt>
    781a:	48 8b 43 a0          	mov    -0x60(%rbx),%rax
    781e:	48 8b 53 a8          	mov    -0x58(%rbx),%rdx
    7822:	eb 2a                	jmp    784e <jstring_create_double+0x345>
    7824:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    7828:	48 89 c2             	mov    %rax,%rdx
    782b:	48 c1 ea 03          	shr    $0x3,%rdx
    782f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7836:	0f b7 12             	movzwl (%rdx),%edx
    7839:	66 85 d2             	test   %dx,%dx
    783c:	74 08                	je     7846 <jstring_create_double+0x33d>
    783e:	48 89 c7             	mov    %rax,%rdi
    7841:	e8 5a c9 ff ff       	call   41a0 <__asan_report_load16@plt>
    7846:	48 8b 43 a0          	mov    -0x60(%rbx),%rax
    784a:	48 8b 53 a8          	mov    -0x58(%rbx),%rdx
    784e:	4d 39 e6             	cmp    %r12,%r14
    7851:	74 2e                	je     7881 <jstring_create_double+0x378>
    7853:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    785a:	45 
    785b:	48 b9 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rcx
    7862:	f5 f5 f5 
    7865:	49 89 8d 00 80 ff 7f 	mov    %rcx,0x7fff8000(%r13)
    786c:	41 c7 85 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r13)
    7873:	f5 f5 f5 f5 
    7877:	49 8b 4c 24 78       	mov    0x78(%r12),%rcx
    787c:	c6 01 00             	movb   $0x0,(%rcx)
    787f:	eb 16                	jmp    7897 <jstring_create_double+0x38e>
    7881:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    7888:	00 00 00 00 
    788c:	41 c7 85 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r13)
    7893:	00 00 00 00 
    7897:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    789b:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    78a2:	00 00 
    78a4:	74 05                	je     78ab <jstring_create_double+0x3a2>
    78a6:	e8 b5 c8 ff ff       	call   4160 <__stack_chk_fail@plt>
    78ab:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
    78b2:	5b                   	pop    %rbx
    78b3:	41 5c                	pop    %r12
    78b5:	41 5d                	pop    %r13
    78b7:	41 5e                	pop    %r14
    78b9:	5d                   	pop    %rbp
    78ba:	c3                   	ret

00000000000078bb <jstring_chars_to_int>:
    78bb:	55                   	push   %rbp
    78bc:	48 89 e5             	mov    %rsp,%rbp
    78bf:	48 83 ec 30          	sub    $0x30,%rsp
    78c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    78c7:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    78ca:	89 55 d0             	mov    %edx,-0x30(%rbp)
    78cd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    78d4:	00 
    78d5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    78dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    78e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78e7:	48 89 c2             	mov    %rax,%rdx
    78ea:	48 c1 ea 03          	shr    $0x3,%rdx
    78ee:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    78f5:	0f b6 12             	movzbl (%rdx),%edx
    78f8:	84 d2                	test   %dl,%dl
    78fa:	0f 95 c1             	setne  %cl
    78fd:	48 89 c6             	mov    %rax,%rsi
    7900:	83 e6 07             	and    $0x7,%esi
    7903:	40 38 d6             	cmp    %dl,%sil
    7906:	0f 9d c2             	setge  %dl
    7909:	21 ca                	and    %ecx,%edx
    790b:	84 d2                	test   %dl,%dl
    790d:	74 08                	je     7917 <jstring_chars_to_int+0x5c>
    790f:	48 89 c7             	mov    %rax,%rdi
    7912:	e8 79 c8 ff ff       	call   4190 <__asan_report_load1@plt>
    7917:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    791b:	0f b6 00             	movzbl (%rax),%eax
    791e:	3c 30                	cmp    $0x30,%al
    7920:	0f 85 c8 00 00 00    	jne    79ee <jstring_chars_to_int+0x133>
    7926:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    792a:	48 8d 48 01          	lea    0x1(%rax),%rcx
    792e:	48 89 c8             	mov    %rcx,%rax
    7931:	48 89 c2             	mov    %rax,%rdx
    7934:	48 c1 ea 03          	shr    $0x3,%rdx
    7938:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    793f:	0f b6 12             	movzbl (%rdx),%edx
    7942:	84 d2                	test   %dl,%dl
    7944:	40 0f 95 c6          	setne  %sil
    7948:	48 89 c7             	mov    %rax,%rdi
    794b:	83 e7 07             	and    $0x7,%edi
    794e:	40 38 d7             	cmp    %dl,%dil
    7951:	0f 9d c2             	setge  %dl
    7954:	21 f2                	and    %esi,%edx
    7956:	84 d2                	test   %dl,%dl
    7958:	74 08                	je     7962 <jstring_chars_to_int+0xa7>
    795a:	48 89 c7             	mov    %rax,%rdi
    795d:	e8 2e c8 ff ff       	call   4190 <__asan_report_load1@plt>
    7962:	0f b6 01             	movzbl (%rcx),%eax
    7965:	84 c0                	test   %al,%al
    7967:	0f 85 81 00 00 00    	jne    79ee <jstring_chars_to_int+0x133>
    796d:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
    7971:	74 71                	je     79e4 <jstring_chars_to_int+0x129>
    7973:	83 7d d4 ff          	cmpl   $0xffffffff,-0x2c(%rbp)
    7977:	74 6b                	je     79e4 <jstring_chars_to_int+0x129>
    7979:	4c 8b 05 c0 17 01 00 	mov    0x117c0(%rip),%r8        # 19140 <jstring_log>
    7980:	48 8d 15 19 bc 00 00 	lea    0xbc19(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    7987:	48 8d 35 f2 bf 00 00 	lea    0xbff2(%rip),%rsi        # 13980 <_IO_stdin_used+0x980>
    798e:	48 8d 05 8b bc 00 00 	lea    0xbc8b(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    7995:	b9 d7 02 00 00       	mov    $0x2d7,%ecx
    799a:	48 89 c7             	mov    %rax,%rdi
    799d:	b8 00 00 00 00       	mov    $0x0,%eax
    79a2:	41 ff d0             	call   *%r8
    79a5:	b9 00 00 00 00       	mov    $0x0,%ecx
    79aa:	48 89 c8             	mov    %rcx,%rax
    79ad:	48 89 c2             	mov    %rax,%rdx
    79b0:	48 c1 ea 03          	shr    $0x3,%rdx
    79b4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    79bb:	0f b6 12             	movzbl (%rdx),%edx
    79be:	84 d2                	test   %dl,%dl
    79c0:	40 0f 95 c6          	setne  %sil
    79c4:	48 89 c7             	mov    %rax,%rdi
    79c7:	83 e7 07             	and    $0x7,%edi
    79ca:	40 38 d7             	cmp    %dl,%dil
    79cd:	0f 9d c2             	setge  %dl
    79d0:	21 f2                	and    %esi,%edx
    79d2:	84 d2                	test   %dl,%dl
    79d4:	74 08                	je     79de <jstring_chars_to_int+0x123>
    79d6:	48 89 c7             	mov    %rax,%rdi
    79d9:	e8 b2 c7 ff ff       	call   4190 <__asan_report_load1@plt>
    79de:	0f b6 01             	movzbl (%rcx),%eax
    79e1:	88 45 ec             	mov    %al,-0x14(%rbp)
    79e4:	b8 00 00 00 00       	mov    $0x0,%eax
    79e9:	e9 5f 04 00 00       	jmp    7e4d <jstring_chars_to_int+0x592>
    79ee:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    79f2:	0f 85 b4 00 00 00    	jne    7aac <jstring_chars_to_int+0x1f1>
    79f8:	83 7d d4 01          	cmpl   $0x1,-0x2c(%rbp)
    79fc:	0f 84 aa 00 00 00    	je     7aac <jstring_chars_to_int+0x1f1>
    7a02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a06:	48 89 c2             	mov    %rax,%rdx
    7a09:	48 c1 ea 03          	shr    $0x3,%rdx
    7a0d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7a14:	0f b6 12             	movzbl (%rdx),%edx
    7a17:	84 d2                	test   %dl,%dl
    7a19:	0f 95 c1             	setne  %cl
    7a1c:	48 89 c6             	mov    %rax,%rsi
    7a1f:	83 e6 07             	and    $0x7,%esi
    7a22:	40 38 d6             	cmp    %dl,%sil
    7a25:	0f 9d c2             	setge  %dl
    7a28:	21 ca                	and    %ecx,%edx
    7a2a:	84 d2                	test   %dl,%dl
    7a2c:	74 08                	je     7a36 <jstring_chars_to_int+0x17b>
    7a2e:	48 89 c7             	mov    %rax,%rdi
    7a31:	e8 5a c7 ff ff       	call   4190 <__asan_report_load1@plt>
    7a36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a3a:	0f b6 00             	movzbl (%rax),%eax
    7a3d:	3c 30                	cmp    $0x30,%al
    7a3f:	75 6b                	jne    7aac <jstring_chars_to_int+0x1f1>
    7a41:	4c 8b 05 f8 16 01 00 	mov    0x116f8(%rip),%r8        # 19140 <jstring_log>
    7a48:	48 8d 15 51 bb 00 00 	lea    0xbb51(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    7a4f:	48 8d 35 aa bf 00 00 	lea    0xbfaa(%rip),%rsi        # 13a00 <_IO_stdin_used+0xa00>
    7a56:	48 8d 05 c3 bb 00 00 	lea    0xbbc3(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    7a5d:	b9 e1 02 00 00       	mov    $0x2e1,%ecx
    7a62:	48 89 c7             	mov    %rax,%rdi
    7a65:	b8 00 00 00 00       	mov    $0x0,%eax
    7a6a:	41 ff d0             	call   *%r8
    7a6d:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a72:	48 89 c8             	mov    %rcx,%rax
    7a75:	48 89 c2             	mov    %rax,%rdx
    7a78:	48 c1 ea 03          	shr    $0x3,%rdx
    7a7c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7a83:	0f b6 12             	movzbl (%rdx),%edx
    7a86:	84 d2                	test   %dl,%dl
    7a88:	40 0f 95 c6          	setne  %sil
    7a8c:	48 89 c7             	mov    %rax,%rdi
    7a8f:	83 e7 07             	and    $0x7,%edi
    7a92:	40 38 d7             	cmp    %dl,%dil
    7a95:	0f 9d c2             	setge  %dl
    7a98:	21 f2                	and    %esi,%edx
    7a9a:	84 d2                	test   %dl,%dl
    7a9c:	74 08                	je     7aa6 <jstring_chars_to_int+0x1eb>
    7a9e:	48 89 c7             	mov    %rax,%rdi
    7aa1:	e8 ea c6 ff ff       	call   4190 <__asan_report_load1@plt>
    7aa6:	0f b6 01             	movzbl (%rcx),%eax
    7aa9:	88 45 ed             	mov    %al,-0x13(%rbp)
    7aac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ab0:	48 89 c2             	mov    %rax,%rdx
    7ab3:	48 c1 ea 03          	shr    $0x3,%rdx
    7ab7:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7abe:	0f b6 12             	movzbl (%rdx),%edx
    7ac1:	84 d2                	test   %dl,%dl
    7ac3:	0f 95 c1             	setne  %cl
    7ac6:	48 89 c6             	mov    %rax,%rsi
    7ac9:	83 e6 07             	and    $0x7,%esi
    7acc:	40 38 d6             	cmp    %dl,%sil
    7acf:	0f 9d c2             	setge  %dl
    7ad2:	21 ca                	and    %ecx,%edx
    7ad4:	84 d2                	test   %dl,%dl
    7ad6:	74 08                	je     7ae0 <jstring_chars_to_int+0x225>
    7ad8:	48 89 c7             	mov    %rax,%rdi
    7adb:	e8 b0 c6 ff ff       	call   4190 <__asan_report_load1@plt>
    7ae0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ae4:	0f b6 00             	movzbl (%rax),%eax
    7ae7:	3c 2d                	cmp    $0x2d,%al
    7ae9:	75 0e                	jne    7af9 <jstring_chars_to_int+0x23e>
    7aeb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
    7af2:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
    7af9:	83 7d d4 ff          	cmpl   $0xffffffff,-0x2c(%rbp)
    7afd:	0f 85 2b 03 00 00    	jne    7e2e <jstring_chars_to_int+0x573>
    7b03:	e9 6a 01 00 00       	jmp    7c72 <jstring_chars_to_int+0x3b7>
    7b08:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7b0b:	48 63 d0             	movslq %eax,%rdx
    7b0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b12:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7b16:	48 89 c8             	mov    %rcx,%rax
    7b19:	48 89 c2             	mov    %rax,%rdx
    7b1c:	48 c1 ea 03          	shr    $0x3,%rdx
    7b20:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7b27:	0f b6 12             	movzbl (%rdx),%edx
    7b2a:	84 d2                	test   %dl,%dl
    7b2c:	40 0f 95 c6          	setne  %sil
    7b30:	48 89 c7             	mov    %rax,%rdi
    7b33:	83 e7 07             	and    $0x7,%edi
    7b36:	40 38 d7             	cmp    %dl,%dil
    7b39:	0f 9d c2             	setge  %dl
    7b3c:	21 f2                	and    %esi,%edx
    7b3e:	84 d2                	test   %dl,%dl
    7b40:	74 08                	je     7b4a <jstring_chars_to_int+0x28f>
    7b42:	48 89 c7             	mov    %rax,%rdi
    7b45:	e8 46 c6 ff ff       	call   4190 <__asan_report_load1@plt>
    7b4a:	0f b6 01             	movzbl (%rcx),%eax
    7b4d:	3c 2f                	cmp    $0x2f,%al
    7b4f:	7e 49                	jle    7b9a <jstring_chars_to_int+0x2df>
    7b51:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7b54:	48 63 d0             	movslq %eax,%rdx
    7b57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b5b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7b5f:	48 89 c8             	mov    %rcx,%rax
    7b62:	48 89 c2             	mov    %rax,%rdx
    7b65:	48 c1 ea 03          	shr    $0x3,%rdx
    7b69:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7b70:	0f b6 12             	movzbl (%rdx),%edx
    7b73:	84 d2                	test   %dl,%dl
    7b75:	40 0f 95 c6          	setne  %sil
    7b79:	48 89 c7             	mov    %rax,%rdi
    7b7c:	83 e7 07             	and    $0x7,%edi
    7b7f:	40 38 d7             	cmp    %dl,%dil
    7b82:	0f 9d c2             	setge  %dl
    7b85:	21 f2                	and    %esi,%edx
    7b87:	84 d2                	test   %dl,%dl
    7b89:	74 08                	je     7b93 <jstring_chars_to_int+0x2d8>
    7b8b:	48 89 c7             	mov    %rax,%rdi
    7b8e:	e8 fd c5 ff ff       	call   4190 <__asan_report_load1@plt>
    7b93:	0f b6 01             	movzbl (%rcx),%eax
    7b96:	3c 39                	cmp    $0x39,%al
    7b98:	7e 6b                	jle    7c05 <jstring_chars_to_int+0x34a>
    7b9a:	4c 8b 05 9f 15 01 00 	mov    0x1159f(%rip),%r8        # 19140 <jstring_log>
    7ba1:	48 8d 15 f8 b9 00 00 	lea    0xb9f8(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    7ba8:	48 8d 35 d1 be 00 00 	lea    0xbed1(%rip),%rsi        # 13a80 <_IO_stdin_used+0xa80>
    7baf:	48 8d 05 6a ba 00 00 	lea    0xba6a(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    7bb6:	b9 f1 02 00 00       	mov    $0x2f1,%ecx
    7bbb:	48 89 c7             	mov    %rax,%rdi
    7bbe:	b8 00 00 00 00       	mov    $0x0,%eax
    7bc3:	41 ff d0             	call   *%r8
    7bc6:	b9 00 00 00 00       	mov    $0x0,%ecx
    7bcb:	48 89 c8             	mov    %rcx,%rax
    7bce:	48 89 c2             	mov    %rax,%rdx
    7bd1:	48 c1 ea 03          	shr    $0x3,%rdx
    7bd5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7bdc:	0f b6 12             	movzbl (%rdx),%edx
    7bdf:	84 d2                	test   %dl,%dl
    7be1:	40 0f 95 c6          	setne  %sil
    7be5:	48 89 c7             	mov    %rax,%rdi
    7be8:	83 e7 07             	and    $0x7,%edi
    7beb:	40 38 d7             	cmp    %dl,%dil
    7bee:	0f 9d c2             	setge  %dl
    7bf1:	21 f2                	and    %esi,%edx
    7bf3:	84 d2                	test   %dl,%dl
    7bf5:	74 08                	je     7bff <jstring_chars_to_int+0x344>
    7bf7:	48 89 c7             	mov    %rax,%rdi
    7bfa:	e8 91 c5 ff ff       	call   4190 <__asan_report_load1@plt>
    7bff:	0f b6 01             	movzbl (%rcx),%eax
    7c02:	88 45 ef             	mov    %al,-0x11(%rbp)
    7c05:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7c09:	48 89 d0             	mov    %rdx,%rax
    7c0c:	48 c1 e0 02          	shl    $0x2,%rax
    7c10:	48 01 d0             	add    %rdx,%rax
    7c13:	48 01 c0             	add    %rax,%rax
    7c16:	48 89 c6             	mov    %rax,%rsi
    7c19:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7c1c:	48 63 d0             	movslq %eax,%rdx
    7c1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c23:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7c27:	48 89 c8             	mov    %rcx,%rax
    7c2a:	48 89 c2             	mov    %rax,%rdx
    7c2d:	48 c1 ea 03          	shr    $0x3,%rdx
    7c31:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7c38:	0f b6 12             	movzbl (%rdx),%edx
    7c3b:	84 d2                	test   %dl,%dl
    7c3d:	40 0f 95 c7          	setne  %dil
    7c41:	49 89 c0             	mov    %rax,%r8
    7c44:	41 83 e0 07          	and    $0x7,%r8d
    7c48:	41 38 d0             	cmp    %dl,%r8b
    7c4b:	0f 9d c2             	setge  %dl
    7c4e:	21 fa                	and    %edi,%edx
    7c50:	84 d2                	test   %dl,%dl
    7c52:	74 08                	je     7c5c <jstring_chars_to_int+0x3a1>
    7c54:	48 89 c7             	mov    %rax,%rdi
    7c57:	e8 34 c5 ff ff       	call   4190 <__asan_report_load1@plt>
    7c5c:	0f b6 01             	movzbl (%rcx),%eax
    7c5f:	0f be c0             	movsbl %al,%eax
    7c62:	83 e8 30             	sub    $0x30,%eax
    7c65:	48 98                	cltq
    7c67:	48 01 f0             	add    %rsi,%rax
    7c6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7c6e:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    7c72:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7c75:	48 63 d0             	movslq %eax,%rdx
    7c78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c7c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7c80:	48 89 c8             	mov    %rcx,%rax
    7c83:	48 89 c2             	mov    %rax,%rdx
    7c86:	48 c1 ea 03          	shr    $0x3,%rdx
    7c8a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7c91:	0f b6 12             	movzbl (%rdx),%edx
    7c94:	84 d2                	test   %dl,%dl
    7c96:	40 0f 95 c6          	setne  %sil
    7c9a:	48 89 c7             	mov    %rax,%rdi
    7c9d:	83 e7 07             	and    $0x7,%edi
    7ca0:	40 38 d7             	cmp    %dl,%dil
    7ca3:	0f 9d c2             	setge  %dl
    7ca6:	21 f2                	and    %esi,%edx
    7ca8:	84 d2                	test   %dl,%dl
    7caa:	74 08                	je     7cb4 <jstring_chars_to_int+0x3f9>
    7cac:	48 89 c7             	mov    %rax,%rdi
    7caf:	e8 dc c4 ff ff       	call   4190 <__asan_report_load1@plt>
    7cb4:	0f b6 01             	movzbl (%rcx),%eax
    7cb7:	84 c0                	test   %al,%al
    7cb9:	0f 85 49 fe ff ff    	jne    7b08 <jstring_chars_to_int+0x24d>
    7cbf:	e9 76 01 00 00       	jmp    7e3a <jstring_chars_to_int+0x57f>
    7cc4:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7cc7:	48 63 d0             	movslq %eax,%rdx
    7cca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cce:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7cd2:	48 89 c8             	mov    %rcx,%rax
    7cd5:	48 89 c2             	mov    %rax,%rdx
    7cd8:	48 c1 ea 03          	shr    $0x3,%rdx
    7cdc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7ce3:	0f b6 12             	movzbl (%rdx),%edx
    7ce6:	84 d2                	test   %dl,%dl
    7ce8:	40 0f 95 c6          	setne  %sil
    7cec:	48 89 c7             	mov    %rax,%rdi
    7cef:	83 e7 07             	and    $0x7,%edi
    7cf2:	40 38 d7             	cmp    %dl,%dil
    7cf5:	0f 9d c2             	setge  %dl
    7cf8:	21 f2                	and    %esi,%edx
    7cfa:	84 d2                	test   %dl,%dl
    7cfc:	74 08                	je     7d06 <jstring_chars_to_int+0x44b>
    7cfe:	48 89 c7             	mov    %rax,%rdi
    7d01:	e8 8a c4 ff ff       	call   4190 <__asan_report_load1@plt>
    7d06:	0f b6 01             	movzbl (%rcx),%eax
    7d09:	3c 2f                	cmp    $0x2f,%al
    7d0b:	7e 49                	jle    7d56 <jstring_chars_to_int+0x49b>
    7d0d:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7d10:	48 63 d0             	movslq %eax,%rdx
    7d13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d17:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7d1b:	48 89 c8             	mov    %rcx,%rax
    7d1e:	48 89 c2             	mov    %rax,%rdx
    7d21:	48 c1 ea 03          	shr    $0x3,%rdx
    7d25:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7d2c:	0f b6 12             	movzbl (%rdx),%edx
    7d2f:	84 d2                	test   %dl,%dl
    7d31:	40 0f 95 c6          	setne  %sil
    7d35:	48 89 c7             	mov    %rax,%rdi
    7d38:	83 e7 07             	and    $0x7,%edi
    7d3b:	40 38 d7             	cmp    %dl,%dil
    7d3e:	0f 9d c2             	setge  %dl
    7d41:	21 f2                	and    %esi,%edx
    7d43:	84 d2                	test   %dl,%dl
    7d45:	74 08                	je     7d4f <jstring_chars_to_int+0x494>
    7d47:	48 89 c7             	mov    %rax,%rdi
    7d4a:	e8 41 c4 ff ff       	call   4190 <__asan_report_load1@plt>
    7d4f:	0f b6 01             	movzbl (%rcx),%eax
    7d52:	3c 39                	cmp    $0x39,%al
    7d54:	7e 6b                	jle    7dc1 <jstring_chars_to_int+0x506>
    7d56:	4c 8b 05 e3 13 01 00 	mov    0x113e3(%rip),%r8        # 19140 <jstring_log>
    7d5d:	48 8d 15 3c b8 00 00 	lea    0xb83c(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    7d64:	48 8d 35 15 bd 00 00 	lea    0xbd15(%rip),%rsi        # 13a80 <_IO_stdin_used+0xa80>
    7d6b:	48 8d 05 ae b8 00 00 	lea    0xb8ae(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    7d72:	b9 fc 02 00 00       	mov    $0x2fc,%ecx
    7d77:	48 89 c7             	mov    %rax,%rdi
    7d7a:	b8 00 00 00 00       	mov    $0x0,%eax
    7d7f:	41 ff d0             	call   *%r8
    7d82:	b9 00 00 00 00       	mov    $0x0,%ecx
    7d87:	48 89 c8             	mov    %rcx,%rax
    7d8a:	48 89 c2             	mov    %rax,%rdx
    7d8d:	48 c1 ea 03          	shr    $0x3,%rdx
    7d91:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7d98:	0f b6 12             	movzbl (%rdx),%edx
    7d9b:	84 d2                	test   %dl,%dl
    7d9d:	40 0f 95 c6          	setne  %sil
    7da1:	48 89 c7             	mov    %rax,%rdi
    7da4:	83 e7 07             	and    $0x7,%edi
    7da7:	40 38 d7             	cmp    %dl,%dil
    7daa:	0f 9d c2             	setge  %dl
    7dad:	21 f2                	and    %esi,%edx
    7daf:	84 d2                	test   %dl,%dl
    7db1:	74 08                	je     7dbb <jstring_chars_to_int+0x500>
    7db3:	48 89 c7             	mov    %rax,%rdi
    7db6:	e8 d5 c3 ff ff       	call   4190 <__asan_report_load1@plt>
    7dbb:	0f b6 01             	movzbl (%rcx),%eax
    7dbe:	88 45 ee             	mov    %al,-0x12(%rbp)
    7dc1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7dc5:	48 89 d0             	mov    %rdx,%rax
    7dc8:	48 c1 e0 02          	shl    $0x2,%rax
    7dcc:	48 01 d0             	add    %rdx,%rax
    7dcf:	48 01 c0             	add    %rax,%rax
    7dd2:	48 89 c6             	mov    %rax,%rsi
    7dd5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7dd8:	48 63 d0             	movslq %eax,%rdx
    7ddb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ddf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7de3:	48 89 c8             	mov    %rcx,%rax
    7de6:	48 89 c2             	mov    %rax,%rdx
    7de9:	48 c1 ea 03          	shr    $0x3,%rdx
    7ded:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7df4:	0f b6 12             	movzbl (%rdx),%edx
    7df7:	84 d2                	test   %dl,%dl
    7df9:	40 0f 95 c7          	setne  %dil
    7dfd:	49 89 c0             	mov    %rax,%r8
    7e00:	41 83 e0 07          	and    $0x7,%r8d
    7e04:	41 38 d0             	cmp    %dl,%r8b
    7e07:	0f 9d c2             	setge  %dl
    7e0a:	21 fa                	and    %edi,%edx
    7e0c:	84 d2                	test   %dl,%dl
    7e0e:	74 08                	je     7e18 <jstring_chars_to_int+0x55d>
    7e10:	48 89 c7             	mov    %rax,%rdi
    7e13:	e8 78 c3 ff ff       	call   4190 <__asan_report_load1@plt>
    7e18:	0f b6 01             	movzbl (%rcx),%eax
    7e1b:	0f be c0             	movsbl %al,%eax
    7e1e:	83 e8 30             	sub    $0x30,%eax
    7e21:	48 98                	cltq
    7e23:	48 01 f0             	add    %rsi,%rax
    7e26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    7e2a:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    7e2e:	8b 45 f0             	mov    -0x10(%rbp),%eax
    7e31:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    7e34:	0f 8c 8a fe ff ff    	jl     7cc4 <jstring_chars_to_int+0x409>
    7e3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    7e3e:	74 09                	je     7e49 <jstring_chars_to_int+0x58e>
    7e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e44:	48 f7 d8             	neg    %rax
    7e47:	eb 04                	jmp    7e4d <jstring_chars_to_int+0x592>
    7e49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e4d:	c9                   	leave
    7e4e:	c3                   	ret

0000000000007e4f <jstring_chars_to_double>:
    7e4f:	55                   	push   %rbp
    7e50:	48 89 e5             	mov    %rsp,%rbp
    7e53:	48 83 ec 40          	sub    $0x40,%rsp
    7e57:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    7e5b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    7e5e:	c7 45 d8 ff ff ff ff 	movl   $0xffffffff,-0x28(%rbp)
    7e65:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    7e6c:	eb 55                	jmp    7ec3 <jstring_chars_to_double+0x74>
    7e6e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    7e71:	48 63 d0             	movslq %eax,%rdx
    7e74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7e78:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7e7c:	48 89 c8             	mov    %rcx,%rax
    7e7f:	48 89 c2             	mov    %rax,%rdx
    7e82:	48 c1 ea 03          	shr    $0x3,%rdx
    7e86:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    7e8d:	0f b6 12             	movzbl (%rdx),%edx
    7e90:	84 d2                	test   %dl,%dl
    7e92:	40 0f 95 c6          	setne  %sil
    7e96:	48 89 c7             	mov    %rax,%rdi
    7e99:	83 e7 07             	and    $0x7,%edi
    7e9c:	40 38 d7             	cmp    %dl,%dil
    7e9f:	0f 9d c2             	setge  %dl
    7ea2:	21 f2                	and    %esi,%edx
    7ea4:	84 d2                	test   %dl,%dl
    7ea6:	74 08                	je     7eb0 <jstring_chars_to_double+0x61>
    7ea8:	48 89 c7             	mov    %rax,%rdi
    7eab:	e8 e0 c2 ff ff       	call   4190 <__asan_report_load1@plt>
    7eb0:	0f b6 01             	movzbl (%rcx),%eax
    7eb3:	3c 2e                	cmp    $0x2e,%al
    7eb5:	75 08                	jne    7ebf <jstring_chars_to_double+0x70>
    7eb7:	8b 45 dc             	mov    -0x24(%rbp),%eax
    7eba:	89 45 d8             	mov    %eax,-0x28(%rbp)
    7ebd:	eb 0c                	jmp    7ecb <jstring_chars_to_double+0x7c>
    7ebf:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    7ec3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    7ec6:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    7ec9:	7c a3                	jl     7e6e <jstring_chars_to_double+0x1f>
    7ecb:	83 7d d8 ff          	cmpl   $0xffffffff,-0x28(%rbp)
    7ecf:	75 24                	jne    7ef5 <jstring_chars_to_double+0xa6>
    7ed1:	8b 4d c4             	mov    -0x3c(%rbp),%ecx
    7ed4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ed8:	ba 00 00 00 00       	mov    $0x0,%edx
    7edd:	89 ce                	mov    %ecx,%esi
    7edf:	48 89 c7             	mov    %rax,%rdi
    7ee2:	e8 d4 f9 ff ff       	call   78bb <jstring_chars_to_int>
    7ee7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7eeb:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    7ef0:	e9 cb 00 00 00       	jmp    7fc0 <jstring_chars_to_double+0x171>
    7ef5:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    7ef8:	2b 45 d8             	sub    -0x28(%rbp),%eax
    7efb:	83 e8 01             	sub    $0x1,%eax
    7efe:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    7f01:	8b 4d d8             	mov    -0x28(%rbp),%ecx
    7f04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f08:	ba 00 00 00 00       	mov    $0x0,%edx
    7f0d:	89 ce                	mov    %ecx,%esi
    7f0f:	48 89 c7             	mov    %rax,%rdi
    7f12:	e8 a4 f9 ff ff       	call   78bb <jstring_chars_to_int>
    7f17:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7f1b:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    7f20:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    7f25:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7f28:	48 98                	cltq
    7f2a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7f2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7f32:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7f36:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    7f39:	ba 01 00 00 00       	mov    $0x1,%edx
    7f3e:	89 c6                	mov    %eax,%esi
    7f40:	48 89 cf             	mov    %rcx,%rdi
    7f43:	e8 73 f9 ff ff       	call   78bb <jstring_chars_to_int>
    7f48:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7f4c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    7f51:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    7f56:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    7f5b:	f2 0f 58 45 f8       	addsd  -0x8(%rbp),%xmm0
    7f60:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    7f65:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    7f6c:	eb 1a                	jmp    7f88 <jstring_chars_to_double+0x139>
    7f6e:	f2 0f 10 45 f0       	movsd  -0x10(%rbp),%xmm0
    7f73:	f2 0f 10 0d 15 e7 00 	movsd  0xe715(%rip),%xmm1        # 16690 <__func__.0+0x430>
    7f7a:	00 
    7f7b:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    7f7f:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    7f84:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
    7f88:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    7f8b:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    7f8e:	72 de                	jb     7f6e <jstring_chars_to_double+0x11f>
    7f90:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7f94:	66 0f 2f 45 e8       	comisd -0x18(%rbp),%xmm0
    7f99:	76 11                	jbe    7fac <jstring_chars_to_double+0x15d>
    7f9b:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    7fa0:	f2 0f 5c 45 f0       	subsd  -0x10(%rbp),%xmm0
    7fa5:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    7faa:	eb 0f                	jmp    7fbb <jstring_chars_to_double+0x16c>
    7fac:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    7fb1:	f2 0f 58 45 f0       	addsd  -0x10(%rbp),%xmm0
    7fb6:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    7fbb:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    7fc0:	c9                   	leave
    7fc1:	c3                   	ret

0000000000007fc2 <jstring_jstring_to_int>:
    7fc2:	55                   	push   %rbp
    7fc3:	48 89 e5             	mov    %rsp,%rbp
    7fc6:	48 89 f8             	mov    %rdi,%rax
    7fc9:	48 89 f1             	mov    %rsi,%rcx
    7fcc:	48 89 c0             	mov    %rax,%rax
    7fcf:	ba 00 00 00 00       	mov    $0x0,%edx
    7fd4:	48 89 ca             	mov    %rcx,%rdx
    7fd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7fdb:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    7fdf:	b8 00 00 00 00       	mov    $0x0,%eax
    7fe4:	5d                   	pop    %rbp
    7fe5:	c3                   	ret

0000000000007fe6 <jstring_jstring_to_double>:
    7fe6:	55                   	push   %rbp
    7fe7:	48 89 e5             	mov    %rsp,%rbp
    7fea:	48 89 f8             	mov    %rdi,%rax
    7fed:	48 89 f1             	mov    %rsi,%rcx
    7ff0:	48 89 c0             	mov    %rax,%rax
    7ff3:	ba 00 00 00 00       	mov    $0x0,%edx
    7ff8:	48 89 ca             	mov    %rcx,%rdx
    7ffb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7fff:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    8003:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8007:	5d                   	pop    %rbp
    8008:	c3                   	ret

0000000000008009 <jstring_index_of_raw>:
    8009:	55                   	push   %rbp
    800a:	48 89 e5             	mov    %rsp,%rbp
    800d:	41 56                	push   %r14
    800f:	41 55                	push   %r13
    8011:	41 54                	push   %r12
    8013:	53                   	push   %rbx
    8014:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    801b:	48 89 f8             	mov    %rdi,%rax
    801e:	48 89 c1             	mov    %rax,%rcx
    8021:	bb 00 00 00 00       	mov    $0x0,%ebx
    8026:	48 89 f3             	mov    %rsi,%rbx
    8029:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    8030:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    8037:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    803e:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    8042:	49 89 de             	mov    %rbx,%r14
    8045:	83 3d 14 32 01 00 00 	cmpl   $0x0,0x13214(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    804c:	74 12                	je     8060 <jstring_index_of_raw+0x57>
    804e:	bf 40 00 00 00       	mov    $0x40,%edi
    8053:	e8 48 c0 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    8058:	48 85 c0             	test   %rax,%rax
    805b:	74 03                	je     8060 <jstring_index_of_raw+0x57>
    805d:	48 89 c3             	mov    %rax,%rbx
    8060:	48 8d 43 60          	lea    0x60(%rbx),%rax
    8064:	49 89 c4             	mov    %rax,%r12
    8067:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    806e:	48 8d 05 4b ba 00 00 	lea    0xba4b(%rip),%rax        # 13ac0 <_IO_stdin_used+0xac0>
    8075:	48 89 43 08          	mov    %rax,0x8(%rbx)
    8079:	48 8d 05 89 ff ff ff 	lea    -0x77(%rip),%rax        # 8009 <jstring_index_of_raw>
    8080:	48 89 43 10          	mov    %rax,0x10(%rbx)
    8084:	49 89 dd             	mov    %rbx,%r13
    8087:	49 c1 ed 03          	shr    $0x3,%r13
    808b:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    8092:	f1 f1 f1 f1 
    8096:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    809d:	00 00 f3 f3 
    80a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    80a8:	00 00 
    80aa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    80ae:	31 c0                	xor    %eax,%eax
    80b0:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    80b7:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    80be:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    80c3:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    80c8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    80cf:	48 89 c7             	mov    %rax,%rdi
    80d2:	e8 54 ca ff ff       	call   4b2b <jstring_length>
    80d7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    80dd:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    80e4:	00 00 00 
    80e7:	e9 0f 01 00 00       	jmp    81fb <jstring_index_of_raw+0x1f2>
    80ec:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    80f3:	00 00 00 
    80f6:	e9 e4 00 00 00       	jmp    81df <jstring_index_of_raw+0x1d6>
    80fb:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    8100:	48 83 c0 08          	add    $0x8,%rax
    8104:	48 89 c2             	mov    %rax,%rdx
    8107:	48 c1 ea 03          	shr    $0x3,%rdx
    810b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8112:	0f b6 12             	movzbl (%rdx),%edx
    8115:	84 d2                	test   %dl,%dl
    8117:	74 08                	je     8121 <jstring_index_of_raw+0x118>
    8119:	48 89 c7             	mov    %rax,%rdi
    811c:	e8 9f c0 ff ff       	call   41c0 <__asan_report_load8@plt>
    8121:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    8126:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
    812c:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    8132:	01 ca                	add    %ecx,%edx
    8134:	89 d2                	mov    %edx,%edx
    8136:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    813a:	48 89 c8             	mov    %rcx,%rax
    813d:	48 89 c2             	mov    %rax,%rdx
    8140:	48 c1 ea 03          	shr    $0x3,%rdx
    8144:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    814b:	0f b6 12             	movzbl (%rdx),%edx
    814e:	84 d2                	test   %dl,%dl
    8150:	40 0f 95 c6          	setne  %sil
    8154:	48 89 c7             	mov    %rax,%rdi
    8157:	83 e7 07             	and    $0x7,%edi
    815a:	40 38 d7             	cmp    %dl,%dil
    815d:	0f 9d c2             	setge  %dl
    8160:	21 f2                	and    %esi,%edx
    8162:	84 d2                	test   %dl,%dl
    8164:	74 08                	je     816e <jstring_index_of_raw+0x165>
    8166:	48 89 c7             	mov    %rax,%rdi
    8169:	e8 22 c0 ff ff       	call   4190 <__asan_report_load1@plt>
    816e:	0f b6 31             	movzbl (%rcx),%esi
    8171:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    8177:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    817e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8182:	48 89 c8             	mov    %rcx,%rax
    8185:	48 89 c2             	mov    %rax,%rdx
    8188:	48 c1 ea 03          	shr    $0x3,%rdx
    818c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8193:	0f b6 12             	movzbl (%rdx),%edx
    8196:	84 d2                	test   %dl,%dl
    8198:	40 0f 95 c7          	setne  %dil
    819c:	49 89 c0             	mov    %rax,%r8
    819f:	41 83 e0 07          	and    $0x7,%r8d
    81a3:	41 38 d0             	cmp    %dl,%r8b
    81a6:	0f 9d c2             	setge  %dl
    81a9:	21 fa                	and    %edi,%edx
    81ab:	84 d2                	test   %dl,%dl
    81ad:	74 08                	je     81b7 <jstring_index_of_raw+0x1ae>
    81af:	48 89 c7             	mov    %rax,%rdi
    81b2:	e8 d9 bf ff ff       	call   4190 <__asan_report_load1@plt>
    81b7:	0f b6 01             	movzbl (%rcx),%eax
    81ba:	40 38 c6             	cmp    %al,%sil
    81bd:	75 34                	jne    81f3 <jstring_index_of_raw+0x1ea>
    81bf:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    81c5:	83 e8 01             	sub    $0x1,%eax
    81c8:	39 85 78 ff ff ff    	cmp    %eax,-0x88(%rbp)
    81ce:	75 08                	jne    81d8 <jstring_index_of_raw+0x1cf>
    81d0:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    81d6:	eb 6f                	jmp    8247 <jstring_index_of_raw+0x23e>
    81d8:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
    81df:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    81e5:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    81eb:	0f 82 0a ff ff ff    	jb     80fb <jstring_index_of_raw+0xf2>
    81f1:	eb 01                	jmp    81f4 <jstring_index_of_raw+0x1eb>
    81f3:	90                   	nop
    81f4:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%rbp)
    81fb:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    8200:	48 89 c2             	mov    %rax,%rdx
    8203:	48 89 d0             	mov    %rdx,%rax
    8206:	48 c1 e8 03          	shr    $0x3,%rax
    820a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    8210:	0f b6 00             	movzbl (%rax),%eax
    8213:	84 c0                	test   %al,%al
    8215:	0f 95 c1             	setne  %cl
    8218:	3c 03                	cmp    $0x3,%al
    821a:	0f 9e c0             	setle  %al
    821d:	21 c8                	and    %ecx,%eax
    821f:	84 c0                	test   %al,%al
    8221:	74 08                	je     822b <jstring_index_of_raw+0x222>
    8223:	48 89 d7             	mov    %rdx,%rdi
    8226:	e8 c5 be ff ff       	call   40f0 <__asan_report_load4@plt>
    822b:	41 8b 44 24 c0       	mov    -0x40(%r12),%eax
    8230:	2b 85 7c ff ff ff    	sub    -0x84(%rbp),%eax
    8236:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    823c:	0f 83 aa fe ff ff    	jae    80ec <jstring_index_of_raw+0xe3>
    8242:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8247:	89 c2                	mov    %eax,%edx
    8249:	49 39 de             	cmp    %rbx,%r14
    824c:	74 21                	je     826f <jstring_index_of_raw+0x266>
    824e:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    8255:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    825c:	f5 f5 f5 
    825f:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    8266:	48 8b 43 38          	mov    0x38(%rbx),%rax
    826a:	c6 00 00             	movb   $0x0,(%rax)
    826d:	eb 0b                	jmp    827a <jstring_index_of_raw+0x271>
    826f:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    8276:	00 00 00 00 
    827a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    827e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8285:	00 00 
    8287:	74 05                	je     828e <jstring_index_of_raw+0x285>
    8289:	e8 d2 be ff ff       	call   4160 <__stack_chk_fail@plt>
    828e:	89 d0                	mov    %edx,%eax
    8290:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    8297:	5b                   	pop    %rbx
    8298:	41 5c                	pop    %r12
    829a:	41 5d                	pop    %r13
    829c:	41 5e                	pop    %r14
    829e:	5d                   	pop    %rbp
    829f:	c3                   	ret

00000000000082a0 <jstring_index_of_jstring>:
    82a0:	55                   	push   %rbp
    82a1:	48 89 e5             	mov    %rsp,%rbp
    82a4:	41 54                	push   %r12
    82a6:	53                   	push   %rbx
    82a7:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    82ae:	48 89 f8             	mov    %rdi,%rax
    82b1:	49 89 f0             	mov    %rsi,%r8
    82b4:	48 89 c6             	mov    %rax,%rsi
    82b7:	bf 00 00 00 00       	mov    $0x0,%edi
    82bc:	4c 89 c7             	mov    %r8,%rdi
    82bf:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    82c6:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    82cd:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    82d4:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    82db:	48 8d 9d 70 ff ff ff 	lea    -0x90(%rbp),%rbx
    82e2:	49 89 dc             	mov    %rbx,%r12
    82e5:	83 3d 74 2f 01 00 00 	cmpl   $0x0,0x12f74(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    82ec:	74 12                	je     8300 <jstring_index_of_jstring+0x60>
    82ee:	bf 60 00 00 00       	mov    $0x60,%edi
    82f3:	e8 e8 bd ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    82f8:	48 85 c0             	test   %rax,%rax
    82fb:	74 03                	je     8300 <jstring_index_of_jstring+0x60>
    82fd:	48 89 c3             	mov    %rax,%rbx
    8300:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    8307:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    830e:	48 8d 15 c3 b7 00 00 	lea    0xb7c3(%rip),%rdx        # 13ad8 <_IO_stdin_used+0xad8>
    8315:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    8319:	48 8d 15 80 ff ff ff 	lea    -0x80(%rip),%rdx        # 82a0 <jstring_index_of_jstring>
    8320:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    8324:	48 89 da             	mov    %rbx,%rdx
    8327:	48 c1 ea 03          	shr    $0x3,%rdx
    832b:	c7 82 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rdx)
    8332:	f1 f1 f1 
    8335:	c7 82 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rdx)
    833c:	00 f2 f2 
    833f:	c7 82 08 80 ff 7f 00 	movl   $0xf3f30000,0x7fff8008(%rdx)
    8346:	00 f3 f3 
    8349:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    8350:	00 00 
    8352:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    8356:	31 c9                	xor    %ecx,%ecx
    8358:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    835f:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    8366:	48 89 70 a0          	mov    %rsi,-0x60(%rax)
    836a:	48 89 78 a8          	mov    %rdi,-0x58(%rax)
    836e:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    8375:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
    837c:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    8380:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    8384:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
    838b:	00 00 00 
    838e:	e9 a0 01 00 00       	jmp    8533 <jstring_index_of_jstring+0x293>
    8393:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    839a:	00 00 00 
    839d:	e9 46 01 00 00       	jmp    84e8 <jstring_index_of_jstring+0x248>
    83a2:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    83a6:	48 83 c1 08          	add    $0x8,%rcx
    83aa:	48 89 ce             	mov    %rcx,%rsi
    83ad:	48 c1 ee 03          	shr    $0x3,%rsi
    83b1:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    83b8:	0f b6 36             	movzbl (%rsi),%esi
    83bb:	40 84 f6             	test   %sil,%sil
    83be:	74 08                	je     83c8 <jstring_index_of_jstring+0x128>
    83c0:	48 89 cf             	mov    %rcx,%rdi
    83c3:	e8 f8 bd ff ff       	call   41c0 <__asan_report_load8@plt>
    83c8:	48 8b 48 a8          	mov    -0x58(%rax),%rcx
    83cc:	8b bd 6c ff ff ff    	mov    -0x94(%rbp),%edi
    83d2:	8b b5 68 ff ff ff    	mov    -0x98(%rbp),%esi
    83d8:	01 fe                	add    %edi,%esi
    83da:	89 f6                	mov    %esi,%esi
    83dc:	48 8d 3c 31          	lea    (%rcx,%rsi,1),%rdi
    83e0:	48 89 f9             	mov    %rdi,%rcx
    83e3:	48 89 ce             	mov    %rcx,%rsi
    83e6:	48 c1 ee 03          	shr    $0x3,%rsi
    83ea:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    83f1:	0f b6 36             	movzbl (%rsi),%esi
    83f4:	40 84 f6             	test   %sil,%sil
    83f7:	41 0f 95 c0          	setne  %r8b
    83fb:	49 89 c9             	mov    %rcx,%r9
    83fe:	41 83 e1 07          	and    $0x7,%r9d
    8402:	41 38 f1             	cmp    %sil,%r9b
    8405:	40 0f 9d c6          	setge  %sil
    8409:	44 21 c6             	and    %r8d,%esi
    840c:	40 84 f6             	test   %sil,%sil
    840f:	74 08                	je     8419 <jstring_index_of_jstring+0x179>
    8411:	48 89 cf             	mov    %rcx,%rdi
    8414:	e8 77 bd ff ff       	call   4190 <__asan_report_load1@plt>
    8419:	44 0f b6 07          	movzbl (%rdi),%r8d
    841d:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    8421:	48 83 c1 08          	add    $0x8,%rcx
    8425:	48 89 ce             	mov    %rcx,%rsi
    8428:	48 c1 ee 03          	shr    $0x3,%rsi
    842c:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8433:	0f b6 36             	movzbl (%rsi),%esi
    8436:	40 84 f6             	test   %sil,%sil
    8439:	74 08                	je     8443 <jstring_index_of_jstring+0x1a3>
    843b:	48 89 cf             	mov    %rcx,%rdi
    843e:	e8 7d bd ff ff       	call   41c0 <__asan_report_load8@plt>
    8443:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    8447:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
    844d:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    8451:	48 89 f9             	mov    %rdi,%rcx
    8454:	48 89 ce             	mov    %rcx,%rsi
    8457:	48 c1 ee 03          	shr    $0x3,%rsi
    845b:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8462:	0f b6 36             	movzbl (%rsi),%esi
    8465:	40 84 f6             	test   %sil,%sil
    8468:	41 0f 95 c1          	setne  %r9b
    846c:	49 89 ca             	mov    %rcx,%r10
    846f:	41 83 e2 07          	and    $0x7,%r10d
    8473:	41 38 f2             	cmp    %sil,%r10b
    8476:	40 0f 9d c6          	setge  %sil
    847a:	44 21 ce             	and    %r9d,%esi
    847d:	40 84 f6             	test   %sil,%sil
    8480:	74 08                	je     848a <jstring_index_of_jstring+0x1ea>
    8482:	48 89 cf             	mov    %rcx,%rdi
    8485:	e8 06 bd ff ff       	call   4190 <__asan_report_load1@plt>
    848a:	0f b6 0f             	movzbl (%rdi),%ecx
    848d:	41 38 c8             	cmp    %cl,%r8b
    8490:	0f 85 95 00 00 00    	jne    852b <jstring_index_of_jstring+0x28b>
    8496:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    849a:	48 89 ce             	mov    %rcx,%rsi
    849d:	48 89 f1             	mov    %rsi,%rcx
    84a0:	48 c1 e9 03          	shr    $0x3,%rcx
    84a4:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    84ab:	0f b6 09             	movzbl (%rcx),%ecx
    84ae:	84 c9                	test   %cl,%cl
    84b0:	40 0f 95 c7          	setne  %dil
    84b4:	80 f9 03             	cmp    $0x3,%cl
    84b7:	0f 9e c1             	setle  %cl
    84ba:	21 f9                	and    %edi,%ecx
    84bc:	84 c9                	test   %cl,%cl
    84be:	74 08                	je     84c8 <jstring_index_of_jstring+0x228>
    84c0:	48 89 f7             	mov    %rsi,%rdi
    84c3:	e8 28 bc ff ff       	call   40f0 <__asan_report_load4@plt>
    84c8:	8b 48 c0             	mov    -0x40(%rax),%ecx
    84cb:	83 e9 01             	sub    $0x1,%ecx
    84ce:	39 8d 6c ff ff ff    	cmp    %ecx,-0x94(%rbp)
    84d4:	75 0b                	jne    84e1 <jstring_index_of_jstring+0x241>
    84d6:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    84dc:	e9 d2 00 00 00       	jmp    85b3 <jstring_index_of_jstring+0x313>
    84e1:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    84e8:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    84ec:	48 89 ce             	mov    %rcx,%rsi
    84ef:	48 89 f1             	mov    %rsi,%rcx
    84f2:	48 c1 e9 03          	shr    $0x3,%rcx
    84f6:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    84fd:	0f b6 09             	movzbl (%rcx),%ecx
    8500:	84 c9                	test   %cl,%cl
    8502:	40 0f 95 c7          	setne  %dil
    8506:	80 f9 03             	cmp    $0x3,%cl
    8509:	0f 9e c1             	setle  %cl
    850c:	21 f9                	and    %edi,%ecx
    850e:	84 c9                	test   %cl,%cl
    8510:	74 08                	je     851a <jstring_index_of_jstring+0x27a>
    8512:	48 89 f7             	mov    %rsi,%rdi
    8515:	e8 d6 bb ff ff       	call   40f0 <__asan_report_load4@plt>
    851a:	8b 48 c0             	mov    -0x40(%rax),%ecx
    851d:	39 8d 6c ff ff ff    	cmp    %ecx,-0x94(%rbp)
    8523:	0f 82 79 fe ff ff    	jb     83a2 <jstring_index_of_jstring+0x102>
    8529:	eb 01                	jmp    852c <jstring_index_of_jstring+0x28c>
    852b:	90                   	nop
    852c:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%rbp)
    8533:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    8537:	48 89 ce             	mov    %rcx,%rsi
    853a:	48 89 f1             	mov    %rsi,%rcx
    853d:	48 c1 e9 03          	shr    $0x3,%rcx
    8541:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    8548:	0f b6 09             	movzbl (%rcx),%ecx
    854b:	84 c9                	test   %cl,%cl
    854d:	40 0f 95 c7          	setne  %dil
    8551:	80 f9 03             	cmp    $0x3,%cl
    8554:	0f 9e c1             	setle  %cl
    8557:	21 f9                	and    %edi,%ecx
    8559:	84 c9                	test   %cl,%cl
    855b:	74 08                	je     8565 <jstring_index_of_jstring+0x2c5>
    855d:	48 89 f7             	mov    %rsi,%rdi
    8560:	e8 8b bb ff ff       	call   40f0 <__asan_report_load4@plt>
    8565:	8b 78 a0             	mov    -0x60(%rax),%edi
    8568:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    856c:	48 89 ce             	mov    %rcx,%rsi
    856f:	48 89 f1             	mov    %rsi,%rcx
    8572:	48 c1 e9 03          	shr    $0x3,%rcx
    8576:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    857d:	0f b6 09             	movzbl (%rcx),%ecx
    8580:	84 c9                	test   %cl,%cl
    8582:	41 0f 95 c0          	setne  %r8b
    8586:	80 f9 03             	cmp    $0x3,%cl
    8589:	0f 9e c1             	setle  %cl
    858c:	44 21 c1             	and    %r8d,%ecx
    858f:	84 c9                	test   %cl,%cl
    8591:	74 08                	je     859b <jstring_index_of_jstring+0x2fb>
    8593:	48 89 f7             	mov    %rsi,%rdi
    8596:	e8 55 bb ff ff       	call   40f0 <__asan_report_load4@plt>
    859b:	8b 48 c0             	mov    -0x40(%rax),%ecx
    859e:	29 cf                	sub    %ecx,%edi
    85a0:	89 fe                	mov    %edi,%esi
    85a2:	3b b5 68 ff ff ff    	cmp    -0x98(%rbp),%esi
    85a8:	0f 83 e5 fd ff ff    	jae    8393 <jstring_index_of_jstring+0xf3>
    85ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    85b3:	89 c1                	mov    %eax,%ecx
    85b5:	49 39 dc             	cmp    %rbx,%r12
    85b8:	74 2b                	je     85e5 <jstring_index_of_jstring+0x345>
    85ba:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    85c1:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    85c8:	f5 f5 f5 
    85cb:	48 89 82 00 80 ff 7f 	mov    %rax,0x7fff8000(%rdx)
    85d2:	c7 82 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rdx)
    85d9:	f5 f5 f5 
    85dc:	48 8b 43 78          	mov    0x78(%rbx),%rax
    85e0:	c6 00 00             	movb   $0x0,(%rax)
    85e3:	eb 15                	jmp    85fa <jstring_index_of_jstring+0x35a>
    85e5:	48 c7 82 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rdx)
    85ec:	00 00 00 00 
    85f0:	c7 82 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rdx)
    85f7:	00 00 00 
    85fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85fe:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8605:	00 00 
    8607:	74 05                	je     860e <jstring_index_of_jstring+0x36e>
    8609:	e8 52 bb ff ff       	call   4160 <__stack_chk_fail@plt>
    860e:	89 c8                	mov    %ecx,%eax
    8610:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    8617:	5b                   	pop    %rbx
    8618:	41 5c                	pop    %r12
    861a:	5d                   	pop    %rbp
    861b:	c3                   	ret

000000000000861c <jstring_last_index_of_raw>:
    861c:	55                   	push   %rbp
    861d:	48 89 e5             	mov    %rsp,%rbp
    8620:	41 56                	push   %r14
    8622:	41 55                	push   %r13
    8624:	41 54                	push   %r12
    8626:	53                   	push   %rbx
    8627:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    862e:	48 89 f8             	mov    %rdi,%rax
    8631:	48 89 c1             	mov    %rax,%rcx
    8634:	bb 00 00 00 00       	mov    $0x0,%ebx
    8639:	48 89 f3             	mov    %rsi,%rbx
    863c:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)
    8643:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    864a:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    8651:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    8655:	49 89 de             	mov    %rbx,%r14
    8658:	83 3d 01 2c 01 00 00 	cmpl   $0x0,0x12c01(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    865f:	74 12                	je     8673 <jstring_last_index_of_raw+0x57>
    8661:	bf 40 00 00 00       	mov    $0x40,%edi
    8666:	e8 35 ba ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    866b:	48 85 c0             	test   %rax,%rax
    866e:	74 03                	je     8673 <jstring_last_index_of_raw+0x57>
    8670:	48 89 c3             	mov    %rax,%rbx
    8673:	48 8d 43 60          	lea    0x60(%rbx),%rax
    8677:	49 89 c4             	mov    %rax,%r12
    867a:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    8681:	48 8d 05 78 b4 00 00 	lea    0xb478(%rip),%rax        # 13b00 <_IO_stdin_used+0xb00>
    8688:	48 89 43 08          	mov    %rax,0x8(%rbx)
    868c:	48 8d 05 89 ff ff ff 	lea    -0x77(%rip),%rax        # 861c <jstring_last_index_of_raw>
    8693:	48 89 43 10          	mov    %rax,0x10(%rbx)
    8697:	49 89 dd             	mov    %rbx,%r13
    869a:	49 c1 ed 03          	shr    $0x3,%r13
    869e:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    86a5:	f1 f1 f1 f1 
    86a9:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    86b0:	00 00 f3 f3 
    86b4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    86bb:	00 00 
    86bd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    86c1:	31 c0                	xor    %eax,%eax
    86c3:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    86ca:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    86d1:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    86d6:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    86db:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    86e2:	48 89 c7             	mov    %rax,%rdi
    86e5:	e8 41 c4 ff ff       	call   4b2b <jstring_length>
    86ea:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    86f0:	c7 85 74 ff ff ff ff 	movl   $0xffffffff,-0x8c(%rbp)
    86f7:	ff ff ff 
    86fa:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
    8701:	00 00 00 
    8704:	e9 33 01 00 00       	jmp    883c <jstring_last_index_of_raw+0x220>
    8709:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    8710:	00 00 00 
    8713:	e9 08 01 00 00       	jmp    8820 <jstring_last_index_of_raw+0x204>
    8718:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    871d:	48 83 c0 08          	add    $0x8,%rax
    8721:	48 89 c2             	mov    %rax,%rdx
    8724:	48 c1 ea 03          	shr    $0x3,%rdx
    8728:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    872f:	0f b6 12             	movzbl (%rdx),%edx
    8732:	84 d2                	test   %dl,%dl
    8734:	74 08                	je     873e <jstring_last_index_of_raw+0x122>
    8736:	48 89 c7             	mov    %rax,%rdi
    8739:	e8 82 ba ff ff       	call   41c0 <__asan_report_load8@plt>
    873e:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    8743:	8b 8d 78 ff ff ff    	mov    -0x88(%rbp),%ecx
    8749:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
    874f:	01 ca                	add    %ecx,%edx
    8751:	89 d2                	mov    %edx,%edx
    8753:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    8757:	48 89 c8             	mov    %rcx,%rax
    875a:	48 89 c2             	mov    %rax,%rdx
    875d:	48 c1 ea 03          	shr    $0x3,%rdx
    8761:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8768:	0f b6 12             	movzbl (%rdx),%edx
    876b:	84 d2                	test   %dl,%dl
    876d:	40 0f 95 c6          	setne  %sil
    8771:	48 89 c7             	mov    %rax,%rdi
    8774:	83 e7 07             	and    $0x7,%edi
    8777:	40 38 d7             	cmp    %dl,%dil
    877a:	0f 9d c2             	setge  %dl
    877d:	21 f2                	and    %esi,%edx
    877f:	84 d2                	test   %dl,%dl
    8781:	74 08                	je     878b <jstring_last_index_of_raw+0x16f>
    8783:	48 89 c7             	mov    %rax,%rdi
    8786:	e8 05 ba ff ff       	call   4190 <__asan_report_load1@plt>
    878b:	0f b6 31             	movzbl (%rcx),%esi
    878e:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    8794:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    879b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    879f:	48 89 c8             	mov    %rcx,%rax
    87a2:	48 89 c2             	mov    %rax,%rdx
    87a5:	48 c1 ea 03          	shr    $0x3,%rdx
    87a9:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    87b0:	0f b6 12             	movzbl (%rdx),%edx
    87b3:	84 d2                	test   %dl,%dl
    87b5:	40 0f 95 c7          	setne  %dil
    87b9:	49 89 c0             	mov    %rax,%r8
    87bc:	41 83 e0 07          	and    $0x7,%r8d
    87c0:	41 38 d0             	cmp    %dl,%r8b
    87c3:	0f 9d c2             	setge  %dl
    87c6:	21 fa                	and    %edi,%edx
    87c8:	84 d2                	test   %dl,%dl
    87ca:	74 08                	je     87d4 <jstring_last_index_of_raw+0x1b8>
    87cc:	48 89 c7             	mov    %rax,%rdi
    87cf:	e8 bc b9 ff ff       	call   4190 <__asan_report_load1@plt>
    87d4:	0f b6 01             	movzbl (%rcx),%eax
    87d7:	40 38 c6             	cmp    %al,%sil
    87da:	75 58                	jne    8834 <jstring_last_index_of_raw+0x218>
    87dc:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    87e2:	83 e8 01             	sub    $0x1,%eax
    87e5:	39 85 78 ff ff ff    	cmp    %eax,-0x88(%rbp)
    87eb:	75 2c                	jne    8819 <jstring_last_index_of_raw+0x1fd>
    87ed:	48 8b 15 4c 09 01 00 	mov    0x1094c(%rip),%rdx        # 19140 <jstring_log>
    87f4:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    87fa:	48 8d 0d 1f b3 00 00 	lea    0xb31f(%rip),%rcx        # 13b20 <_IO_stdin_used+0xb20>
    8801:	89 c6                	mov    %eax,%esi
    8803:	48 89 cf             	mov    %rcx,%rdi
    8806:	b8 00 00 00 00       	mov    $0x0,%eax
    880b:	ff d2                	call   *%rdx
    880d:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    8813:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
    8819:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
    8820:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    8826:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
    882c:	0f 82 e6 fe ff ff    	jb     8718 <jstring_last_index_of_raw+0xfc>
    8832:	eb 01                	jmp    8835 <jstring_last_index_of_raw+0x219>
    8834:	90                   	nop
    8835:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%rbp)
    883c:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    8841:	48 89 c2             	mov    %rax,%rdx
    8844:	48 89 d0             	mov    %rdx,%rax
    8847:	48 c1 e8 03          	shr    $0x3,%rax
    884b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    8851:	0f b6 00             	movzbl (%rax),%eax
    8854:	84 c0                	test   %al,%al
    8856:	0f 95 c1             	setne  %cl
    8859:	3c 03                	cmp    $0x3,%al
    885b:	0f 9e c0             	setle  %al
    885e:	21 c8                	and    %ecx,%eax
    8860:	84 c0                	test   %al,%al
    8862:	74 08                	je     886c <jstring_last_index_of_raw+0x250>
    8864:	48 89 d7             	mov    %rdx,%rdi
    8867:	e8 84 b8 ff ff       	call   40f0 <__asan_report_load4@plt>
    886c:	41 8b 44 24 c0       	mov    -0x40(%r12),%eax
    8871:	2b 85 7c ff ff ff    	sub    -0x84(%rbp),%eax
    8877:	3b 85 70 ff ff ff    	cmp    -0x90(%rbp),%eax
    887d:	0f 83 86 fe ff ff    	jae    8709 <jstring_last_index_of_raw+0xed>
    8883:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    8889:	89 c2                	mov    %eax,%edx
    888b:	49 39 de             	cmp    %rbx,%r14
    888e:	74 21                	je     88b1 <jstring_last_index_of_raw+0x295>
    8890:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    8897:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    889e:	f5 f5 f5 
    88a1:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    88a8:	48 8b 43 38          	mov    0x38(%rbx),%rax
    88ac:	c6 00 00             	movb   $0x0,(%rax)
    88af:	eb 0b                	jmp    88bc <jstring_last_index_of_raw+0x2a0>
    88b1:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    88b8:	00 00 00 00 
    88bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88c0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    88c7:	00 00 
    88c9:	74 05                	je     88d0 <jstring_last_index_of_raw+0x2b4>
    88cb:	e8 90 b8 ff ff       	call   4160 <__stack_chk_fail@plt>
    88d0:	89 d0                	mov    %edx,%eax
    88d2:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    88d9:	5b                   	pop    %rbx
    88da:	41 5c                	pop    %r12
    88dc:	41 5d                	pop    %r13
    88de:	41 5e                	pop    %r14
    88e0:	5d                   	pop    %rbp
    88e1:	c3                   	ret

00000000000088e2 <jstring_last_index_of_jstring>:
    88e2:	55                   	push   %rbp
    88e3:	48 89 e5             	mov    %rsp,%rbp
    88e6:	41 54                	push   %r12
    88e8:	53                   	push   %rbx
    88e9:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    88f0:	48 89 f8             	mov    %rdi,%rax
    88f3:	49 89 f0             	mov    %rsi,%r8
    88f6:	48 89 c6             	mov    %rax,%rsi
    88f9:	bf 00 00 00 00       	mov    $0x0,%edi
    88fe:	4c 89 c7             	mov    %r8,%rdi
    8901:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    8908:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    890f:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    8916:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    891d:	48 8d 9d 70 ff ff ff 	lea    -0x90(%rbp),%rbx
    8924:	49 89 dc             	mov    %rbx,%r12
    8927:	83 3d 32 29 01 00 00 	cmpl   $0x0,0x12932(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    892e:	74 12                	je     8942 <jstring_last_index_of_jstring+0x60>
    8930:	bf 60 00 00 00       	mov    $0x60,%edi
    8935:	e8 a6 b7 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    893a:	48 85 c0             	test   %rax,%rax
    893d:	74 03                	je     8942 <jstring_last_index_of_jstring+0x60>
    893f:	48 89 c3             	mov    %rax,%rbx
    8942:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    8949:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    8950:	48 8d 15 09 b2 00 00 	lea    0xb209(%rip),%rdx        # 13b60 <_IO_stdin_used+0xb60>
    8957:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    895b:	48 8d 15 80 ff ff ff 	lea    -0x80(%rip),%rdx        # 88e2 <jstring_last_index_of_jstring>
    8962:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    8966:	48 89 da             	mov    %rbx,%rdx
    8969:	48 c1 ea 03          	shr    $0x3,%rdx
    896d:	c7 82 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rdx)
    8974:	f1 f1 f1 
    8977:	c7 82 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rdx)
    897e:	00 f2 f2 
    8981:	c7 82 08 80 ff 7f 00 	movl   $0xf3f30000,0x7fff8008(%rdx)
    8988:	00 f3 f3 
    898b:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    8992:	00 00 
    8994:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    8998:	31 c9                	xor    %ecx,%ecx
    899a:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    89a1:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    89a8:	48 89 70 a0          	mov    %rsi,-0x60(%rax)
    89ac:	48 89 78 a8          	mov    %rdi,-0x58(%rax)
    89b0:	48 8b b5 40 ff ff ff 	mov    -0xc0(%rbp),%rsi
    89b7:	48 8b bd 48 ff ff ff 	mov    -0xb8(%rbp),%rdi
    89be:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    89c2:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    89c6:	c7 85 68 ff ff ff ff 	movl   $0xffffffff,-0x98(%rbp)
    89cd:	ff ff ff 
    89d0:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
    89d7:	00 00 00 
    89da:	e9 a1 01 00 00       	jmp    8b80 <jstring_last_index_of_jstring+0x29e>
    89df:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    89e6:	00 00 00 
    89e9:	e9 47 01 00 00       	jmp    8b35 <jstring_last_index_of_jstring+0x253>
    89ee:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    89f2:	48 83 c1 08          	add    $0x8,%rcx
    89f6:	48 89 ce             	mov    %rcx,%rsi
    89f9:	48 c1 ee 03          	shr    $0x3,%rsi
    89fd:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8a04:	0f b6 36             	movzbl (%rsi),%esi
    8a07:	40 84 f6             	test   %sil,%sil
    8a0a:	74 08                	je     8a14 <jstring_last_index_of_jstring+0x132>
    8a0c:	48 89 cf             	mov    %rcx,%rdi
    8a0f:	e8 ac b7 ff ff       	call   41c0 <__asan_report_load8@plt>
    8a14:	48 8b 48 a8          	mov    -0x58(%rax),%rcx
    8a18:	8b bd 6c ff ff ff    	mov    -0x94(%rbp),%edi
    8a1e:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
    8a24:	01 fe                	add    %edi,%esi
    8a26:	89 f6                	mov    %esi,%esi
    8a28:	48 8d 3c 31          	lea    (%rcx,%rsi,1),%rdi
    8a2c:	48 89 f9             	mov    %rdi,%rcx
    8a2f:	48 89 ce             	mov    %rcx,%rsi
    8a32:	48 c1 ee 03          	shr    $0x3,%rsi
    8a36:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8a3d:	0f b6 36             	movzbl (%rsi),%esi
    8a40:	40 84 f6             	test   %sil,%sil
    8a43:	41 0f 95 c0          	setne  %r8b
    8a47:	49 89 c9             	mov    %rcx,%r9
    8a4a:	41 83 e1 07          	and    $0x7,%r9d
    8a4e:	41 38 f1             	cmp    %sil,%r9b
    8a51:	40 0f 9d c6          	setge  %sil
    8a55:	44 21 c6             	and    %r8d,%esi
    8a58:	40 84 f6             	test   %sil,%sil
    8a5b:	74 08                	je     8a65 <jstring_last_index_of_jstring+0x183>
    8a5d:	48 89 cf             	mov    %rcx,%rdi
    8a60:	e8 2b b7 ff ff       	call   4190 <__asan_report_load1@plt>
    8a65:	44 0f b6 07          	movzbl (%rdi),%r8d
    8a69:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    8a6d:	48 83 c1 08          	add    $0x8,%rcx
    8a71:	48 89 ce             	mov    %rcx,%rsi
    8a74:	48 c1 ee 03          	shr    $0x3,%rsi
    8a78:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8a7f:	0f b6 36             	movzbl (%rsi),%esi
    8a82:	40 84 f6             	test   %sil,%sil
    8a85:	74 08                	je     8a8f <jstring_last_index_of_jstring+0x1ad>
    8a87:	48 89 cf             	mov    %rcx,%rdi
    8a8a:	e8 31 b7 ff ff       	call   41c0 <__asan_report_load8@plt>
    8a8f:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    8a93:	8b 8d 6c ff ff ff    	mov    -0x94(%rbp),%ecx
    8a99:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    8a9d:	48 89 f9             	mov    %rdi,%rcx
    8aa0:	48 89 ce             	mov    %rcx,%rsi
    8aa3:	48 c1 ee 03          	shr    $0x3,%rsi
    8aa7:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    8aae:	0f b6 36             	movzbl (%rsi),%esi
    8ab1:	40 84 f6             	test   %sil,%sil
    8ab4:	41 0f 95 c1          	setne  %r9b
    8ab8:	49 89 ca             	mov    %rcx,%r10
    8abb:	41 83 e2 07          	and    $0x7,%r10d
    8abf:	41 38 f2             	cmp    %sil,%r10b
    8ac2:	40 0f 9d c6          	setge  %sil
    8ac6:	44 21 ce             	and    %r9d,%esi
    8ac9:	40 84 f6             	test   %sil,%sil
    8acc:	74 08                	je     8ad6 <jstring_last_index_of_jstring+0x1f4>
    8ace:	48 89 cf             	mov    %rcx,%rdi
    8ad1:	e8 ba b6 ff ff       	call   4190 <__asan_report_load1@plt>
    8ad6:	0f b6 0f             	movzbl (%rdi),%ecx
    8ad9:	41 38 c8             	cmp    %cl,%r8b
    8adc:	0f 85 96 00 00 00    	jne    8b78 <jstring_last_index_of_jstring+0x296>
    8ae2:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    8ae6:	48 89 ce             	mov    %rcx,%rsi
    8ae9:	48 89 f1             	mov    %rsi,%rcx
    8aec:	48 c1 e9 03          	shr    $0x3,%rcx
    8af0:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    8af7:	0f b6 09             	movzbl (%rcx),%ecx
    8afa:	84 c9                	test   %cl,%cl
    8afc:	40 0f 95 c7          	setne  %dil
    8b00:	80 f9 03             	cmp    $0x3,%cl
    8b03:	0f 9e c1             	setle  %cl
    8b06:	21 f9                	and    %edi,%ecx
    8b08:	84 c9                	test   %cl,%cl
    8b0a:	74 08                	je     8b14 <jstring_last_index_of_jstring+0x232>
    8b0c:	48 89 f7             	mov    %rsi,%rdi
    8b0f:	e8 dc b5 ff ff       	call   40f0 <__asan_report_load4@plt>
    8b14:	8b 48 c0             	mov    -0x40(%rax),%ecx
    8b17:	83 e9 01             	sub    $0x1,%ecx
    8b1a:	39 8d 6c ff ff ff    	cmp    %ecx,-0x94(%rbp)
    8b20:	75 0c                	jne    8b2e <jstring_last_index_of_jstring+0x24c>
    8b22:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    8b28:	89 8d 68 ff ff ff    	mov    %ecx,-0x98(%rbp)
    8b2e:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    8b35:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    8b39:	48 89 ce             	mov    %rcx,%rsi
    8b3c:	48 89 f1             	mov    %rsi,%rcx
    8b3f:	48 c1 e9 03          	shr    $0x3,%rcx
    8b43:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    8b4a:	0f b6 09             	movzbl (%rcx),%ecx
    8b4d:	84 c9                	test   %cl,%cl
    8b4f:	40 0f 95 c7          	setne  %dil
    8b53:	80 f9 03             	cmp    $0x3,%cl
    8b56:	0f 9e c1             	setle  %cl
    8b59:	21 f9                	and    %edi,%ecx
    8b5b:	84 c9                	test   %cl,%cl
    8b5d:	74 08                	je     8b67 <jstring_last_index_of_jstring+0x285>
    8b5f:	48 89 f7             	mov    %rsi,%rdi
    8b62:	e8 89 b5 ff ff       	call   40f0 <__asan_report_load4@plt>
    8b67:	8b 48 c0             	mov    -0x40(%rax),%ecx
    8b6a:	39 8d 6c ff ff ff    	cmp    %ecx,-0x94(%rbp)
    8b70:	0f 82 78 fe ff ff    	jb     89ee <jstring_last_index_of_jstring+0x10c>
    8b76:	eb 01                	jmp    8b79 <jstring_last_index_of_jstring+0x297>
    8b78:	90                   	nop
    8b79:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    8b80:	48 8d 48 a0          	lea    -0x60(%rax),%rcx
    8b84:	48 89 ce             	mov    %rcx,%rsi
    8b87:	48 89 f1             	mov    %rsi,%rcx
    8b8a:	48 c1 e9 03          	shr    $0x3,%rcx
    8b8e:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    8b95:	0f b6 09             	movzbl (%rcx),%ecx
    8b98:	84 c9                	test   %cl,%cl
    8b9a:	40 0f 95 c7          	setne  %dil
    8b9e:	80 f9 03             	cmp    $0x3,%cl
    8ba1:	0f 9e c1             	setle  %cl
    8ba4:	21 f9                	and    %edi,%ecx
    8ba6:	84 c9                	test   %cl,%cl
    8ba8:	74 08                	je     8bb2 <jstring_last_index_of_jstring+0x2d0>
    8baa:	48 89 f7             	mov    %rsi,%rdi
    8bad:	e8 3e b5 ff ff       	call   40f0 <__asan_report_load4@plt>
    8bb2:	8b 78 a0             	mov    -0x60(%rax),%edi
    8bb5:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    8bb9:	48 89 ce             	mov    %rcx,%rsi
    8bbc:	48 89 f1             	mov    %rsi,%rcx
    8bbf:	48 c1 e9 03          	shr    $0x3,%rcx
    8bc3:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    8bca:	0f b6 09             	movzbl (%rcx),%ecx
    8bcd:	84 c9                	test   %cl,%cl
    8bcf:	41 0f 95 c0          	setne  %r8b
    8bd3:	80 f9 03             	cmp    $0x3,%cl
    8bd6:	0f 9e c1             	setle  %cl
    8bd9:	44 21 c1             	and    %r8d,%ecx
    8bdc:	84 c9                	test   %cl,%cl
    8bde:	74 08                	je     8be8 <jstring_last_index_of_jstring+0x306>
    8be0:	48 89 f7             	mov    %rsi,%rdi
    8be3:	e8 08 b5 ff ff       	call   40f0 <__asan_report_load4@plt>
    8be8:	8b 48 c0             	mov    -0x40(%rax),%ecx
    8beb:	29 cf                	sub    %ecx,%edi
    8bed:	89 fe                	mov    %edi,%esi
    8bef:	3b b5 64 ff ff ff    	cmp    -0x9c(%rbp),%esi
    8bf5:	0f 83 e4 fd ff ff    	jae    89df <jstring_last_index_of_jstring+0xfd>
    8bfb:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    8c01:	89 c1                	mov    %eax,%ecx
    8c03:	49 39 dc             	cmp    %rbx,%r12
    8c06:	74 2b                	je     8c33 <jstring_last_index_of_jstring+0x351>
    8c08:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    8c0f:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    8c16:	f5 f5 f5 
    8c19:	48 89 82 00 80 ff 7f 	mov    %rax,0x7fff8000(%rdx)
    8c20:	c7 82 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rdx)
    8c27:	f5 f5 f5 
    8c2a:	48 8b 43 78          	mov    0x78(%rbx),%rax
    8c2e:	c6 00 00             	movb   $0x0,(%rax)
    8c31:	eb 15                	jmp    8c48 <jstring_last_index_of_jstring+0x366>
    8c33:	48 c7 82 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rdx)
    8c3a:	00 00 00 00 
    8c3e:	c7 82 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rdx)
    8c45:	00 00 00 
    8c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c4c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8c53:	00 00 
    8c55:	74 05                	je     8c5c <jstring_last_index_of_jstring+0x37a>
    8c57:	e8 04 b5 ff ff       	call   4160 <__stack_chk_fail@plt>
    8c5c:	89 c8                	mov    %ecx,%eax
    8c5e:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    8c65:	5b                   	pop    %rbx
    8c66:	41 5c                	pop    %r12
    8c68:	5d                   	pop    %rbp
    8c69:	c3                   	ret

0000000000008c6a <jstring_to_upper_in_place>:
    8c6a:	55                   	push   %rbp
    8c6b:	48 89 e5             	mov    %rsp,%rbp
    8c6e:	48 83 ec 20          	sub    $0x20,%rsp
    8c72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c76:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    8c7d:	e9 55 01 00 00       	jmp    8dd7 <jstring_to_upper_in_place+0x16d>
    8c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c86:	48 83 c0 08          	add    $0x8,%rax
    8c8a:	48 89 c2             	mov    %rax,%rdx
    8c8d:	48 c1 ea 03          	shr    $0x3,%rdx
    8c91:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8c98:	0f b6 12             	movzbl (%rdx),%edx
    8c9b:	84 d2                	test   %dl,%dl
    8c9d:	74 08                	je     8ca7 <jstring_to_upper_in_place+0x3d>
    8c9f:	48 89 c7             	mov    %rax,%rdi
    8ca2:	e8 19 b5 ff ff       	call   41c0 <__asan_report_load8@plt>
    8ca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cab:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8caf:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8cb2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8cb6:	48 89 c8             	mov    %rcx,%rax
    8cb9:	48 89 c2             	mov    %rax,%rdx
    8cbc:	48 c1 ea 03          	shr    $0x3,%rdx
    8cc0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8cc7:	0f b6 12             	movzbl (%rdx),%edx
    8cca:	84 d2                	test   %dl,%dl
    8ccc:	40 0f 95 c6          	setne  %sil
    8cd0:	48 89 c7             	mov    %rax,%rdi
    8cd3:	83 e7 07             	and    $0x7,%edi
    8cd6:	40 38 d7             	cmp    %dl,%dil
    8cd9:	0f 9d c2             	setge  %dl
    8cdc:	21 f2                	and    %esi,%edx
    8cde:	84 d2                	test   %dl,%dl
    8ce0:	74 08                	je     8cea <jstring_to_upper_in_place+0x80>
    8ce2:	48 89 c7             	mov    %rax,%rdi
    8ce5:	e8 a6 b4 ff ff       	call   4190 <__asan_report_load1@plt>
    8cea:	0f b6 01             	movzbl (%rcx),%eax
    8ced:	3c 7a                	cmp    $0x7a,%al
    8cef:	0f 8f de 00 00 00    	jg     8dd3 <jstring_to_upper_in_place+0x169>
    8cf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cf9:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8cfd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8d00:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8d04:	48 89 c8             	mov    %rcx,%rax
    8d07:	48 89 c2             	mov    %rax,%rdx
    8d0a:	48 c1 ea 03          	shr    $0x3,%rdx
    8d0e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8d15:	0f b6 12             	movzbl (%rdx),%edx
    8d18:	84 d2                	test   %dl,%dl
    8d1a:	40 0f 95 c6          	setne  %sil
    8d1e:	48 89 c7             	mov    %rax,%rdi
    8d21:	83 e7 07             	and    $0x7,%edi
    8d24:	40 38 d7             	cmp    %dl,%dil
    8d27:	0f 9d c2             	setge  %dl
    8d2a:	21 f2                	and    %esi,%edx
    8d2c:	84 d2                	test   %dl,%dl
    8d2e:	74 08                	je     8d38 <jstring_to_upper_in_place+0xce>
    8d30:	48 89 c7             	mov    %rax,%rdi
    8d33:	e8 58 b4 ff ff       	call   4190 <__asan_report_load1@plt>
    8d38:	0f b6 01             	movzbl (%rcx),%eax
    8d3b:	3c 60                	cmp    $0x60,%al
    8d3d:	0f 8e 90 00 00 00    	jle    8dd3 <jstring_to_upper_in_place+0x169>
    8d43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d47:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8d4b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8d4e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8d52:	48 89 c8             	mov    %rcx,%rax
    8d55:	48 89 c2             	mov    %rax,%rdx
    8d58:	48 c1 ea 03          	shr    $0x3,%rdx
    8d5c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8d63:	0f b6 12             	movzbl (%rdx),%edx
    8d66:	84 d2                	test   %dl,%dl
    8d68:	40 0f 95 c6          	setne  %sil
    8d6c:	48 89 c7             	mov    %rax,%rdi
    8d6f:	83 e7 07             	and    $0x7,%edi
    8d72:	40 38 d7             	cmp    %dl,%dil
    8d75:	0f 9d c2             	setge  %dl
    8d78:	21 f2                	and    %esi,%edx
    8d7a:	84 d2                	test   %dl,%dl
    8d7c:	74 08                	je     8d86 <jstring_to_upper_in_place+0x11c>
    8d7e:	48 89 c7             	mov    %rax,%rdi
    8d81:	e8 0a b4 ff ff       	call   4190 <__asan_report_load1@plt>
    8d86:	0f b6 01             	movzbl (%rcx),%eax
    8d89:	8d 70 e0             	lea    -0x20(%rax),%esi
    8d8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d90:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8d94:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8d97:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8d9b:	48 89 c8             	mov    %rcx,%rax
    8d9e:	48 89 c2             	mov    %rax,%rdx
    8da1:	48 c1 ea 03          	shr    $0x3,%rdx
    8da5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8dac:	0f b6 12             	movzbl (%rdx),%edx
    8daf:	84 d2                	test   %dl,%dl
    8db1:	40 0f 95 c7          	setne  %dil
    8db5:	49 89 c0             	mov    %rax,%r8
    8db8:	41 83 e0 07          	and    $0x7,%r8d
    8dbc:	41 38 d0             	cmp    %dl,%r8b
    8dbf:	0f 9d c2             	setge  %dl
    8dc2:	21 fa                	and    %edi,%edx
    8dc4:	84 d2                	test   %dl,%dl
    8dc6:	74 08                	je     8dd0 <jstring_to_upper_in_place+0x166>
    8dc8:	48 89 c7             	mov    %rax,%rdi
    8dcb:	e8 e0 b3 ff ff       	call   41b0 <__asan_report_store1@plt>
    8dd0:	40 88 31             	mov    %sil,(%rcx)
    8dd3:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8dd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ddb:	48 89 c2             	mov    %rax,%rdx
    8dde:	48 89 d0             	mov    %rdx,%rax
    8de1:	48 c1 e8 03          	shr    $0x3,%rax
    8de5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    8deb:	0f b6 00             	movzbl (%rax),%eax
    8dee:	84 c0                	test   %al,%al
    8df0:	0f 95 c1             	setne  %cl
    8df3:	3c 03                	cmp    $0x3,%al
    8df5:	0f 9e c0             	setle  %al
    8df8:	21 c8                	and    %ecx,%eax
    8dfa:	84 c0                	test   %al,%al
    8dfc:	74 08                	je     8e06 <jstring_to_upper_in_place+0x19c>
    8dfe:	48 89 d7             	mov    %rdx,%rdi
    8e01:	e8 ea b2 ff ff       	call   40f0 <__asan_report_load4@plt>
    8e06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e0a:	8b 00                	mov    (%rax),%eax
    8e0c:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    8e0f:	0f 82 6d fe ff ff    	jb     8c82 <jstring_to_upper_in_place+0x18>
    8e15:	90                   	nop
    8e16:	90                   	nop
    8e17:	c9                   	leave
    8e18:	c3                   	ret

0000000000008e19 <jstring_to_lower_in_place>:
    8e19:	55                   	push   %rbp
    8e1a:	48 89 e5             	mov    %rsp,%rbp
    8e1d:	48 83 ec 20          	sub    $0x20,%rsp
    8e21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e25:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    8e2c:	e9 55 01 00 00       	jmp    8f86 <jstring_to_lower_in_place+0x16d>
    8e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e35:	48 83 c0 08          	add    $0x8,%rax
    8e39:	48 89 c2             	mov    %rax,%rdx
    8e3c:	48 c1 ea 03          	shr    $0x3,%rdx
    8e40:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8e47:	0f b6 12             	movzbl (%rdx),%edx
    8e4a:	84 d2                	test   %dl,%dl
    8e4c:	74 08                	je     8e56 <jstring_to_lower_in_place+0x3d>
    8e4e:	48 89 c7             	mov    %rax,%rdi
    8e51:	e8 6a b3 ff ff       	call   41c0 <__asan_report_load8@plt>
    8e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e5a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8e5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8e61:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8e65:	48 89 c8             	mov    %rcx,%rax
    8e68:	48 89 c2             	mov    %rax,%rdx
    8e6b:	48 c1 ea 03          	shr    $0x3,%rdx
    8e6f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8e76:	0f b6 12             	movzbl (%rdx),%edx
    8e79:	84 d2                	test   %dl,%dl
    8e7b:	40 0f 95 c6          	setne  %sil
    8e7f:	48 89 c7             	mov    %rax,%rdi
    8e82:	83 e7 07             	and    $0x7,%edi
    8e85:	40 38 d7             	cmp    %dl,%dil
    8e88:	0f 9d c2             	setge  %dl
    8e8b:	21 f2                	and    %esi,%edx
    8e8d:	84 d2                	test   %dl,%dl
    8e8f:	74 08                	je     8e99 <jstring_to_lower_in_place+0x80>
    8e91:	48 89 c7             	mov    %rax,%rdi
    8e94:	e8 f7 b2 ff ff       	call   4190 <__asan_report_load1@plt>
    8e99:	0f b6 01             	movzbl (%rcx),%eax
    8e9c:	3c 5a                	cmp    $0x5a,%al
    8e9e:	0f 8f de 00 00 00    	jg     8f82 <jstring_to_lower_in_place+0x169>
    8ea4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ea8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8eac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8eaf:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8eb3:	48 89 c8             	mov    %rcx,%rax
    8eb6:	48 89 c2             	mov    %rax,%rdx
    8eb9:	48 c1 ea 03          	shr    $0x3,%rdx
    8ebd:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8ec4:	0f b6 12             	movzbl (%rdx),%edx
    8ec7:	84 d2                	test   %dl,%dl
    8ec9:	40 0f 95 c6          	setne  %sil
    8ecd:	48 89 c7             	mov    %rax,%rdi
    8ed0:	83 e7 07             	and    $0x7,%edi
    8ed3:	40 38 d7             	cmp    %dl,%dil
    8ed6:	0f 9d c2             	setge  %dl
    8ed9:	21 f2                	and    %esi,%edx
    8edb:	84 d2                	test   %dl,%dl
    8edd:	74 08                	je     8ee7 <jstring_to_lower_in_place+0xce>
    8edf:	48 89 c7             	mov    %rax,%rdi
    8ee2:	e8 a9 b2 ff ff       	call   4190 <__asan_report_load1@plt>
    8ee7:	0f b6 01             	movzbl (%rcx),%eax
    8eea:	3c 40                	cmp    $0x40,%al
    8eec:	0f 8e 90 00 00 00    	jle    8f82 <jstring_to_lower_in_place+0x169>
    8ef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ef6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8efa:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8efd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8f01:	48 89 c8             	mov    %rcx,%rax
    8f04:	48 89 c2             	mov    %rax,%rdx
    8f07:	48 c1 ea 03          	shr    $0x3,%rdx
    8f0b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8f12:	0f b6 12             	movzbl (%rdx),%edx
    8f15:	84 d2                	test   %dl,%dl
    8f17:	40 0f 95 c6          	setne  %sil
    8f1b:	48 89 c7             	mov    %rax,%rdi
    8f1e:	83 e7 07             	and    $0x7,%edi
    8f21:	40 38 d7             	cmp    %dl,%dil
    8f24:	0f 9d c2             	setge  %dl
    8f27:	21 f2                	and    %esi,%edx
    8f29:	84 d2                	test   %dl,%dl
    8f2b:	74 08                	je     8f35 <jstring_to_lower_in_place+0x11c>
    8f2d:	48 89 c7             	mov    %rax,%rdi
    8f30:	e8 5b b2 ff ff       	call   4190 <__asan_report_load1@plt>
    8f35:	0f b6 01             	movzbl (%rcx),%eax
    8f38:	8d 70 20             	lea    0x20(%rax),%esi
    8f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f3f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8f43:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8f46:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8f4a:	48 89 c8             	mov    %rcx,%rax
    8f4d:	48 89 c2             	mov    %rax,%rdx
    8f50:	48 c1 ea 03          	shr    $0x3,%rdx
    8f54:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    8f5b:	0f b6 12             	movzbl (%rdx),%edx
    8f5e:	84 d2                	test   %dl,%dl
    8f60:	40 0f 95 c7          	setne  %dil
    8f64:	49 89 c0             	mov    %rax,%r8
    8f67:	41 83 e0 07          	and    $0x7,%r8d
    8f6b:	41 38 d0             	cmp    %dl,%r8b
    8f6e:	0f 9d c2             	setge  %dl
    8f71:	21 fa                	and    %edi,%edx
    8f73:	84 d2                	test   %dl,%dl
    8f75:	74 08                	je     8f7f <jstring_to_lower_in_place+0x166>
    8f77:	48 89 c7             	mov    %rax,%rdi
    8f7a:	e8 31 b2 ff ff       	call   41b0 <__asan_report_store1@plt>
    8f7f:	40 88 31             	mov    %sil,(%rcx)
    8f82:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    8f86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f8a:	48 89 c2             	mov    %rax,%rdx
    8f8d:	48 89 d0             	mov    %rdx,%rax
    8f90:	48 c1 e8 03          	shr    $0x3,%rax
    8f94:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    8f9a:	0f b6 00             	movzbl (%rax),%eax
    8f9d:	84 c0                	test   %al,%al
    8f9f:	0f 95 c1             	setne  %cl
    8fa2:	3c 03                	cmp    $0x3,%al
    8fa4:	0f 9e c0             	setle  %al
    8fa7:	21 c8                	and    %ecx,%eax
    8fa9:	84 c0                	test   %al,%al
    8fab:	74 08                	je     8fb5 <jstring_to_lower_in_place+0x19c>
    8fad:	48 89 d7             	mov    %rdx,%rdi
    8fb0:	e8 3b b1 ff ff       	call   40f0 <__asan_report_load4@plt>
    8fb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fb9:	8b 00                	mov    (%rax),%eax
    8fbb:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    8fbe:	0f 82 6d fe ff ff    	jb     8e31 <jstring_to_lower_in_place+0x18>
    8fc4:	90                   	nop
    8fc5:	90                   	nop
    8fc6:	c9                   	leave
    8fc7:	c3                   	ret

0000000000008fc8 <jstring_to_upper_jstring>:
    8fc8:	55                   	push   %rbp
    8fc9:	48 89 e5             	mov    %rsp,%rbp
    8fcc:	41 54                	push   %r12
    8fce:	53                   	push   %rbx
    8fcf:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    8fd6:	48 89 f8             	mov    %rdi,%rax
    8fd9:	48 89 f1             	mov    %rsi,%rcx
    8fdc:	48 89 c0             	mov    %rax,%rax
    8fdf:	ba 00 00 00 00       	mov    $0x0,%edx
    8fe4:	48 89 ca             	mov    %rcx,%rdx
    8fe7:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    8fee:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    8ff5:	48 8d 9d 70 ff ff ff 	lea    -0x90(%rbp),%rbx
    8ffc:	49 89 dc             	mov    %rbx,%r12
    8fff:	83 3d 5a 22 01 00 00 	cmpl   $0x0,0x1225a(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    9006:	74 12                	je     901a <jstring_to_upper_jstring+0x52>
    9008:	bf 60 00 00 00       	mov    $0x60,%edi
    900d:	e8 ce b0 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    9012:	48 85 c0             	test   %rax,%rax
    9015:	74 03                	je     901a <jstring_to_upper_jstring+0x52>
    9017:	48 89 c3             	mov    %rax,%rbx
    901a:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    9021:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    9028:	48 8d 15 59 ab 00 00 	lea    0xab59(%rip),%rdx        # 13b88 <_IO_stdin_used+0xb88>
    902f:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    9033:	48 8d 15 8e ff ff ff 	lea    -0x72(%rip),%rdx        # 8fc8 <jstring_to_upper_jstring>
    903a:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    903e:	48 89 da             	mov    %rbx,%rdx
    9041:	48 c1 ea 03          	shr    $0x3,%rdx
    9045:	c7 82 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rdx)
    904c:	f1 f1 f1 
    904f:	c7 82 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rdx)
    9056:	00 f2 f2 
    9059:	c7 82 08 80 ff 7f 00 	movl   $0xf3f30000,0x7fff8008(%rdx)
    9060:	00 f3 f3 
    9063:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    906a:	00 00 
    906c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    9070:	31 c9                	xor    %ecx,%ecx
    9072:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    9079:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    9080:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    9084:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    9088:	48 8b 35 01 22 01 00 	mov    0x12201(%rip),%rsi        # 1b290 <jstring_temporary_memory_info+0x10>
    908f:	48 8b 0d f2 21 01 00 	mov    0x121f2(%rip),%rcx        # 1b288 <jstring_temporary_memory_info+0x8>
    9096:	48 01 f1             	add    %rsi,%rcx
    9099:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    90a0:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    90a4:	48 89 ce             	mov    %rcx,%rsi
    90a7:	48 89 f1             	mov    %rsi,%rcx
    90aa:	48 c1 e9 03          	shr    $0x3,%rcx
    90ae:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    90b5:	0f b6 09             	movzbl (%rcx),%ecx
    90b8:	84 c9                	test   %cl,%cl
    90ba:	40 0f 95 c7          	setne  %dil
    90be:	80 f9 03             	cmp    $0x3,%cl
    90c1:	0f 9e c1             	setle  %cl
    90c4:	21 f9                	and    %edi,%ecx
    90c6:	84 c9                	test   %cl,%cl
    90c8:	74 08                	je     90d2 <jstring_to_upper_jstring+0x10a>
    90ca:	48 89 f7             	mov    %rsi,%rdi
    90cd:	e8 1e b0 ff ff       	call   40f0 <__asan_report_load4@plt>
    90d2:	8b 48 c0             	mov    -0x40(%rax),%ecx
    90d5:	89 48 a0             	mov    %ecx,-0x60(%rax)
    90d8:	8b 48 a0             	mov    -0x60(%rax),%ecx
    90db:	83 c1 01             	add    $0x1,%ecx
    90de:	01 c9                	add    %ecx,%ecx
    90e0:	89 48 a4             	mov    %ecx,-0x5c(%rax)
    90e3:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
    90ea:	00 00 00 
    90ed:	e9 31 02 00 00       	jmp    9323 <jstring_to_upper_jstring+0x35b>
    90f2:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    90f6:	48 83 c1 08          	add    $0x8,%rcx
    90fa:	48 89 ce             	mov    %rcx,%rsi
    90fd:	48 c1 ee 03          	shr    $0x3,%rsi
    9101:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9108:	0f b6 36             	movzbl (%rsi),%esi
    910b:	40 84 f6             	test   %sil,%sil
    910e:	74 08                	je     9118 <jstring_to_upper_jstring+0x150>
    9110:	48 89 cf             	mov    %rcx,%rdi
    9113:	e8 a8 b0 ff ff       	call   41c0 <__asan_report_load8@plt>
    9118:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    911c:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    9122:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    9126:	48 89 f9             	mov    %rdi,%rcx
    9129:	48 89 ce             	mov    %rcx,%rsi
    912c:	48 c1 ee 03          	shr    $0x3,%rsi
    9130:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9137:	0f b6 36             	movzbl (%rsi),%esi
    913a:	40 84 f6             	test   %sil,%sil
    913d:	41 0f 95 c0          	setne  %r8b
    9141:	49 89 c9             	mov    %rcx,%r9
    9144:	41 83 e1 07          	and    $0x7,%r9d
    9148:	41 38 f1             	cmp    %sil,%r9b
    914b:	40 0f 9d c6          	setge  %sil
    914f:	44 21 c6             	and    %r8d,%esi
    9152:	40 84 f6             	test   %sil,%sil
    9155:	74 08                	je     915f <jstring_to_upper_jstring+0x197>
    9157:	48 89 cf             	mov    %rcx,%rdi
    915a:	e8 31 b0 ff ff       	call   4190 <__asan_report_load1@plt>
    915f:	0f b6 0f             	movzbl (%rdi),%ecx
    9162:	80 f9 7a             	cmp    $0x7a,%cl
    9165:	0f 8f f3 00 00 00    	jg     925e <jstring_to_upper_jstring+0x296>
    916b:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    916f:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    9175:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    9179:	48 89 f9             	mov    %rdi,%rcx
    917c:	48 89 ce             	mov    %rcx,%rsi
    917f:	48 c1 ee 03          	shr    $0x3,%rsi
    9183:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    918a:	0f b6 36             	movzbl (%rsi),%esi
    918d:	40 84 f6             	test   %sil,%sil
    9190:	41 0f 95 c0          	setne  %r8b
    9194:	49 89 c9             	mov    %rcx,%r9
    9197:	41 83 e1 07          	and    $0x7,%r9d
    919b:	41 38 f1             	cmp    %sil,%r9b
    919e:	40 0f 9d c6          	setge  %sil
    91a2:	44 21 c6             	and    %r8d,%esi
    91a5:	40 84 f6             	test   %sil,%sil
    91a8:	74 08                	je     91b2 <jstring_to_upper_jstring+0x1ea>
    91aa:	48 89 cf             	mov    %rcx,%rdi
    91ad:	e8 de af ff ff       	call   4190 <__asan_report_load1@plt>
    91b2:	0f b6 0f             	movzbl (%rdi),%ecx
    91b5:	80 f9 60             	cmp    $0x60,%cl
    91b8:	0f 8e a0 00 00 00    	jle    925e <jstring_to_upper_jstring+0x296>
    91be:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    91c2:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    91c8:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    91cc:	48 89 f9             	mov    %rdi,%rcx
    91cf:	48 89 ce             	mov    %rcx,%rsi
    91d2:	48 c1 ee 03          	shr    $0x3,%rsi
    91d6:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    91dd:	0f b6 36             	movzbl (%rsi),%esi
    91e0:	40 84 f6             	test   %sil,%sil
    91e3:	41 0f 95 c0          	setne  %r8b
    91e7:	49 89 c9             	mov    %rcx,%r9
    91ea:	41 83 e1 07          	and    $0x7,%r9d
    91ee:	41 38 f1             	cmp    %sil,%r9b
    91f1:	40 0f 9d c6          	setge  %sil
    91f5:	44 21 c6             	and    %r8d,%esi
    91f8:	40 84 f6             	test   %sil,%sil
    91fb:	74 08                	je     9205 <jstring_to_upper_jstring+0x23d>
    91fd:	48 89 cf             	mov    %rcx,%rdi
    9200:	e8 8b af ff ff       	call   4190 <__asan_report_load1@plt>
    9205:	0f b6 0f             	movzbl (%rdi),%ecx
    9208:	44 8d 41 e0          	lea    -0x20(%rcx),%r8d
    920c:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
    9212:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    9219:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    921d:	48 89 f9             	mov    %rdi,%rcx
    9220:	48 89 ce             	mov    %rcx,%rsi
    9223:	48 c1 ee 03          	shr    $0x3,%rsi
    9227:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    922e:	0f b6 36             	movzbl (%rsi),%esi
    9231:	40 84 f6             	test   %sil,%sil
    9234:	41 0f 95 c1          	setne  %r9b
    9238:	49 89 ca             	mov    %rcx,%r10
    923b:	41 83 e2 07          	and    $0x7,%r10d
    923f:	41 38 f2             	cmp    %sil,%r10b
    9242:	40 0f 9d c6          	setge  %sil
    9246:	44 21 ce             	and    %r9d,%esi
    9249:	40 84 f6             	test   %sil,%sil
    924c:	74 08                	je     9256 <jstring_to_upper_jstring+0x28e>
    924e:	48 89 cf             	mov    %rcx,%rdi
    9251:	e8 5a af ff ff       	call   41b0 <__asan_report_store1@plt>
    9256:	44 88 07             	mov    %r8b,(%rdi)
    9259:	e9 be 00 00 00       	jmp    931c <jstring_to_upper_jstring+0x354>
    925e:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    9262:	48 83 c1 08          	add    $0x8,%rcx
    9266:	48 89 ce             	mov    %rcx,%rsi
    9269:	48 c1 ee 03          	shr    $0x3,%rsi
    926d:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9274:	0f b6 36             	movzbl (%rsi),%esi
    9277:	40 84 f6             	test   %sil,%sil
    927a:	74 08                	je     9284 <jstring_to_upper_jstring+0x2bc>
    927c:	48 89 cf             	mov    %rcx,%rdi
    927f:	e8 3c af ff ff       	call   41c0 <__asan_report_load8@plt>
    9284:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    9288:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    928e:	4c 8d 04 0e          	lea    (%rsi,%rcx,1),%r8
    9292:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
    9298:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    929f:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    92a3:	4c 89 c1             	mov    %r8,%rcx
    92a6:	48 89 ce             	mov    %rcx,%rsi
    92a9:	48 c1 ee 03          	shr    $0x3,%rsi
    92ad:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    92b4:	0f b6 36             	movzbl (%rsi),%esi
    92b7:	40 84 f6             	test   %sil,%sil
    92ba:	41 0f 95 c1          	setne  %r9b
    92be:	49 89 ca             	mov    %rcx,%r10
    92c1:	41 83 e2 07          	and    $0x7,%r10d
    92c5:	41 38 f2             	cmp    %sil,%r10b
    92c8:	40 0f 9d c6          	setge  %sil
    92cc:	44 21 ce             	and    %r9d,%esi
    92cf:	40 84 f6             	test   %sil,%sil
    92d2:	74 08                	je     92dc <jstring_to_upper_jstring+0x314>
    92d4:	48 89 cf             	mov    %rcx,%rdi
    92d7:	e8 b4 ae ff ff       	call   4190 <__asan_report_load1@plt>
    92dc:	45 0f b6 00          	movzbl (%r8),%r8d
    92e0:	48 89 f9             	mov    %rdi,%rcx
    92e3:	48 89 ce             	mov    %rcx,%rsi
    92e6:	48 c1 ee 03          	shr    $0x3,%rsi
    92ea:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    92f1:	0f b6 36             	movzbl (%rsi),%esi
    92f4:	40 84 f6             	test   %sil,%sil
    92f7:	41 0f 95 c1          	setne  %r9b
    92fb:	49 89 ca             	mov    %rcx,%r10
    92fe:	41 83 e2 07          	and    $0x7,%r10d
    9302:	41 38 f2             	cmp    %sil,%r10b
    9305:	40 0f 9d c6          	setge  %sil
    9309:	44 21 ce             	and    %r9d,%esi
    930c:	40 84 f6             	test   %sil,%sil
    930f:	74 08                	je     9319 <jstring_to_upper_jstring+0x351>
    9311:	48 89 cf             	mov    %rcx,%rdi
    9314:	e8 97 ae ff ff       	call   41b0 <__asan_report_store1@plt>
    9319:	44 88 07             	mov    %r8b,(%rdi)
    931c:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    9323:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    9327:	48 89 ce             	mov    %rcx,%rsi
    932a:	48 89 f1             	mov    %rsi,%rcx
    932d:	48 c1 e9 03          	shr    $0x3,%rcx
    9331:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    9338:	0f b6 09             	movzbl (%rcx),%ecx
    933b:	84 c9                	test   %cl,%cl
    933d:	40 0f 95 c7          	setne  %dil
    9341:	80 f9 03             	cmp    $0x3,%cl
    9344:	0f 9e c1             	setle  %cl
    9347:	21 f9                	and    %edi,%ecx
    9349:	84 c9                	test   %cl,%cl
    934b:	74 08                	je     9355 <jstring_to_upper_jstring+0x38d>
    934d:	48 89 f7             	mov    %rsi,%rdi
    9350:	e8 9b ad ff ff       	call   40f0 <__asan_report_load4@plt>
    9355:	8b 48 c0             	mov    -0x40(%rax),%ecx
    9358:	3b 8d 64 ff ff ff    	cmp    -0x9c(%rbp),%ecx
    935e:	0f 83 8e fd ff ff    	jae    90f2 <jstring_to_upper_jstring+0x12a>
    9364:	48 8b 0d 1d 1f 01 00 	mov    0x11f1d(%rip),%rcx        # 1b288 <jstring_temporary_memory_info+0x8>
    936b:	8b 70 a4             	mov    -0x5c(%rax),%esi
    936e:	89 f6                	mov    %esi,%esi
    9370:	48 01 f1             	add    %rsi,%rcx
    9373:	48 89 0d 0e 1f 01 00 	mov    %rcx,0x11f0e(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    937a:	48 8b 70 a0          	mov    -0x60(%rax),%rsi
    937e:	48 8b 78 a8          	mov    -0x58(%rax),%rdi
    9382:	49 39 dc             	cmp    %rbx,%r12
    9385:	74 2b                	je     93b2 <jstring_to_upper_jstring+0x3ea>
    9387:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    938e:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    9395:	f5 f5 f5 
    9398:	48 89 82 00 80 ff 7f 	mov    %rax,0x7fff8000(%rdx)
    939f:	c7 82 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rdx)
    93a6:	f5 f5 f5 
    93a9:	48 8b 43 78          	mov    0x78(%rbx),%rax
    93ad:	c6 00 00             	movb   $0x0,(%rax)
    93b0:	eb 15                	jmp    93c7 <jstring_to_upper_jstring+0x3ff>
    93b2:	48 c7 82 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rdx)
    93b9:	00 00 00 00 
    93bd:	c7 82 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rdx)
    93c4:	00 00 00 
    93c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93cb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    93d2:	00 00 
    93d4:	74 05                	je     93db <jstring_to_upper_jstring+0x413>
    93d6:	e8 85 ad ff ff       	call   4160 <__stack_chk_fail@plt>
    93db:	48 89 f0             	mov    %rsi,%rax
    93de:	48 89 fa             	mov    %rdi,%rdx
    93e1:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    93e8:	5b                   	pop    %rbx
    93e9:	41 5c                	pop    %r12
    93eb:	5d                   	pop    %rbp
    93ec:	c3                   	ret

00000000000093ed <jstring_to_lower_jstring>:
    93ed:	55                   	push   %rbp
    93ee:	48 89 e5             	mov    %rsp,%rbp
    93f1:	41 54                	push   %r12
    93f3:	53                   	push   %rbx
    93f4:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    93fb:	48 89 f8             	mov    %rdi,%rax
    93fe:	48 89 f1             	mov    %rsi,%rcx
    9401:	48 89 c0             	mov    %rax,%rax
    9404:	ba 00 00 00 00       	mov    $0x0,%edx
    9409:	48 89 ca             	mov    %rcx,%rdx
    940c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    9413:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    941a:	48 8d 9d 70 ff ff ff 	lea    -0x90(%rbp),%rbx
    9421:	49 89 dc             	mov    %rbx,%r12
    9424:	83 3d 35 1e 01 00 00 	cmpl   $0x0,0x11e35(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    942b:	74 12                	je     943f <jstring_to_lower_jstring+0x52>
    942d:	bf 60 00 00 00       	mov    $0x60,%edi
    9432:	e8 a9 ac ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    9437:	48 85 c0             	test   %rax,%rax
    943a:	74 03                	je     943f <jstring_to_lower_jstring+0x52>
    943c:	48 89 c3             	mov    %rax,%rbx
    943f:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
    9446:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    944d:	48 8d 15 6c a7 00 00 	lea    0xa76c(%rip),%rdx        # 13bc0 <_IO_stdin_used+0xbc0>
    9454:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    9458:	48 8d 15 8e ff ff ff 	lea    -0x72(%rip),%rdx        # 93ed <jstring_to_lower_jstring>
    945f:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    9463:	48 89 da             	mov    %rbx,%rdx
    9466:	48 c1 ea 03          	shr    $0x3,%rdx
    946a:	c7 82 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rdx)
    9471:	f1 f1 f1 
    9474:	c7 82 04 80 ff 7f 00 	movl   $0xf2f20000,0x7fff8004(%rdx)
    947b:	00 f2 f2 
    947e:	c7 82 08 80 ff 7f 00 	movl   $0xf3f30000,0x7fff8008(%rdx)
    9485:	00 f3 f3 
    9488:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    948f:	00 00 
    9491:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    9495:	31 c9                	xor    %ecx,%ecx
    9497:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    949e:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    94a5:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    94a9:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    94ad:	48 8b 35 dc 1d 01 00 	mov    0x11ddc(%rip),%rsi        # 1b290 <jstring_temporary_memory_info+0x10>
    94b4:	48 8b 0d cd 1d 01 00 	mov    0x11dcd(%rip),%rcx        # 1b288 <jstring_temporary_memory_info+0x8>
    94bb:	48 01 f1             	add    %rsi,%rcx
    94be:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    94c5:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    94c9:	48 89 ce             	mov    %rcx,%rsi
    94cc:	48 89 f1             	mov    %rsi,%rcx
    94cf:	48 c1 e9 03          	shr    $0x3,%rcx
    94d3:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    94da:	0f b6 09             	movzbl (%rcx),%ecx
    94dd:	84 c9                	test   %cl,%cl
    94df:	40 0f 95 c7          	setne  %dil
    94e3:	80 f9 03             	cmp    $0x3,%cl
    94e6:	0f 9e c1             	setle  %cl
    94e9:	21 f9                	and    %edi,%ecx
    94eb:	84 c9                	test   %cl,%cl
    94ed:	74 08                	je     94f7 <jstring_to_lower_jstring+0x10a>
    94ef:	48 89 f7             	mov    %rsi,%rdi
    94f2:	e8 f9 ab ff ff       	call   40f0 <__asan_report_load4@plt>
    94f7:	8b 48 c0             	mov    -0x40(%rax),%ecx
    94fa:	89 48 a0             	mov    %ecx,-0x60(%rax)
    94fd:	8b 48 a0             	mov    -0x60(%rax),%ecx
    9500:	83 c1 01             	add    $0x1,%ecx
    9503:	01 c9                	add    %ecx,%ecx
    9505:	89 48 a4             	mov    %ecx,-0x5c(%rax)
    9508:	c7 85 64 ff ff ff 00 	movl   $0x0,-0x9c(%rbp)
    950f:	00 00 00 
    9512:	e9 31 02 00 00       	jmp    9748 <jstring_to_lower_jstring+0x35b>
    9517:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    951b:	48 83 c1 08          	add    $0x8,%rcx
    951f:	48 89 ce             	mov    %rcx,%rsi
    9522:	48 c1 ee 03          	shr    $0x3,%rsi
    9526:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    952d:	0f b6 36             	movzbl (%rsi),%esi
    9530:	40 84 f6             	test   %sil,%sil
    9533:	74 08                	je     953d <jstring_to_lower_jstring+0x150>
    9535:	48 89 cf             	mov    %rcx,%rdi
    9538:	e8 83 ac ff ff       	call   41c0 <__asan_report_load8@plt>
    953d:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    9541:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    9547:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    954b:	48 89 f9             	mov    %rdi,%rcx
    954e:	48 89 ce             	mov    %rcx,%rsi
    9551:	48 c1 ee 03          	shr    $0x3,%rsi
    9555:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    955c:	0f b6 36             	movzbl (%rsi),%esi
    955f:	40 84 f6             	test   %sil,%sil
    9562:	41 0f 95 c0          	setne  %r8b
    9566:	49 89 c9             	mov    %rcx,%r9
    9569:	41 83 e1 07          	and    $0x7,%r9d
    956d:	41 38 f1             	cmp    %sil,%r9b
    9570:	40 0f 9d c6          	setge  %sil
    9574:	44 21 c6             	and    %r8d,%esi
    9577:	40 84 f6             	test   %sil,%sil
    957a:	74 08                	je     9584 <jstring_to_lower_jstring+0x197>
    957c:	48 89 cf             	mov    %rcx,%rdi
    957f:	e8 0c ac ff ff       	call   4190 <__asan_report_load1@plt>
    9584:	0f b6 0f             	movzbl (%rdi),%ecx
    9587:	80 f9 5a             	cmp    $0x5a,%cl
    958a:	0f 8f f3 00 00 00    	jg     9683 <jstring_to_lower_jstring+0x296>
    9590:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    9594:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    959a:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    959e:	48 89 f9             	mov    %rdi,%rcx
    95a1:	48 89 ce             	mov    %rcx,%rsi
    95a4:	48 c1 ee 03          	shr    $0x3,%rsi
    95a8:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    95af:	0f b6 36             	movzbl (%rsi),%esi
    95b2:	40 84 f6             	test   %sil,%sil
    95b5:	41 0f 95 c0          	setne  %r8b
    95b9:	49 89 c9             	mov    %rcx,%r9
    95bc:	41 83 e1 07          	and    $0x7,%r9d
    95c0:	41 38 f1             	cmp    %sil,%r9b
    95c3:	40 0f 9d c6          	setge  %sil
    95c7:	44 21 c6             	and    %r8d,%esi
    95ca:	40 84 f6             	test   %sil,%sil
    95cd:	74 08                	je     95d7 <jstring_to_lower_jstring+0x1ea>
    95cf:	48 89 cf             	mov    %rcx,%rdi
    95d2:	e8 b9 ab ff ff       	call   4190 <__asan_report_load1@plt>
    95d7:	0f b6 0f             	movzbl (%rdi),%ecx
    95da:	80 f9 40             	cmp    $0x40,%cl
    95dd:	0f 8e a0 00 00 00    	jle    9683 <jstring_to_lower_jstring+0x296>
    95e3:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    95e7:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    95ed:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    95f1:	48 89 f9             	mov    %rdi,%rcx
    95f4:	48 89 ce             	mov    %rcx,%rsi
    95f7:	48 c1 ee 03          	shr    $0x3,%rsi
    95fb:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9602:	0f b6 36             	movzbl (%rsi),%esi
    9605:	40 84 f6             	test   %sil,%sil
    9608:	41 0f 95 c0          	setne  %r8b
    960c:	49 89 c9             	mov    %rcx,%r9
    960f:	41 83 e1 07          	and    $0x7,%r9d
    9613:	41 38 f1             	cmp    %sil,%r9b
    9616:	40 0f 9d c6          	setge  %sil
    961a:	44 21 c6             	and    %r8d,%esi
    961d:	40 84 f6             	test   %sil,%sil
    9620:	74 08                	je     962a <jstring_to_lower_jstring+0x23d>
    9622:	48 89 cf             	mov    %rcx,%rdi
    9625:	e8 66 ab ff ff       	call   4190 <__asan_report_load1@plt>
    962a:	0f b6 0f             	movzbl (%rdi),%ecx
    962d:	44 8d 41 20          	lea    0x20(%rcx),%r8d
    9631:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
    9637:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    963e:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    9642:	48 89 f9             	mov    %rdi,%rcx
    9645:	48 89 ce             	mov    %rcx,%rsi
    9648:	48 c1 ee 03          	shr    $0x3,%rsi
    964c:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9653:	0f b6 36             	movzbl (%rsi),%esi
    9656:	40 84 f6             	test   %sil,%sil
    9659:	41 0f 95 c1          	setne  %r9b
    965d:	49 89 ca             	mov    %rcx,%r10
    9660:	41 83 e2 07          	and    $0x7,%r10d
    9664:	41 38 f2             	cmp    %sil,%r10b
    9667:	40 0f 9d c6          	setge  %sil
    966b:	44 21 ce             	and    %r9d,%esi
    966e:	40 84 f6             	test   %sil,%sil
    9671:	74 08                	je     967b <jstring_to_lower_jstring+0x28e>
    9673:	48 89 cf             	mov    %rcx,%rdi
    9676:	e8 35 ab ff ff       	call   41b0 <__asan_report_store1@plt>
    967b:	44 88 07             	mov    %r8b,(%rdi)
    967e:	e9 be 00 00 00       	jmp    9741 <jstring_to_lower_jstring+0x354>
    9683:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    9687:	48 83 c1 08          	add    $0x8,%rcx
    968b:	48 89 ce             	mov    %rcx,%rsi
    968e:	48 c1 ee 03          	shr    $0x3,%rsi
    9692:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9699:	0f b6 36             	movzbl (%rsi),%esi
    969c:	40 84 f6             	test   %sil,%sil
    969f:	74 08                	je     96a9 <jstring_to_lower_jstring+0x2bc>
    96a1:	48 89 cf             	mov    %rcx,%rdi
    96a4:	e8 17 ab ff ff       	call   41c0 <__asan_report_load8@plt>
    96a9:	48 8b 70 c8          	mov    -0x38(%rax),%rsi
    96ad:	8b 8d 64 ff ff ff    	mov    -0x9c(%rbp),%ecx
    96b3:	4c 8d 04 0e          	lea    (%rsi,%rcx,1),%r8
    96b7:	8b b5 64 ff ff ff    	mov    -0x9c(%rbp),%esi
    96bd:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    96c4:	48 8d 3c 0e          	lea    (%rsi,%rcx,1),%rdi
    96c8:	4c 89 c1             	mov    %r8,%rcx
    96cb:	48 89 ce             	mov    %rcx,%rsi
    96ce:	48 c1 ee 03          	shr    $0x3,%rsi
    96d2:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    96d9:	0f b6 36             	movzbl (%rsi),%esi
    96dc:	40 84 f6             	test   %sil,%sil
    96df:	41 0f 95 c1          	setne  %r9b
    96e3:	49 89 ca             	mov    %rcx,%r10
    96e6:	41 83 e2 07          	and    $0x7,%r10d
    96ea:	41 38 f2             	cmp    %sil,%r10b
    96ed:	40 0f 9d c6          	setge  %sil
    96f1:	44 21 ce             	and    %r9d,%esi
    96f4:	40 84 f6             	test   %sil,%sil
    96f7:	74 08                	je     9701 <jstring_to_lower_jstring+0x314>
    96f9:	48 89 cf             	mov    %rcx,%rdi
    96fc:	e8 8f aa ff ff       	call   4190 <__asan_report_load1@plt>
    9701:	45 0f b6 00          	movzbl (%r8),%r8d
    9705:	48 89 f9             	mov    %rdi,%rcx
    9708:	48 89 ce             	mov    %rcx,%rsi
    970b:	48 c1 ee 03          	shr    $0x3,%rsi
    970f:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    9716:	0f b6 36             	movzbl (%rsi),%esi
    9719:	40 84 f6             	test   %sil,%sil
    971c:	41 0f 95 c1          	setne  %r9b
    9720:	49 89 ca             	mov    %rcx,%r10
    9723:	41 83 e2 07          	and    $0x7,%r10d
    9727:	41 38 f2             	cmp    %sil,%r10b
    972a:	40 0f 9d c6          	setge  %sil
    972e:	44 21 ce             	and    %r9d,%esi
    9731:	40 84 f6             	test   %sil,%sil
    9734:	74 08                	je     973e <jstring_to_lower_jstring+0x351>
    9736:	48 89 cf             	mov    %rcx,%rdi
    9739:	e8 72 aa ff ff       	call   41b0 <__asan_report_store1@plt>
    973e:	44 88 07             	mov    %r8b,(%rdi)
    9741:	83 85 64 ff ff ff 01 	addl   $0x1,-0x9c(%rbp)
    9748:	48 8d 48 c0          	lea    -0x40(%rax),%rcx
    974c:	48 89 ce             	mov    %rcx,%rsi
    974f:	48 89 f1             	mov    %rsi,%rcx
    9752:	48 c1 e9 03          	shr    $0x3,%rcx
    9756:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    975d:	0f b6 09             	movzbl (%rcx),%ecx
    9760:	84 c9                	test   %cl,%cl
    9762:	40 0f 95 c7          	setne  %dil
    9766:	80 f9 03             	cmp    $0x3,%cl
    9769:	0f 9e c1             	setle  %cl
    976c:	21 f9                	and    %edi,%ecx
    976e:	84 c9                	test   %cl,%cl
    9770:	74 08                	je     977a <jstring_to_lower_jstring+0x38d>
    9772:	48 89 f7             	mov    %rsi,%rdi
    9775:	e8 76 a9 ff ff       	call   40f0 <__asan_report_load4@plt>
    977a:	8b 48 c0             	mov    -0x40(%rax),%ecx
    977d:	3b 8d 64 ff ff ff    	cmp    -0x9c(%rbp),%ecx
    9783:	0f 83 8e fd ff ff    	jae    9517 <jstring_to_lower_jstring+0x12a>
    9789:	48 8b 0d f8 1a 01 00 	mov    0x11af8(%rip),%rcx        # 1b288 <jstring_temporary_memory_info+0x8>
    9790:	8b 70 a4             	mov    -0x5c(%rax),%esi
    9793:	89 f6                	mov    %esi,%esi
    9795:	48 01 f1             	add    %rsi,%rcx
    9798:	48 89 0d e9 1a 01 00 	mov    %rcx,0x11ae9(%rip)        # 1b288 <jstring_temporary_memory_info+0x8>
    979f:	48 8b 70 a0          	mov    -0x60(%rax),%rsi
    97a3:	48 8b 78 a8          	mov    -0x58(%rax),%rdi
    97a7:	49 39 dc             	cmp    %rbx,%r12
    97aa:	74 2b                	je     97d7 <jstring_to_lower_jstring+0x3ea>
    97ac:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    97b3:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    97ba:	f5 f5 f5 
    97bd:	48 89 82 00 80 ff 7f 	mov    %rax,0x7fff8000(%rdx)
    97c4:	c7 82 08 80 ff 7f f5 	movl   $0xf5f5f5f5,0x7fff8008(%rdx)
    97cb:	f5 f5 f5 
    97ce:	48 8b 43 78          	mov    0x78(%rbx),%rax
    97d2:	c6 00 00             	movb   $0x0,(%rax)
    97d5:	eb 15                	jmp    97ec <jstring_to_lower_jstring+0x3ff>
    97d7:	48 c7 82 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rdx)
    97de:	00 00 00 00 
    97e2:	c7 82 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rdx)
    97e9:	00 00 00 
    97ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97f0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    97f7:	00 00 
    97f9:	74 05                	je     9800 <jstring_to_lower_jstring+0x413>
    97fb:	e8 60 a9 ff ff       	call   4160 <__stack_chk_fail@plt>
    9800:	48 89 f0             	mov    %rsi,%rax
    9803:	48 89 fa             	mov    %rdi,%rdx
    9806:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    980d:	5b                   	pop    %rbx
    980e:	41 5c                	pop    %r12
    9810:	5d                   	pop    %rbp
    9811:	c3                   	ret

0000000000009812 <copy_temporary_memory_chars>:
    9812:	55                   	push   %rbp
    9813:	48 89 e5             	mov    %rsp,%rbp
    9816:	48 83 ec 30          	sub    $0x30,%rsp
    981a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    981e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9822:	89 55 dc             	mov    %edx,-0x24(%rbp)
    9825:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    982a:	0f 8e b4 00 00 00    	jle    98e4 <copy_temporary_memory_chars+0xd2>
    9830:	8b 45 dc             	mov    -0x24(%rbp),%eax
    9833:	83 e8 01             	sub    $0x1,%eax
    9836:	89 45 fc             	mov    %eax,-0x4(%rbp)
    9839:	e9 97 00 00 00       	jmp    98d5 <copy_temporary_memory_chars+0xc3>
    983e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    9841:	48 63 d0             	movslq %eax,%rdx
    9844:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9848:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    984c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    984f:	48 63 d0             	movslq %eax,%rdx
    9852:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9856:	48 01 c2             	add    %rax,%rdx
    9859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    985d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9861:	48 89 f0             	mov    %rsi,%rax
    9864:	48 89 c2             	mov    %rax,%rdx
    9867:	48 c1 ea 03          	shr    $0x3,%rdx
    986b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9872:	0f b6 12             	movzbl (%rdx),%edx
    9875:	84 d2                	test   %dl,%dl
    9877:	40 0f 95 c7          	setne  %dil
    987b:	49 89 c0             	mov    %rax,%r8
    987e:	41 83 e0 07          	and    $0x7,%r8d
    9882:	41 38 d0             	cmp    %dl,%r8b
    9885:	0f 9d c2             	setge  %dl
    9888:	21 fa                	and    %edi,%edx
    988a:	84 d2                	test   %dl,%dl
    988c:	74 08                	je     9896 <copy_temporary_memory_chars+0x84>
    988e:	48 89 c7             	mov    %rax,%rdi
    9891:	e8 fa a8 ff ff       	call   4190 <__asan_report_load1@plt>
    9896:	0f b6 36             	movzbl (%rsi),%esi
    9899:	48 89 c8             	mov    %rcx,%rax
    989c:	48 89 c2             	mov    %rax,%rdx
    989f:	48 c1 ea 03          	shr    $0x3,%rdx
    98a3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    98aa:	0f b6 12             	movzbl (%rdx),%edx
    98ad:	84 d2                	test   %dl,%dl
    98af:	40 0f 95 c7          	setne  %dil
    98b3:	49 89 c0             	mov    %rax,%r8
    98b6:	41 83 e0 07          	and    $0x7,%r8d
    98ba:	41 38 d0             	cmp    %dl,%r8b
    98bd:	0f 9d c2             	setge  %dl
    98c0:	21 fa                	and    %edi,%edx
    98c2:	84 d2                	test   %dl,%dl
    98c4:	74 08                	je     98ce <copy_temporary_memory_chars+0xbc>
    98c6:	48 89 c7             	mov    %rax,%rdi
    98c9:	e8 e2 a8 ff ff       	call   41b0 <__asan_report_store1@plt>
    98ce:	40 88 31             	mov    %sil,(%rcx)
    98d1:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    98d5:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    98d9:	0f 89 5f ff ff ff    	jns    983e <copy_temporary_memory_chars+0x2c>
    98df:	e9 af 00 00 00       	jmp    9993 <copy_temporary_memory_chars+0x181>
    98e4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    98eb:	e9 97 00 00 00       	jmp    9987 <copy_temporary_memory_chars+0x175>
    98f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    98f3:	48 63 d0             	movslq %eax,%rdx
    98f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98fa:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    98fe:	8b 45 fc             	mov    -0x4(%rbp),%eax
    9901:	48 63 d0             	movslq %eax,%rdx
    9904:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9908:	48 01 c2             	add    %rax,%rdx
    990b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    990f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9913:	48 89 f0             	mov    %rsi,%rax
    9916:	48 89 c2             	mov    %rax,%rdx
    9919:	48 c1 ea 03          	shr    $0x3,%rdx
    991d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9924:	0f b6 12             	movzbl (%rdx),%edx
    9927:	84 d2                	test   %dl,%dl
    9929:	40 0f 95 c7          	setne  %dil
    992d:	49 89 c0             	mov    %rax,%r8
    9930:	41 83 e0 07          	and    $0x7,%r8d
    9934:	41 38 d0             	cmp    %dl,%r8b
    9937:	0f 9d c2             	setge  %dl
    993a:	21 fa                	and    %edi,%edx
    993c:	84 d2                	test   %dl,%dl
    993e:	74 08                	je     9948 <copy_temporary_memory_chars+0x136>
    9940:	48 89 c7             	mov    %rax,%rdi
    9943:	e8 48 a8 ff ff       	call   4190 <__asan_report_load1@plt>
    9948:	0f b6 36             	movzbl (%rsi),%esi
    994b:	48 89 c8             	mov    %rcx,%rax
    994e:	48 89 c2             	mov    %rax,%rdx
    9951:	48 c1 ea 03          	shr    $0x3,%rdx
    9955:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    995c:	0f b6 12             	movzbl (%rdx),%edx
    995f:	84 d2                	test   %dl,%dl
    9961:	40 0f 95 c7          	setne  %dil
    9965:	49 89 c0             	mov    %rax,%r8
    9968:	41 83 e0 07          	and    $0x7,%r8d
    996c:	41 38 d0             	cmp    %dl,%r8b
    996f:	0f 9d c2             	setge  %dl
    9972:	21 fa                	and    %edi,%edx
    9974:	84 d2                	test   %dl,%dl
    9976:	74 08                	je     9980 <copy_temporary_memory_chars+0x16e>
    9978:	48 89 c7             	mov    %rax,%rdi
    997b:	e8 30 a8 ff ff       	call   41b0 <__asan_report_store1@plt>
    9980:	40 88 31             	mov    %sil,(%rcx)
    9983:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    9987:	8b 45 fc             	mov    -0x4(%rbp),%eax
    998a:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    998d:	0f 8c 5d ff ff ff    	jl     98f0 <copy_temporary_memory_chars+0xde>
    9993:	b8 01 00 00 00       	mov    $0x1,%eax
    9998:	c9                   	leave
    9999:	c3                   	ret

000000000000999a <jstring_insert_chars_at>:
    999a:	55                   	push   %rbp
    999b:	48 89 e5             	mov    %rsp,%rbp
    999e:	48 83 ec 40          	sub    $0x40,%rsp
    99a2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    99a6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    99aa:	89 55 cc             	mov    %edx,-0x34(%rbp)
    99ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99b1:	48 89 c2             	mov    %rax,%rdx
    99b4:	48 89 d0             	mov    %rdx,%rax
    99b7:	48 c1 e8 03          	shr    $0x3,%rax
    99bb:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    99c1:	0f b6 00             	movzbl (%rax),%eax
    99c4:	84 c0                	test   %al,%al
    99c6:	0f 95 c1             	setne  %cl
    99c9:	3c 03                	cmp    $0x3,%al
    99cb:	0f 9e c0             	setle  %al
    99ce:	21 c8                	and    %ecx,%eax
    99d0:	84 c0                	test   %al,%al
    99d2:	74 08                	je     99dc <jstring_insert_chars_at+0x42>
    99d4:	48 89 d7             	mov    %rdx,%rdi
    99d7:	e8 14 a7 ff ff       	call   40f0 <__asan_report_load4@plt>
    99dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99e0:	8b 00                	mov    (%rax),%eax
    99e2:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    99e5:	73 75                	jae    9a5c <jstring_insert_chars_at+0xc2>
    99e7:	4c 8b 05 52 f7 00 00 	mov    0xf752(%rip),%r8        # 19140 <jstring_log>
    99ee:	48 8d 15 ab 9b 00 00 	lea    0x9bab(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    99f5:	48 8d 35 24 9d 00 00 	lea    0x9d24(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    99fc:	48 8d 05 1d 9c 00 00 	lea    0x9c1d(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    9a03:	b9 18 04 00 00       	mov    $0x418,%ecx
    9a08:	48 89 c7             	mov    %rax,%rdi
    9a0b:	b8 00 00 00 00       	mov    $0x0,%eax
    9a10:	41 ff d0             	call   *%r8
    9a13:	b9 00 00 00 00       	mov    $0x0,%ecx
    9a18:	48 89 c8             	mov    %rcx,%rax
    9a1b:	48 89 c2             	mov    %rax,%rdx
    9a1e:	48 c1 ea 03          	shr    $0x3,%rdx
    9a22:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9a29:	0f b6 12             	movzbl (%rdx),%edx
    9a2c:	84 d2                	test   %dl,%dl
    9a2e:	40 0f 95 c6          	setne  %sil
    9a32:	48 89 c7             	mov    %rax,%rdi
    9a35:	83 e7 07             	and    $0x7,%edi
    9a38:	40 38 d7             	cmp    %dl,%dil
    9a3b:	0f 9d c2             	setge  %dl
    9a3e:	21 f2                	and    %esi,%edx
    9a40:	84 d2                	test   %dl,%dl
    9a42:	74 08                	je     9a4c <jstring_insert_chars_at+0xb2>
    9a44:	48 89 c7             	mov    %rax,%rdi
    9a47:	e8 44 a7 ff ff       	call   4190 <__asan_report_load1@plt>
    9a4c:	0f b6 01             	movzbl (%rcx),%eax
    9a4f:	88 45 e7             	mov    %al,-0x19(%rbp)
    9a52:	b8 00 00 00 00       	mov    $0x0,%eax
    9a57:	e9 e6 05 00 00       	jmp    a042 <jstring_insert_chars_at+0x6a8>
    9a5c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9a60:	48 89 c7             	mov    %rax,%rdi
    9a63:	e8 c3 b0 ff ff       	call   4b2b <jstring_length>
    9a68:	89 45 f0             	mov    %eax,-0x10(%rbp)
    9a6b:	8b 05 27 18 01 00    	mov    0x11827(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    9a71:	85 c0                	test   %eax,%eax
    9a73:	75 75                	jne    9aea <jstring_insert_chars_at+0x150>
    9a75:	4c 8b 05 c4 f6 00 00 	mov    0xf6c4(%rip),%r8        # 19140 <jstring_log>
    9a7c:	48 8d 15 1d 9b 00 00 	lea    0x9b1d(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    9a83:	48 8d 35 96 9c 00 00 	lea    0x9c96(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    9a8a:	48 8d 05 8f 9b 00 00 	lea    0x9b8f(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    9a91:	b9 1f 04 00 00       	mov    $0x41f,%ecx
    9a96:	48 89 c7             	mov    %rax,%rdi
    9a99:	b8 00 00 00 00       	mov    $0x0,%eax
    9a9e:	41 ff d0             	call   *%r8
    9aa1:	b9 00 00 00 00       	mov    $0x0,%ecx
    9aa6:	48 89 c8             	mov    %rcx,%rax
    9aa9:	48 89 c2             	mov    %rax,%rdx
    9aac:	48 c1 ea 03          	shr    $0x3,%rdx
    9ab0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9ab7:	0f b6 12             	movzbl (%rdx),%edx
    9aba:	84 d2                	test   %dl,%dl
    9abc:	40 0f 95 c6          	setne  %sil
    9ac0:	48 89 c7             	mov    %rax,%rdi
    9ac3:	83 e7 07             	and    $0x7,%edi
    9ac6:	40 38 d7             	cmp    %dl,%dil
    9ac9:	0f 9d c2             	setge  %dl
    9acc:	21 f2                	and    %esi,%edx
    9ace:	84 d2                	test   %dl,%dl
    9ad0:	74 08                	je     9ada <jstring_insert_chars_at+0x140>
    9ad2:	48 89 c7             	mov    %rax,%rdi
    9ad5:	e8 b6 a6 ff ff       	call   4190 <__asan_report_load1@plt>
    9ada:	0f b6 01             	movzbl (%rcx),%eax
    9add:	88 45 e6             	mov    %al,-0x1a(%rbp)
    9ae0:	b8 00 00 00 00       	mov    $0x0,%eax
    9ae5:	e9 58 05 00 00       	jmp    a042 <jstring_insert_chars_at+0x6a8>
    9aea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9aee:	48 83 c0 04          	add    $0x4,%rax
    9af2:	48 89 c2             	mov    %rax,%rdx
    9af5:	48 c1 ea 03          	shr    $0x3,%rdx
    9af9:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9b00:	0f b6 12             	movzbl (%rdx),%edx
    9b03:	84 d2                	test   %dl,%dl
    9b05:	40 0f 95 c6          	setne  %sil
    9b09:	48 89 c1             	mov    %rax,%rcx
    9b0c:	83 e1 07             	and    $0x7,%ecx
    9b0f:	83 c1 03             	add    $0x3,%ecx
    9b12:	38 d1                	cmp    %dl,%cl
    9b14:	0f 9d c2             	setge  %dl
    9b17:	21 f2                	and    %esi,%edx
    9b19:	84 d2                	test   %dl,%dl
    9b1b:	74 08                	je     9b25 <jstring_insert_chars_at+0x18b>
    9b1d:	48 89 c7             	mov    %rax,%rdi
    9b20:	e8 cb a5 ff ff       	call   40f0 <__asan_report_load4@plt>
    9b25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b29:	8b 48 04             	mov    0x4(%rax),%ecx
    9b2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b30:	48 89 c2             	mov    %rax,%rdx
    9b33:	48 89 d0             	mov    %rdx,%rax
    9b36:	48 c1 e8 03          	shr    $0x3,%rax
    9b3a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    9b40:	0f b6 00             	movzbl (%rax),%eax
    9b43:	84 c0                	test   %al,%al
    9b45:	40 0f 95 c6          	setne  %sil
    9b49:	3c 03                	cmp    $0x3,%al
    9b4b:	0f 9e c0             	setle  %al
    9b4e:	21 f0                	and    %esi,%eax
    9b50:	84 c0                	test   %al,%al
    9b52:	74 08                	je     9b5c <jstring_insert_chars_at+0x1c2>
    9b54:	48 89 d7             	mov    %rdx,%rdi
    9b57:	e8 94 a5 ff ff       	call   40f0 <__asan_report_load4@plt>
    9b5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b60:	8b 00                	mov    (%rax),%eax
    9b62:	29 c1                	sub    %eax,%ecx
    9b64:	89 ca                	mov    %ecx,%edx
    9b66:	39 55 f0             	cmp    %edx,-0x10(%rbp)
    9b69:	0f 83 68 01 00 00    	jae    9cd7 <jstring_insert_chars_at+0x33d>
    9b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b73:	8b 00                	mov    (%rax),%eax
    9b75:	2b 45 cc             	sub    -0x34(%rbp),%eax
    9b78:	83 c0 01             	add    $0x1,%eax
    9b7b:	89 c6                	mov    %eax,%esi
    9b7d:	8b 45 f0             	mov    -0x10(%rbp),%eax
    9b80:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9b84:	48 83 c2 08          	add    $0x8,%rdx
    9b88:	48 89 d1             	mov    %rdx,%rcx
    9b8b:	48 c1 e9 03          	shr    $0x3,%rcx
    9b8f:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    9b96:	0f b6 09             	movzbl (%rcx),%ecx
    9b99:	84 c9                	test   %cl,%cl
    9b9b:	74 08                	je     9ba5 <jstring_insert_chars_at+0x20b>
    9b9d:	48 89 d7             	mov    %rdx,%rdi
    9ba0:	e8 1b a6 ff ff       	call   41c0 <__asan_report_load8@plt>
    9ba5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9ba9:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    9bad:	8b 55 cc             	mov    -0x34(%rbp),%edx
    9bb0:	48 01 d1             	add    %rdx,%rcx
    9bb3:	89 f2                	mov    %esi,%edx
    9bb5:	48 89 c6             	mov    %rax,%rsi
    9bb8:	48 89 cf             	mov    %rcx,%rdi
    9bbb:	e8 52 fc ff ff       	call   9812 <copy_temporary_memory_chars>
    9bc0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    9bc7:	e9 ba 00 00 00       	jmp    9c86 <jstring_insert_chars_at+0x2ec>
    9bcc:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9bcf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9bd3:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9bd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9bdb:	48 83 c0 08          	add    $0x8,%rax
    9bdf:	48 89 c2             	mov    %rax,%rdx
    9be2:	48 c1 ea 03          	shr    $0x3,%rdx
    9be6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9bed:	0f b6 12             	movzbl (%rdx),%edx
    9bf0:	84 d2                	test   %dl,%dl
    9bf2:	74 08                	je     9bfc <jstring_insert_chars_at+0x262>
    9bf4:	48 89 c7             	mov    %rax,%rdi
    9bf7:	e8 c4 a5 ff ff       	call   41c0 <__asan_report_load8@plt>
    9bfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c00:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c04:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    9c07:	8b 55 e8             	mov    -0x18(%rbp),%edx
    9c0a:	01 ca                	add    %ecx,%edx
    9c0c:	89 d2                	mov    %edx,%edx
    9c0e:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    9c12:	48 89 f0             	mov    %rsi,%rax
    9c15:	48 89 c2             	mov    %rax,%rdx
    9c18:	48 c1 ea 03          	shr    $0x3,%rdx
    9c1c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9c23:	0f b6 12             	movzbl (%rdx),%edx
    9c26:	84 d2                	test   %dl,%dl
    9c28:	40 0f 95 c7          	setne  %dil
    9c2c:	49 89 c0             	mov    %rax,%r8
    9c2f:	41 83 e0 07          	and    $0x7,%r8d
    9c33:	41 38 d0             	cmp    %dl,%r8b
    9c36:	0f 9d c2             	setge  %dl
    9c39:	21 fa                	and    %edi,%edx
    9c3b:	84 d2                	test   %dl,%dl
    9c3d:	74 08                	je     9c47 <jstring_insert_chars_at+0x2ad>
    9c3f:	48 89 c7             	mov    %rax,%rdi
    9c42:	e8 49 a5 ff ff       	call   4190 <__asan_report_load1@plt>
    9c47:	0f b6 36             	movzbl (%rsi),%esi
    9c4a:	48 89 c8             	mov    %rcx,%rax
    9c4d:	48 89 c2             	mov    %rax,%rdx
    9c50:	48 c1 ea 03          	shr    $0x3,%rdx
    9c54:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9c5b:	0f b6 12             	movzbl (%rdx),%edx
    9c5e:	84 d2                	test   %dl,%dl
    9c60:	40 0f 95 c7          	setne  %dil
    9c64:	49 89 c0             	mov    %rax,%r8
    9c67:	41 83 e0 07          	and    $0x7,%r8d
    9c6b:	41 38 d0             	cmp    %dl,%r8b
    9c6e:	0f 9d c2             	setge  %dl
    9c71:	21 fa                	and    %edi,%edx
    9c73:	84 d2                	test   %dl,%dl
    9c75:	74 08                	je     9c7f <jstring_insert_chars_at+0x2e5>
    9c77:	48 89 c7             	mov    %rax,%rdi
    9c7a:	e8 31 a5 ff ff       	call   41b0 <__asan_report_store1@plt>
    9c7f:	40 88 31             	mov    %sil,(%rcx)
    9c82:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    9c86:	8b 45 e8             	mov    -0x18(%rbp),%eax
    9c89:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    9c8c:	0f 82 3a ff ff ff    	jb     9bcc <jstring_insert_chars_at+0x232>
    9c92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c96:	48 89 c2             	mov    %rax,%rdx
    9c99:	48 89 d0             	mov    %rdx,%rax
    9c9c:	48 c1 e8 03          	shr    $0x3,%rax
    9ca0:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    9ca6:	0f b6 00             	movzbl (%rax),%eax
    9ca9:	84 c0                	test   %al,%al
    9cab:	0f 95 c1             	setne  %cl
    9cae:	3c 03                	cmp    $0x3,%al
    9cb0:	0f 9e c0             	setle  %al
    9cb3:	21 c8                	and    %ecx,%eax
    9cb5:	84 c0                	test   %al,%al
    9cb7:	74 08                	je     9cc1 <jstring_insert_chars_at+0x327>
    9cb9:	48 89 d7             	mov    %rdx,%rdi
    9cbc:	e8 2f a4 ff ff       	call   40f0 <__asan_report_load4@plt>
    9cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cc5:	8b 10                	mov    (%rax),%edx
    9cc7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    9cca:	01 c2                	add    %eax,%edx
    9ccc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cd0:	89 10                	mov    %edx,(%rax)
    9cd2:	e9 66 03 00 00       	jmp    a03d <jstring_insert_chars_at+0x6a3>
    9cd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cdb:	48 89 c2             	mov    %rax,%rdx
    9cde:	48 89 d0             	mov    %rdx,%rax
    9ce1:	48 c1 e8 03          	shr    $0x3,%rax
    9ce5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    9ceb:	0f b6 00             	movzbl (%rax),%eax
    9cee:	84 c0                	test   %al,%al
    9cf0:	0f 95 c1             	setne  %cl
    9cf3:	3c 03                	cmp    $0x3,%al
    9cf5:	0f 9e c0             	setle  %al
    9cf8:	21 c8                	and    %ecx,%eax
    9cfa:	84 c0                	test   %al,%al
    9cfc:	74 08                	je     9d06 <jstring_insert_chars_at+0x36c>
    9cfe:	48 89 d7             	mov    %rdx,%rdi
    9d01:	e8 ea a3 ff ff       	call   40f0 <__asan_report_load4@plt>
    9d06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d0a:	8b 10                	mov    (%rax),%edx
    9d0c:	8b 45 f0             	mov    -0x10(%rbp),%eax
    9d0f:	01 d0                	add    %edx,%eax
    9d11:	89 45 f4             	mov    %eax,-0xc(%rbp)
    9d14:	8b 45 f4             	mov    -0xc(%rbp),%eax
    9d17:	83 c0 01             	add    $0x1,%eax
    9d1a:	01 c0                	add    %eax,%eax
    9d1c:	89 c0                	mov    %eax,%eax
    9d1e:	48 89 c7             	mov    %rax,%rdi
    9d21:	e8 b1 a7 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    9d26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d2a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    9d31:	e9 b3 00 00 00       	jmp    9de9 <jstring_insert_chars_at+0x44f>
    9d36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d3a:	48 83 c0 08          	add    $0x8,%rax
    9d3e:	48 89 c2             	mov    %rax,%rdx
    9d41:	48 c1 ea 03          	shr    $0x3,%rdx
    9d45:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9d4c:	0f b6 12             	movzbl (%rdx),%edx
    9d4f:	84 d2                	test   %dl,%dl
    9d51:	74 08                	je     9d5b <jstring_insert_chars_at+0x3c1>
    9d53:	48 89 c7             	mov    %rax,%rdi
    9d56:	e8 65 a4 ff ff       	call   41c0 <__asan_report_load8@plt>
    9d5b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d5f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9d63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9d66:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9d6a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d71:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9d75:	48 89 f0             	mov    %rsi,%rax
    9d78:	48 89 c2             	mov    %rax,%rdx
    9d7b:	48 c1 ea 03          	shr    $0x3,%rdx
    9d7f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9d86:	0f b6 12             	movzbl (%rdx),%edx
    9d89:	84 d2                	test   %dl,%dl
    9d8b:	40 0f 95 c7          	setne  %dil
    9d8f:	49 89 c0             	mov    %rax,%r8
    9d92:	41 83 e0 07          	and    $0x7,%r8d
    9d96:	41 38 d0             	cmp    %dl,%r8b
    9d99:	0f 9d c2             	setge  %dl
    9d9c:	21 fa                	and    %edi,%edx
    9d9e:	84 d2                	test   %dl,%dl
    9da0:	74 08                	je     9daa <jstring_insert_chars_at+0x410>
    9da2:	48 89 c7             	mov    %rax,%rdi
    9da5:	e8 e6 a3 ff ff       	call   4190 <__asan_report_load1@plt>
    9daa:	0f b6 36             	movzbl (%rsi),%esi
    9dad:	48 89 c8             	mov    %rcx,%rax
    9db0:	48 89 c2             	mov    %rax,%rdx
    9db3:	48 c1 ea 03          	shr    $0x3,%rdx
    9db7:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9dbe:	0f b6 12             	movzbl (%rdx),%edx
    9dc1:	84 d2                	test   %dl,%dl
    9dc3:	40 0f 95 c7          	setne  %dil
    9dc7:	49 89 c0             	mov    %rax,%r8
    9dca:	41 83 e0 07          	and    $0x7,%r8d
    9dce:	41 38 d0             	cmp    %dl,%r8b
    9dd1:	0f 9d c2             	setge  %dl
    9dd4:	21 fa                	and    %edi,%edx
    9dd6:	84 d2                	test   %dl,%dl
    9dd8:	74 08                	je     9de2 <jstring_insert_chars_at+0x448>
    9dda:	48 89 c7             	mov    %rax,%rdi
    9ddd:	e8 ce a3 ff ff       	call   41b0 <__asan_report_store1@plt>
    9de2:	40 88 31             	mov    %sil,(%rcx)
    9de5:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9de9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9dec:	3b 45 cc             	cmp    -0x34(%rbp),%eax
    9def:	0f 82 41 ff ff ff    	jb     9d36 <jstring_insert_chars_at+0x39c>
    9df5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    9dfc:	e9 91 00 00 00       	jmp    9e92 <jstring_insert_chars_at+0x4f8>
    9e01:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9e04:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9e08:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9e0c:	8b 55 cc             	mov    -0x34(%rbp),%edx
    9e0f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9e12:	01 d0                	add    %edx,%eax
    9e14:	89 c2                	mov    %eax,%edx
    9e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9e1e:	48 89 f0             	mov    %rsi,%rax
    9e21:	48 89 c2             	mov    %rax,%rdx
    9e24:	48 c1 ea 03          	shr    $0x3,%rdx
    9e28:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9e2f:	0f b6 12             	movzbl (%rdx),%edx
    9e32:	84 d2                	test   %dl,%dl
    9e34:	40 0f 95 c7          	setne  %dil
    9e38:	49 89 c0             	mov    %rax,%r8
    9e3b:	41 83 e0 07          	and    $0x7,%r8d
    9e3f:	41 38 d0             	cmp    %dl,%r8b
    9e42:	0f 9d c2             	setge  %dl
    9e45:	21 fa                	and    %edi,%edx
    9e47:	84 d2                	test   %dl,%dl
    9e49:	74 08                	je     9e53 <jstring_insert_chars_at+0x4b9>
    9e4b:	48 89 c7             	mov    %rax,%rdi
    9e4e:	e8 3d a3 ff ff       	call   4190 <__asan_report_load1@plt>
    9e53:	0f b6 36             	movzbl (%rsi),%esi
    9e56:	48 89 c8             	mov    %rcx,%rax
    9e59:	48 89 c2             	mov    %rax,%rdx
    9e5c:	48 c1 ea 03          	shr    $0x3,%rdx
    9e60:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9e67:	0f b6 12             	movzbl (%rdx),%edx
    9e6a:	84 d2                	test   %dl,%dl
    9e6c:	40 0f 95 c7          	setne  %dil
    9e70:	49 89 c0             	mov    %rax,%r8
    9e73:	41 83 e0 07          	and    $0x7,%r8d
    9e77:	41 38 d0             	cmp    %dl,%r8b
    9e7a:	0f 9d c2             	setge  %dl
    9e7d:	21 fa                	and    %edi,%edx
    9e7f:	84 d2                	test   %dl,%dl
    9e81:	74 08                	je     9e8b <jstring_insert_chars_at+0x4f1>
    9e83:	48 89 c7             	mov    %rax,%rdi
    9e86:	e8 25 a3 ff ff       	call   41b0 <__asan_report_store1@plt>
    9e8b:	40 88 31             	mov    %sil,(%rcx)
    9e8e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9e92:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9e95:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    9e98:	0f 82 63 ff ff ff    	jb     9e01 <jstring_insert_chars_at+0x467>
    9e9e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    9ea5:	e9 c6 00 00 00       	jmp    9f70 <jstring_insert_chars_at+0x5d6>
    9eaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9eae:	48 83 c0 08          	add    $0x8,%rax
    9eb2:	48 89 c2             	mov    %rax,%rdx
    9eb5:	48 c1 ea 03          	shr    $0x3,%rdx
    9eb9:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9ec0:	0f b6 12             	movzbl (%rdx),%edx
    9ec3:	84 d2                	test   %dl,%dl
    9ec5:	74 08                	je     9ecf <jstring_insert_chars_at+0x535>
    9ec7:	48 89 c7             	mov    %rax,%rdi
    9eca:	e8 f1 a2 ff ff       	call   41c0 <__asan_report_load8@plt>
    9ecf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ed3:	48 8b 40 08          	mov    0x8(%rax),%rax
    9ed7:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    9eda:	8b 55 ec             	mov    -0x14(%rbp),%edx
    9edd:	01 ca                	add    %ecx,%edx
    9edf:	89 d2                	mov    %edx,%edx
    9ee1:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
    9ee5:	8b 55 cc             	mov    -0x34(%rbp),%edx
    9ee8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    9eeb:	01 c2                	add    %eax,%edx
    9eed:	8b 45 ec             	mov    -0x14(%rbp),%eax
    9ef0:	01 d0                	add    %edx,%eax
    9ef2:	89 c2                	mov    %eax,%edx
    9ef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9efc:	48 89 f0             	mov    %rsi,%rax
    9eff:	48 89 c2             	mov    %rax,%rdx
    9f02:	48 c1 ea 03          	shr    $0x3,%rdx
    9f06:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9f0d:	0f b6 12             	movzbl (%rdx),%edx
    9f10:	84 d2                	test   %dl,%dl
    9f12:	40 0f 95 c7          	setne  %dil
    9f16:	49 89 c0             	mov    %rax,%r8
    9f19:	41 83 e0 07          	and    $0x7,%r8d
    9f1d:	41 38 d0             	cmp    %dl,%r8b
    9f20:	0f 9d c2             	setge  %dl
    9f23:	21 fa                	and    %edi,%edx
    9f25:	84 d2                	test   %dl,%dl
    9f27:	74 08                	je     9f31 <jstring_insert_chars_at+0x597>
    9f29:	48 89 c7             	mov    %rax,%rdi
    9f2c:	e8 5f a2 ff ff       	call   4190 <__asan_report_load1@plt>
    9f31:	0f b6 36             	movzbl (%rsi),%esi
    9f34:	48 89 c8             	mov    %rcx,%rax
    9f37:	48 89 c2             	mov    %rax,%rdx
    9f3a:	48 c1 ea 03          	shr    $0x3,%rdx
    9f3e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9f45:	0f b6 12             	movzbl (%rdx),%edx
    9f48:	84 d2                	test   %dl,%dl
    9f4a:	40 0f 95 c7          	setne  %dil
    9f4e:	49 89 c0             	mov    %rax,%r8
    9f51:	41 83 e0 07          	and    $0x7,%r8d
    9f55:	41 38 d0             	cmp    %dl,%r8b
    9f58:	0f 9d c2             	setge  %dl
    9f5b:	21 fa                	and    %edi,%edx
    9f5d:	84 d2                	test   %dl,%dl
    9f5f:	74 08                	je     9f69 <jstring_insert_chars_at+0x5cf>
    9f61:	48 89 c7             	mov    %rax,%rdi
    9f64:	e8 47 a2 ff ff       	call   41b0 <__asan_report_store1@plt>
    9f69:	40 88 31             	mov    %sil,(%rcx)
    9f6c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    9f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9f74:	48 89 c2             	mov    %rax,%rdx
    9f77:	48 89 d0             	mov    %rdx,%rax
    9f7a:	48 c1 e8 03          	shr    $0x3,%rax
    9f7e:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    9f84:	0f b6 00             	movzbl (%rax),%eax
    9f87:	84 c0                	test   %al,%al
    9f89:	0f 95 c1             	setne  %cl
    9f8c:	3c 03                	cmp    $0x3,%al
    9f8e:	0f 9e c0             	setle  %al
    9f91:	21 c8                	and    %ecx,%eax
    9f93:	84 c0                	test   %al,%al
    9f95:	74 08                	je     9f9f <jstring_insert_chars_at+0x605>
    9f97:	48 89 d7             	mov    %rdx,%rdi
    9f9a:	e8 51 a1 ff ff       	call   40f0 <__asan_report_load4@plt>
    9f9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fa3:	8b 00                	mov    (%rax),%eax
    9fa5:	2b 45 cc             	sub    -0x34(%rbp),%eax
    9fa8:	83 c0 01             	add    $0x1,%eax
    9fab:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    9fae:	0f 82 f6 fe ff ff    	jb     9eaa <jstring_insert_chars_at+0x510>
    9fb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fb8:	8b 55 f4             	mov    -0xc(%rbp),%edx
    9fbb:	89 10                	mov    %edx,(%rax)
    9fbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fc1:	8b 00                	mov    (%rax),%eax
    9fc3:	83 c0 01             	add    $0x1,%eax
    9fc6:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
    9fc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9fcd:	48 83 c0 04          	add    $0x4,%rax
    9fd1:	48 89 c2             	mov    %rax,%rdx
    9fd4:	48 c1 ea 03          	shr    $0x3,%rdx
    9fd8:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    9fdf:	0f b6 12             	movzbl (%rdx),%edx
    9fe2:	84 d2                	test   %dl,%dl
    9fe4:	40 0f 95 c7          	setne  %dil
    9fe8:	48 89 c6             	mov    %rax,%rsi
    9feb:	83 e6 07             	and    $0x7,%esi
    9fee:	83 c6 03             	add    $0x3,%esi
    9ff1:	40 38 d6             	cmp    %dl,%sil
    9ff4:	0f 9d c2             	setge  %dl
    9ff7:	21 fa                	and    %edi,%edx
    9ff9:	84 d2                	test   %dl,%dl
    9ffb:	74 08                	je     a005 <jstring_insert_chars_at+0x66b>
    9ffd:	48 89 c7             	mov    %rax,%rdi
    a000:	e8 2b a0 ff ff       	call   4030 <__asan_report_store4@plt>
    a005:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a009:	89 48 04             	mov    %ecx,0x4(%rax)
    a00c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a010:	48 83 c0 08          	add    $0x8,%rax
    a014:	48 89 c2             	mov    %rax,%rdx
    a017:	48 c1 ea 03          	shr    $0x3,%rdx
    a01b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a022:	0f b6 12             	movzbl (%rdx),%edx
    a025:	84 d2                	test   %dl,%dl
    a027:	74 08                	je     a031 <jstring_insert_chars_at+0x697>
    a029:	48 89 c7             	mov    %rax,%rdi
    a02c:	e8 0f a1 ff ff       	call   4140 <__asan_report_store8@plt>
    a031:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a035:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a039:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a03d:	b8 01 00 00 00       	mov    $0x1,%eax
    a042:	c9                   	leave
    a043:	c3                   	ret

000000000000a044 <jstring_insert_jstring_at>:
    a044:	55                   	push   %rbp
    a045:	48 89 e5             	mov    %rsp,%rbp
    a048:	41 56                	push   %r14
    a04a:	41 55                	push   %r13
    a04c:	41 54                	push   %r12
    a04e:	53                   	push   %rbx
    a04f:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    a056:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    a05d:	48 89 f0             	mov    %rsi,%rax
    a060:	48 89 d6             	mov    %rdx,%rsi
    a063:	48 89 c0             	mov    %rax,%rax
    a066:	ba 00 00 00 00       	mov    $0x0,%edx
    a06b:	48 89 f2             	mov    %rsi,%rdx
    a06e:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    a075:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    a07c:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%rbp)
    a082:	4c 8d 65 80          	lea    -0x80(%rbp),%r12
    a086:	4d 89 e6             	mov    %r12,%r14
    a089:	83 3d d0 11 01 00 00 	cmpl   $0x0,0x111d0(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    a090:	74 12                	je     a0a4 <jstring_insert_jstring_at+0x60>
    a092:	bf 40 00 00 00       	mov    $0x40,%edi
    a097:	e8 04 a0 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    a09c:	48 85 c0             	test   %rax,%rax
    a09f:	74 03                	je     a0a4 <jstring_insert_jstring_at+0x60>
    a0a1:	49 89 c4             	mov    %rax,%r12
    a0a4:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    a0a9:	48 89 c3             	mov    %rax,%rbx
    a0ac:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    a0b3:	41 
    a0b4:	48 8d 05 37 9b 00 00 	lea    0x9b37(%rip),%rax        # 13bf2 <_IO_stdin_used+0xbf2>
    a0bb:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    a0c0:	48 8d 05 7d ff ff ff 	lea    -0x83(%rip),%rax        # a044 <jstring_insert_jstring_at>
    a0c7:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    a0cc:	4d 89 e5             	mov    %r12,%r13
    a0cf:	49 c1 ed 03          	shr    $0x3,%r13
    a0d3:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    a0da:	f1 f1 f1 f1 
    a0de:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    a0e5:	00 00 f3 f3 
    a0e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a0f0:	00 00 
    a0f2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    a0f6:	31 c0                	xor    %eax,%eax
    a0f8:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    a0ff:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    a106:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    a10a:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    a10e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a115:	48 89 c2             	mov    %rax,%rdx
    a118:	48 89 d0             	mov    %rdx,%rax
    a11b:	48 c1 e8 03          	shr    $0x3,%rax
    a11f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a125:	0f b6 00             	movzbl (%rax),%eax
    a128:	84 c0                	test   %al,%al
    a12a:	0f 95 c1             	setne  %cl
    a12d:	3c 03                	cmp    $0x3,%al
    a12f:	0f 9e c0             	setle  %al
    a132:	21 c8                	and    %ecx,%eax
    a134:	84 c0                	test   %al,%al
    a136:	74 08                	je     a140 <jstring_insert_jstring_at+0xfc>
    a138:	48 89 d7             	mov    %rdx,%rdi
    a13b:	e8 b0 9f ff ff       	call   40f0 <__asan_report_load4@plt>
    a140:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a147:	8b 00                	mov    (%rax),%eax
    a149:	3b 85 54 ff ff ff    	cmp    -0xac(%rbp),%eax
    a14f:	73 78                	jae    a1c9 <jstring_insert_jstring_at+0x185>
    a151:	4c 8b 05 e8 ef 00 00 	mov    0xefe8(%rip),%r8        # 19140 <jstring_log>
    a158:	48 8d 15 41 94 00 00 	lea    0x9441(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    a15f:	48 8d 35 ba 95 00 00 	lea    0x95ba(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    a166:	48 8d 05 b3 94 00 00 	lea    0x94b3(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    a16d:	b9 58 04 00 00       	mov    $0x458,%ecx
    a172:	48 89 c7             	mov    %rax,%rdi
    a175:	b8 00 00 00 00       	mov    $0x0,%eax
    a17a:	41 ff d0             	call   *%r8
    a17d:	b9 00 00 00 00       	mov    $0x0,%ecx
    a182:	48 89 c8             	mov    %rcx,%rax
    a185:	48 89 c2             	mov    %rax,%rdx
    a188:	48 c1 ea 03          	shr    $0x3,%rdx
    a18c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a193:	0f b6 12             	movzbl (%rdx),%edx
    a196:	84 d2                	test   %dl,%dl
    a198:	40 0f 95 c6          	setne  %sil
    a19c:	48 89 c7             	mov    %rax,%rdi
    a19f:	83 e7 07             	and    $0x7,%edi
    a1a2:	40 38 d7             	cmp    %dl,%dil
    a1a5:	0f 9d c2             	setge  %dl
    a1a8:	21 f2                	and    %esi,%edx
    a1aa:	84 d2                	test   %dl,%dl
    a1ac:	74 08                	je     a1b6 <jstring_insert_jstring_at+0x172>
    a1ae:	48 89 c7             	mov    %rax,%rdi
    a1b1:	e8 da 9f ff ff       	call   4190 <__asan_report_load1@plt>
    a1b6:	0f b6 01             	movzbl (%rcx),%eax
    a1b9:	88 85 6b ff ff ff    	mov    %al,-0x95(%rbp)
    a1bf:	b8 00 00 00 00       	mov    $0x0,%eax
    a1c4:	e9 cd 07 00 00       	jmp    a996 <jstring_insert_jstring_at+0x952>
    a1c9:	8b 05 c9 10 01 00    	mov    0x110c9(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    a1cf:	85 c0                	test   %eax,%eax
    a1d1:	75 78                	jne    a24b <jstring_insert_jstring_at+0x207>
    a1d3:	4c 8b 05 66 ef 00 00 	mov    0xef66(%rip),%r8        # 19140 <jstring_log>
    a1da:	48 8d 15 bf 93 00 00 	lea    0x93bf(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    a1e1:	48 8d 35 38 95 00 00 	lea    0x9538(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    a1e8:	48 8d 05 31 94 00 00 	lea    0x9431(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    a1ef:	b9 5e 04 00 00       	mov    $0x45e,%ecx
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	b8 00 00 00 00       	mov    $0x0,%eax
    a1fc:	41 ff d0             	call   *%r8
    a1ff:	b9 00 00 00 00       	mov    $0x0,%ecx
    a204:	48 89 c8             	mov    %rcx,%rax
    a207:	48 89 c2             	mov    %rax,%rdx
    a20a:	48 c1 ea 03          	shr    $0x3,%rdx
    a20e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a215:	0f b6 12             	movzbl (%rdx),%edx
    a218:	84 d2                	test   %dl,%dl
    a21a:	40 0f 95 c6          	setne  %sil
    a21e:	48 89 c7             	mov    %rax,%rdi
    a221:	83 e7 07             	and    $0x7,%edi
    a224:	40 38 d7             	cmp    %dl,%dil
    a227:	0f 9d c2             	setge  %dl
    a22a:	21 f2                	and    %esi,%edx
    a22c:	84 d2                	test   %dl,%dl
    a22e:	74 08                	je     a238 <jstring_insert_jstring_at+0x1f4>
    a230:	48 89 c7             	mov    %rax,%rdi
    a233:	e8 58 9f ff ff       	call   4190 <__asan_report_load1@plt>
    a238:	0f b6 01             	movzbl (%rcx),%eax
    a23b:	88 85 6a ff ff ff    	mov    %al,-0x96(%rbp)
    a241:	b8 00 00 00 00       	mov    $0x0,%eax
    a246:	e9 4b 07 00 00       	jmp    a996 <jstring_insert_jstring_at+0x952>
    a24b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a252:	48 83 c0 04          	add    $0x4,%rax
    a256:	48 89 c2             	mov    %rax,%rdx
    a259:	48 c1 ea 03          	shr    $0x3,%rdx
    a25d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a264:	0f b6 12             	movzbl (%rdx),%edx
    a267:	84 d2                	test   %dl,%dl
    a269:	40 0f 95 c6          	setne  %sil
    a26d:	48 89 c1             	mov    %rax,%rcx
    a270:	83 e1 07             	and    $0x7,%ecx
    a273:	83 c1 03             	add    $0x3,%ecx
    a276:	38 d1                	cmp    %dl,%cl
    a278:	0f 9d c2             	setge  %dl
    a27b:	21 f2                	and    %esi,%edx
    a27d:	84 d2                	test   %dl,%dl
    a27f:	74 08                	je     a289 <jstring_insert_jstring_at+0x245>
    a281:	48 89 c7             	mov    %rax,%rdi
    a284:	e8 67 9e ff ff       	call   40f0 <__asan_report_load4@plt>
    a289:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a290:	8b 48 04             	mov    0x4(%rax),%ecx
    a293:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a29a:	48 89 c2             	mov    %rax,%rdx
    a29d:	48 89 d0             	mov    %rdx,%rax
    a2a0:	48 c1 e8 03          	shr    $0x3,%rax
    a2a4:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a2aa:	0f b6 00             	movzbl (%rax),%eax
    a2ad:	84 c0                	test   %al,%al
    a2af:	40 0f 95 c6          	setne  %sil
    a2b3:	3c 03                	cmp    $0x3,%al
    a2b5:	0f 9e c0             	setle  %al
    a2b8:	21 f0                	and    %esi,%eax
    a2ba:	84 c0                	test   %al,%al
    a2bc:	74 08                	je     a2c6 <jstring_insert_jstring_at+0x282>
    a2be:	48 89 d7             	mov    %rdx,%rdi
    a2c1:	e8 2a 9e ff ff       	call   40f0 <__asan_report_load4@plt>
    a2c6:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a2cd:	8b 00                	mov    (%rax),%eax
    a2cf:	29 c1                	sub    %eax,%ecx
    a2d1:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a2d5:	48 89 c2             	mov    %rax,%rdx
    a2d8:	48 89 d0             	mov    %rdx,%rax
    a2db:	48 c1 e8 03          	shr    $0x3,%rax
    a2df:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a2e5:	0f b6 00             	movzbl (%rax),%eax
    a2e8:	84 c0                	test   %al,%al
    a2ea:	40 0f 95 c6          	setne  %sil
    a2ee:	3c 03                	cmp    $0x3,%al
    a2f0:	0f 9e c0             	setle  %al
    a2f3:	21 f0                	and    %esi,%eax
    a2f5:	84 c0                	test   %al,%al
    a2f7:	74 08                	je     a301 <jstring_insert_jstring_at+0x2bd>
    a2f9:	48 89 d7             	mov    %rdx,%rdi
    a2fc:	e8 ef 9d ff ff       	call   40f0 <__asan_report_load4@plt>
    a301:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a304:	39 c8                	cmp    %ecx,%eax
    a306:	0f 83 ee 01 00 00    	jae    a4fa <jstring_insert_jstring_at+0x4b6>
    a30c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a313:	8b 00                	mov    (%rax),%eax
    a315:	2b 85 54 ff ff ff    	sub    -0xac(%rbp),%eax
    a31b:	83 c0 01             	add    $0x1,%eax
    a31e:	89 c6                	mov    %eax,%esi
    a320:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a323:	89 c1                	mov    %eax,%ecx
    a325:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a32c:	48 83 c0 08          	add    $0x8,%rax
    a330:	48 89 c2             	mov    %rax,%rdx
    a333:	48 c1 ea 03          	shr    $0x3,%rdx
    a337:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a33e:	0f b6 12             	movzbl (%rdx),%edx
    a341:	84 d2                	test   %dl,%dl
    a343:	74 08                	je     a34d <jstring_insert_jstring_at+0x309>
    a345:	48 89 c7             	mov    %rax,%rdi
    a348:	e8 73 9e ff ff       	call   41c0 <__asan_report_load8@plt>
    a34d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a354:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a358:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    a35e:	48 01 d0             	add    %rdx,%rax
    a361:	89 f2                	mov    %esi,%edx
    a363:	48 89 ce             	mov    %rcx,%rsi
    a366:	48 89 c7             	mov    %rax,%rdi
    a369:	e8 a4 f4 ff ff       	call   9812 <copy_temporary_memory_chars>
    a36e:	c7 85 6c ff ff ff 00 	movl   $0x0,-0x94(%rbp)
    a375:	00 00 00 
    a378:	e9 f1 00 00 00       	jmp    a46e <jstring_insert_jstring_at+0x42a>
    a37d:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a381:	48 83 c0 08          	add    $0x8,%rax
    a385:	48 89 c2             	mov    %rax,%rdx
    a388:	48 c1 ea 03          	shr    $0x3,%rdx
    a38c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a393:	0f b6 12             	movzbl (%rdx),%edx
    a396:	84 d2                	test   %dl,%dl
    a398:	74 08                	je     a3a2 <jstring_insert_jstring_at+0x35e>
    a39a:	48 89 c7             	mov    %rax,%rdi
    a39d:	e8 1e 9e ff ff       	call   41c0 <__asan_report_load8@plt>
    a3a2:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    a3a6:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    a3ac:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a3b0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a3b7:	48 83 c0 08          	add    $0x8,%rax
    a3bb:	48 89 c2             	mov    %rax,%rdx
    a3be:	48 c1 ea 03          	shr    $0x3,%rdx
    a3c2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a3c9:	0f b6 12             	movzbl (%rdx),%edx
    a3cc:	84 d2                	test   %dl,%dl
    a3ce:	74 08                	je     a3d8 <jstring_insert_jstring_at+0x394>
    a3d0:	48 89 c7             	mov    %rax,%rdi
    a3d3:	e8 e8 9d ff ff       	call   41c0 <__asan_report_load8@plt>
    a3d8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a3df:	48 8b 40 08          	mov    0x8(%rax),%rax
    a3e3:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
    a3e9:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    a3ef:	01 ca                	add    %ecx,%edx
    a3f1:	89 d2                	mov    %edx,%edx
    a3f3:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    a3f7:	48 89 f0             	mov    %rsi,%rax
    a3fa:	48 89 c2             	mov    %rax,%rdx
    a3fd:	48 c1 ea 03          	shr    $0x3,%rdx
    a401:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a408:	0f b6 12             	movzbl (%rdx),%edx
    a40b:	84 d2                	test   %dl,%dl
    a40d:	40 0f 95 c7          	setne  %dil
    a411:	49 89 c0             	mov    %rax,%r8
    a414:	41 83 e0 07          	and    $0x7,%r8d
    a418:	41 38 d0             	cmp    %dl,%r8b
    a41b:	0f 9d c2             	setge  %dl
    a41e:	21 fa                	and    %edi,%edx
    a420:	84 d2                	test   %dl,%dl
    a422:	74 08                	je     a42c <jstring_insert_jstring_at+0x3e8>
    a424:	48 89 c7             	mov    %rax,%rdi
    a427:	e8 64 9d ff ff       	call   4190 <__asan_report_load1@plt>
    a42c:	0f b6 36             	movzbl (%rsi),%esi
    a42f:	48 89 c8             	mov    %rcx,%rax
    a432:	48 89 c2             	mov    %rax,%rdx
    a435:	48 c1 ea 03          	shr    $0x3,%rdx
    a439:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a440:	0f b6 12             	movzbl (%rdx),%edx
    a443:	84 d2                	test   %dl,%dl
    a445:	40 0f 95 c7          	setne  %dil
    a449:	49 89 c0             	mov    %rax,%r8
    a44c:	41 83 e0 07          	and    $0x7,%r8d
    a450:	41 38 d0             	cmp    %dl,%r8b
    a453:	0f 9d c2             	setge  %dl
    a456:	21 fa                	and    %edi,%edx
    a458:	84 d2                	test   %dl,%dl
    a45a:	74 08                	je     a464 <jstring_insert_jstring_at+0x420>
    a45c:	48 89 c7             	mov    %rax,%rdi
    a45f:	e8 4c 9d ff ff       	call   41b0 <__asan_report_store1@plt>
    a464:	40 88 31             	mov    %sil,(%rcx)
    a467:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
    a46e:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a472:	48 89 c2             	mov    %rax,%rdx
    a475:	48 89 d0             	mov    %rdx,%rax
    a478:	48 c1 e8 03          	shr    $0x3,%rax
    a47c:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a482:	0f b6 00             	movzbl (%rax),%eax
    a485:	84 c0                	test   %al,%al
    a487:	0f 95 c1             	setne  %cl
    a48a:	3c 03                	cmp    $0x3,%al
    a48c:	0f 9e c0             	setle  %al
    a48f:	21 c8                	and    %ecx,%eax
    a491:	84 c0                	test   %al,%al
    a493:	74 08                	je     a49d <jstring_insert_jstring_at+0x459>
    a495:	48 89 d7             	mov    %rdx,%rdi
    a498:	e8 53 9c ff ff       	call   40f0 <__asan_report_load4@plt>
    a49d:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a4a0:	39 85 6c ff ff ff    	cmp    %eax,-0x94(%rbp)
    a4a6:	0f 82 d1 fe ff ff    	jb     a37d <jstring_insert_jstring_at+0x339>
    a4ac:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a4b3:	48 89 c2             	mov    %rax,%rdx
    a4b6:	48 89 d0             	mov    %rdx,%rax
    a4b9:	48 c1 e8 03          	shr    $0x3,%rax
    a4bd:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a4c3:	0f b6 00             	movzbl (%rax),%eax
    a4c6:	84 c0                	test   %al,%al
    a4c8:	0f 95 c1             	setne  %cl
    a4cb:	3c 03                	cmp    $0x3,%al
    a4cd:	0f 9e c0             	setle  %al
    a4d0:	21 c8                	and    %ecx,%eax
    a4d2:	84 c0                	test   %al,%al
    a4d4:	74 08                	je     a4de <jstring_insert_jstring_at+0x49a>
    a4d6:	48 89 d7             	mov    %rdx,%rdi
    a4d9:	e8 12 9c ff ff       	call   40f0 <__asan_report_load4@plt>
    a4de:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a4e5:	8b 10                	mov    (%rax),%edx
    a4e7:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a4ea:	01 c2                	add    %eax,%edx
    a4ec:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a4f3:	89 10                	mov    %edx,(%rax)
    a4f5:	e9 97 04 00 00       	jmp    a991 <jstring_insert_jstring_at+0x94d>
    a4fa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a501:	48 89 c2             	mov    %rax,%rdx
    a504:	48 89 d0             	mov    %rdx,%rax
    a507:	48 c1 e8 03          	shr    $0x3,%rax
    a50b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a511:	0f b6 00             	movzbl (%rax),%eax
    a514:	84 c0                	test   %al,%al
    a516:	0f 95 c1             	setne  %cl
    a519:	3c 03                	cmp    $0x3,%al
    a51b:	0f 9e c0             	setle  %al
    a51e:	21 c8                	and    %ecx,%eax
    a520:	84 c0                	test   %al,%al
    a522:	74 08                	je     a52c <jstring_insert_jstring_at+0x4e8>
    a524:	48 89 d7             	mov    %rdx,%rdi
    a527:	e8 c4 9b ff ff       	call   40f0 <__asan_report_load4@plt>
    a52c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a533:	8b 08                	mov    (%rax),%ecx
    a535:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a539:	48 89 c2             	mov    %rax,%rdx
    a53c:	48 89 d0             	mov    %rdx,%rax
    a53f:	48 c1 e8 03          	shr    $0x3,%rax
    a543:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a549:	0f b6 00             	movzbl (%rax),%eax
    a54c:	84 c0                	test   %al,%al
    a54e:	40 0f 95 c6          	setne  %sil
    a552:	3c 03                	cmp    $0x3,%al
    a554:	0f 9e c0             	setle  %al
    a557:	21 f0                	and    %esi,%eax
    a559:	84 c0                	test   %al,%al
    a55b:	74 08                	je     a565 <jstring_insert_jstring_at+0x521>
    a55d:	48 89 d7             	mov    %rdx,%rdi
    a560:	e8 8b 9b ff ff       	call   40f0 <__asan_report_load4@plt>
    a565:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a568:	01 c8                	add    %ecx,%eax
    a56a:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
    a570:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    a576:	83 c0 01             	add    $0x1,%eax
    a579:	01 c0                	add    %eax,%eax
    a57b:	89 c0                	mov    %eax,%eax
    a57d:	48 89 c7             	mov    %rax,%rdi
    a580:	e8 52 9f ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    a585:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a58c:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
    a593:	00 00 00 
    a596:	e9 c5 00 00 00       	jmp    a660 <jstring_insert_jstring_at+0x61c>
    a59b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a5a2:	48 83 c0 08          	add    $0x8,%rax
    a5a6:	48 89 c2             	mov    %rax,%rdx
    a5a9:	48 c1 ea 03          	shr    $0x3,%rdx
    a5ad:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a5b4:	0f b6 12             	movzbl (%rdx),%edx
    a5b7:	84 d2                	test   %dl,%dl
    a5b9:	74 08                	je     a5c3 <jstring_insert_jstring_at+0x57f>
    a5bb:	48 89 c7             	mov    %rax,%rdi
    a5be:	e8 fd 9b ff ff       	call   41c0 <__asan_report_load8@plt>
    a5c3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a5ca:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a5ce:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    a5d4:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a5d8:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
    a5de:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a5e5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a5e9:	48 89 f0             	mov    %rsi,%rax
    a5ec:	48 89 c2             	mov    %rax,%rdx
    a5ef:	48 c1 ea 03          	shr    $0x3,%rdx
    a5f3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a5fa:	0f b6 12             	movzbl (%rdx),%edx
    a5fd:	84 d2                	test   %dl,%dl
    a5ff:	40 0f 95 c7          	setne  %dil
    a603:	49 89 c0             	mov    %rax,%r8
    a606:	41 83 e0 07          	and    $0x7,%r8d
    a60a:	41 38 d0             	cmp    %dl,%r8b
    a60d:	0f 9d c2             	setge  %dl
    a610:	21 fa                	and    %edi,%edx
    a612:	84 d2                	test   %dl,%dl
    a614:	74 08                	je     a61e <jstring_insert_jstring_at+0x5da>
    a616:	48 89 c7             	mov    %rax,%rdi
    a619:	e8 72 9b ff ff       	call   4190 <__asan_report_load1@plt>
    a61e:	0f b6 36             	movzbl (%rsi),%esi
    a621:	48 89 c8             	mov    %rcx,%rax
    a624:	48 89 c2             	mov    %rax,%rdx
    a627:	48 c1 ea 03          	shr    $0x3,%rdx
    a62b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a632:	0f b6 12             	movzbl (%rdx),%edx
    a635:	84 d2                	test   %dl,%dl
    a637:	40 0f 95 c7          	setne  %dil
    a63b:	49 89 c0             	mov    %rax,%r8
    a63e:	41 83 e0 07          	and    $0x7,%r8d
    a642:	41 38 d0             	cmp    %dl,%r8b
    a645:	0f 9d c2             	setge  %dl
    a648:	21 fa                	and    %edi,%edx
    a64a:	84 d2                	test   %dl,%dl
    a64c:	74 08                	je     a656 <jstring_insert_jstring_at+0x612>
    a64e:	48 89 c7             	mov    %rax,%rdi
    a651:	e8 5a 9b ff ff       	call   41b0 <__asan_report_store1@plt>
    a656:	40 88 31             	mov    %sil,(%rcx)
    a659:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%rbp)
    a660:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    a666:	3b 85 54 ff ff ff    	cmp    -0xac(%rbp),%eax
    a66c:	0f 82 29 ff ff ff    	jb     a59b <jstring_insert_jstring_at+0x557>
    a672:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
    a679:	00 00 00 
    a67c:	e9 c5 00 00 00       	jmp    a746 <jstring_insert_jstring_at+0x702>
    a681:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a685:	48 83 c0 08          	add    $0x8,%rax
    a689:	48 89 c2             	mov    %rax,%rdx
    a68c:	48 c1 ea 03          	shr    $0x3,%rdx
    a690:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a697:	0f b6 12             	movzbl (%rdx),%edx
    a69a:	84 d2                	test   %dl,%dl
    a69c:	74 08                	je     a6a6 <jstring_insert_jstring_at+0x662>
    a69e:	48 89 c7             	mov    %rax,%rdi
    a6a1:	e8 1a 9b ff ff       	call   41c0 <__asan_report_load8@plt>
    a6a6:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    a6aa:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    a6b0:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    a6b4:	8b 95 54 ff ff ff    	mov    -0xac(%rbp),%edx
    a6ba:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    a6c0:	01 d0                	add    %edx,%eax
    a6c2:	89 c2                	mov    %eax,%edx
    a6c4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a6cb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a6cf:	48 89 f0             	mov    %rsi,%rax
    a6d2:	48 89 c2             	mov    %rax,%rdx
    a6d5:	48 c1 ea 03          	shr    $0x3,%rdx
    a6d9:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a6e0:	0f b6 12             	movzbl (%rdx),%edx
    a6e3:	84 d2                	test   %dl,%dl
    a6e5:	40 0f 95 c7          	setne  %dil
    a6e9:	49 89 c0             	mov    %rax,%r8
    a6ec:	41 83 e0 07          	and    $0x7,%r8d
    a6f0:	41 38 d0             	cmp    %dl,%r8b
    a6f3:	0f 9d c2             	setge  %dl
    a6f6:	21 fa                	and    %edi,%edx
    a6f8:	84 d2                	test   %dl,%dl
    a6fa:	74 08                	je     a704 <jstring_insert_jstring_at+0x6c0>
    a6fc:	48 89 c7             	mov    %rax,%rdi
    a6ff:	e8 8c 9a ff ff       	call   4190 <__asan_report_load1@plt>
    a704:	0f b6 36             	movzbl (%rsi),%esi
    a707:	48 89 c8             	mov    %rcx,%rax
    a70a:	48 89 c2             	mov    %rax,%rdx
    a70d:	48 c1 ea 03          	shr    $0x3,%rdx
    a711:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a718:	0f b6 12             	movzbl (%rdx),%edx
    a71b:	84 d2                	test   %dl,%dl
    a71d:	40 0f 95 c7          	setne  %dil
    a721:	49 89 c0             	mov    %rax,%r8
    a724:	41 83 e0 07          	and    $0x7,%r8d
    a728:	41 38 d0             	cmp    %dl,%r8b
    a72b:	0f 9d c2             	setge  %dl
    a72e:	21 fa                	and    %edi,%edx
    a730:	84 d2                	test   %dl,%dl
    a732:	74 08                	je     a73c <jstring_insert_jstring_at+0x6f8>
    a734:	48 89 c7             	mov    %rax,%rdi
    a737:	e8 74 9a ff ff       	call   41b0 <__asan_report_store1@plt>
    a73c:	40 88 31             	mov    %sil,(%rcx)
    a73f:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%rbp)
    a746:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a74a:	48 89 c2             	mov    %rax,%rdx
    a74d:	48 89 d0             	mov    %rdx,%rax
    a750:	48 c1 e8 03          	shr    $0x3,%rax
    a754:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a75a:	0f b6 00             	movzbl (%rax),%eax
    a75d:	84 c0                	test   %al,%al
    a75f:	0f 95 c1             	setne  %cl
    a762:	3c 03                	cmp    $0x3,%al
    a764:	0f 9e c0             	setle  %al
    a767:	21 c8                	and    %ecx,%eax
    a769:	84 c0                	test   %al,%al
    a76b:	74 08                	je     a775 <jstring_insert_jstring_at+0x731>
    a76d:	48 89 d7             	mov    %rdx,%rdi
    a770:	e8 7b 99 ff ff       	call   40f0 <__asan_report_load4@plt>
    a775:	8b 43 c0             	mov    -0x40(%rbx),%eax
    a778:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%rbp)
    a77e:	0f 82 fd fe ff ff    	jb     a681 <jstring_insert_jstring_at+0x63d>
    a784:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
    a78b:	00 00 00 
    a78e:	e9 0d 01 00 00       	jmp    a8a0 <jstring_insert_jstring_at+0x85c>
    a793:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a79a:	48 83 c0 08          	add    $0x8,%rax
    a79e:	48 89 c2             	mov    %rax,%rdx
    a7a1:	48 c1 ea 03          	shr    $0x3,%rdx
    a7a5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a7ac:	0f b6 12             	movzbl (%rdx),%edx
    a7af:	84 d2                	test   %dl,%dl
    a7b1:	74 08                	je     a7bb <jstring_insert_jstring_at+0x777>
    a7b3:	48 89 c7             	mov    %rax,%rdi
    a7b6:	e8 05 9a ff ff       	call   41c0 <__asan_report_load8@plt>
    a7bb:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a7c2:	48 8b 40 08          	mov    0x8(%rax),%rax
    a7c6:	8b 8d 54 ff ff ff    	mov    -0xac(%rbp),%ecx
    a7cc:	8b 95 70 ff ff ff    	mov    -0x90(%rbp),%edx
    a7d2:	01 ca                	add    %ecx,%edx
    a7d4:	89 d2                	mov    %edx,%edx
    a7d6:	48 8d 34 10          	lea    (%rax,%rdx,1),%rsi
    a7da:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    a7de:	48 89 c2             	mov    %rax,%rdx
    a7e1:	48 89 d0             	mov    %rdx,%rax
    a7e4:	48 c1 e8 03          	shr    $0x3,%rax
    a7e8:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a7ee:	0f b6 00             	movzbl (%rax),%eax
    a7f1:	84 c0                	test   %al,%al
    a7f3:	0f 95 c1             	setne  %cl
    a7f6:	3c 03                	cmp    $0x3,%al
    a7f8:	0f 9e c0             	setle  %al
    a7fb:	21 c8                	and    %ecx,%eax
    a7fd:	84 c0                	test   %al,%al
    a7ff:	74 08                	je     a809 <jstring_insert_jstring_at+0x7c5>
    a801:	48 89 d7             	mov    %rdx,%rdi
    a804:	e8 e7 98 ff ff       	call   40f0 <__asan_report_load4@plt>
    a809:	8b 53 c0             	mov    -0x40(%rbx),%edx
    a80c:	8b 85 54 ff ff ff    	mov    -0xac(%rbp),%eax
    a812:	01 c2                	add    %eax,%edx
    a814:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
    a81a:	01 d0                	add    %edx,%eax
    a81c:	89 c2                	mov    %eax,%edx
    a81e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a825:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    a829:	48 89 f0             	mov    %rsi,%rax
    a82c:	48 89 c2             	mov    %rax,%rdx
    a82f:	48 c1 ea 03          	shr    $0x3,%rdx
    a833:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a83a:	0f b6 12             	movzbl (%rdx),%edx
    a83d:	84 d2                	test   %dl,%dl
    a83f:	40 0f 95 c7          	setne  %dil
    a843:	49 89 c0             	mov    %rax,%r8
    a846:	41 83 e0 07          	and    $0x7,%r8d
    a84a:	41 38 d0             	cmp    %dl,%r8b
    a84d:	0f 9d c2             	setge  %dl
    a850:	21 fa                	and    %edi,%edx
    a852:	84 d2                	test   %dl,%dl
    a854:	74 08                	je     a85e <jstring_insert_jstring_at+0x81a>
    a856:	48 89 c7             	mov    %rax,%rdi
    a859:	e8 32 99 ff ff       	call   4190 <__asan_report_load1@plt>
    a85e:	0f b6 36             	movzbl (%rsi),%esi
    a861:	48 89 c8             	mov    %rcx,%rax
    a864:	48 89 c2             	mov    %rax,%rdx
    a867:	48 c1 ea 03          	shr    $0x3,%rdx
    a86b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a872:	0f b6 12             	movzbl (%rdx),%edx
    a875:	84 d2                	test   %dl,%dl
    a877:	40 0f 95 c7          	setne  %dil
    a87b:	49 89 c0             	mov    %rax,%r8
    a87e:	41 83 e0 07          	and    $0x7,%r8d
    a882:	41 38 d0             	cmp    %dl,%r8b
    a885:	0f 9d c2             	setge  %dl
    a888:	21 fa                	and    %edi,%edx
    a88a:	84 d2                	test   %dl,%dl
    a88c:	74 08                	je     a896 <jstring_insert_jstring_at+0x852>
    a88e:	48 89 c7             	mov    %rax,%rdi
    a891:	e8 1a 99 ff ff       	call   41b0 <__asan_report_store1@plt>
    a896:	40 88 31             	mov    %sil,(%rcx)
    a899:	83 85 70 ff ff ff 01 	addl   $0x1,-0x90(%rbp)
    a8a0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a8a7:	48 89 c2             	mov    %rax,%rdx
    a8aa:	48 89 d0             	mov    %rdx,%rax
    a8ad:	48 c1 e8 03          	shr    $0x3,%rax
    a8b1:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    a8b7:	0f b6 00             	movzbl (%rax),%eax
    a8ba:	84 c0                	test   %al,%al
    a8bc:	0f 95 c1             	setne  %cl
    a8bf:	3c 03                	cmp    $0x3,%al
    a8c1:	0f 9e c0             	setle  %al
    a8c4:	21 c8                	and    %ecx,%eax
    a8c6:	84 c0                	test   %al,%al
    a8c8:	74 08                	je     a8d2 <jstring_insert_jstring_at+0x88e>
    a8ca:	48 89 d7             	mov    %rdx,%rdi
    a8cd:	e8 1e 98 ff ff       	call   40f0 <__asan_report_load4@plt>
    a8d2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a8d9:	8b 00                	mov    (%rax),%eax
    a8db:	2b 85 54 ff ff ff    	sub    -0xac(%rbp),%eax
    a8e1:	83 c0 01             	add    $0x1,%eax
    a8e4:	39 85 70 ff ff ff    	cmp    %eax,-0x90(%rbp)
    a8ea:	0f 82 a3 fe ff ff    	jb     a793 <jstring_insert_jstring_at+0x74f>
    a8f0:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a8f7:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    a8fd:	89 10                	mov    %edx,(%rax)
    a8ff:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a906:	8b 00                	mov    (%rax),%eax
    a908:	83 c0 01             	add    $0x1,%eax
    a90b:	8d 0c 00             	lea    (%rax,%rax,1),%ecx
    a90e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a915:	48 83 c0 04          	add    $0x4,%rax
    a919:	48 89 c2             	mov    %rax,%rdx
    a91c:	48 c1 ea 03          	shr    $0x3,%rdx
    a920:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a927:	0f b6 12             	movzbl (%rdx),%edx
    a92a:	84 d2                	test   %dl,%dl
    a92c:	40 0f 95 c7          	setne  %dil
    a930:	48 89 c6             	mov    %rax,%rsi
    a933:	83 e6 07             	and    $0x7,%esi
    a936:	83 c6 03             	add    $0x3,%esi
    a939:	40 38 d6             	cmp    %dl,%sil
    a93c:	0f 9d c2             	setge  %dl
    a93f:	21 fa                	and    %edi,%edx
    a941:	84 d2                	test   %dl,%dl
    a943:	74 08                	je     a94d <jstring_insert_jstring_at+0x909>
    a945:	48 89 c7             	mov    %rax,%rdi
    a948:	e8 e3 96 ff ff       	call   4030 <__asan_report_store4@plt>
    a94d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a954:	89 48 04             	mov    %ecx,0x4(%rax)
    a957:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a95e:	48 83 c0 08          	add    $0x8,%rax
    a962:	48 89 c2             	mov    %rax,%rdx
    a965:	48 c1 ea 03          	shr    $0x3,%rdx
    a969:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    a970:	0f b6 12             	movzbl (%rdx),%edx
    a973:	84 d2                	test   %dl,%dl
    a975:	74 08                	je     a97f <jstring_insert_jstring_at+0x93b>
    a977:	48 89 c7             	mov    %rax,%rdi
    a97a:	e8 c1 97 ff ff       	call   4140 <__asan_report_store8@plt>
    a97f:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a986:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    a98d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    a991:	b8 01 00 00 00       	mov    $0x1,%eax
    a996:	89 c2                	mov    %eax,%edx
    a998:	4d 39 e6             	cmp    %r12,%r14
    a99b:	74 23                	je     a9c0 <jstring_insert_jstring_at+0x97c>
    a99d:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    a9a4:	45 
    a9a5:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    a9ac:	f5 f5 f5 
    a9af:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    a9b6:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    a9bb:	c6 00 00             	movb   $0x0,(%rax)
    a9be:	eb 0b                	jmp    a9cb <jstring_insert_jstring_at+0x987>
    a9c0:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    a9c7:	00 00 00 00 
    a9cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a9cf:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a9d6:	00 00 
    a9d8:	74 05                	je     a9df <jstring_insert_jstring_at+0x99b>
    a9da:	e8 81 97 ff ff       	call   4160 <__stack_chk_fail@plt>
    a9df:	89 d0                	mov    %edx,%eax
    a9e1:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    a9e8:	5b                   	pop    %rbx
    a9e9:	41 5c                	pop    %r12
    a9eb:	41 5d                	pop    %r13
    a9ed:	41 5e                	pop    %r14
    a9ef:	5d                   	pop    %rbp
    a9f0:	c3                   	ret

000000000000a9f1 <jstring_remove_at>:
    a9f1:	55                   	push   %rbp
    a9f2:	48 89 e5             	mov    %rsp,%rbp
    a9f5:	48 83 ec 20          	sub    $0x20,%rsp
    a9f9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a9fd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    aa00:	89 55 e0             	mov    %edx,-0x20(%rbp)
    aa03:	8b 05 8f 08 01 00    	mov    0x1088f(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    aa09:	85 c0                	test   %eax,%eax
    aa0b:	75 75                	jne    aa82 <jstring_remove_at+0x91>
    aa0d:	4c 8b 05 2c e7 00 00 	mov    0xe72c(%rip),%r8        # 19140 <jstring_log>
    aa14:	48 8d 15 85 8b 00 00 	lea    0x8b85(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    aa1b:	48 8d 35 fe 8c 00 00 	lea    0x8cfe(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    aa22:	48 8d 05 f7 8b 00 00 	lea    0x8bf7(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    aa29:	b9 95 04 00 00       	mov    $0x495,%ecx
    aa2e:	48 89 c7             	mov    %rax,%rdi
    aa31:	b8 00 00 00 00       	mov    $0x0,%eax
    aa36:	41 ff d0             	call   *%r8
    aa39:	b9 00 00 00 00       	mov    $0x0,%ecx
    aa3e:	48 89 c8             	mov    %rcx,%rax
    aa41:	48 89 c2             	mov    %rax,%rdx
    aa44:	48 c1 ea 03          	shr    $0x3,%rdx
    aa48:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    aa4f:	0f b6 12             	movzbl (%rdx),%edx
    aa52:	84 d2                	test   %dl,%dl
    aa54:	40 0f 95 c6          	setne  %sil
    aa58:	48 89 c7             	mov    %rax,%rdi
    aa5b:	83 e7 07             	and    $0x7,%edi
    aa5e:	40 38 d7             	cmp    %dl,%dil
    aa61:	0f 9d c2             	setge  %dl
    aa64:	21 f2                	and    %esi,%edx
    aa66:	84 d2                	test   %dl,%dl
    aa68:	74 08                	je     aa72 <jstring_remove_at+0x81>
    aa6a:	48 89 c7             	mov    %rax,%rdi
    aa6d:	e8 1e 97 ff ff       	call   4190 <__asan_report_load1@plt>
    aa72:	0f b6 01             	movzbl (%rcx),%eax
    aa75:	88 45 fb             	mov    %al,-0x5(%rbp)
    aa78:	b8 00 00 00 00       	mov    $0x0,%eax
    aa7d:	e9 06 02 00 00       	jmp    ac88 <jstring_remove_at+0x297>
    aa82:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    aa85:	8b 45 e0             	mov    -0x20(%rbp),%eax
    aa88:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
    aa8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa8f:	48 89 c2             	mov    %rax,%rdx
    aa92:	48 89 d0             	mov    %rdx,%rax
    aa95:	48 c1 e8 03          	shr    $0x3,%rax
    aa99:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    aa9f:	0f b6 00             	movzbl (%rax),%eax
    aaa2:	84 c0                	test   %al,%al
    aaa4:	40 0f 95 c6          	setne  %sil
    aaa8:	3c 03                	cmp    $0x3,%al
    aaaa:	0f 9e c0             	setle  %al
    aaad:	21 f0                	and    %esi,%eax
    aaaf:	84 c0                	test   %al,%al
    aab1:	74 08                	je     aabb <jstring_remove_at+0xca>
    aab3:	48 89 d7             	mov    %rdx,%rdi
    aab6:	e8 35 96 ff ff       	call   40f0 <__asan_report_load4@plt>
    aabb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aabf:	8b 00                	mov    (%rax),%eax
    aac1:	39 c8                	cmp    %ecx,%eax
    aac3:	73 75                	jae    ab3a <jstring_remove_at+0x149>
    aac5:	4c 8b 05 74 e6 00 00 	mov    0xe674(%rip),%r8        # 19140 <jstring_log>
    aacc:	48 8d 15 cd 8a 00 00 	lea    0x8acd(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    aad3:	48 8d 35 46 8c 00 00 	lea    0x8c46(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    aada:	48 8d 05 3f 8b 00 00 	lea    0x8b3f(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    aae1:	b9 9b 04 00 00       	mov    $0x49b,%ecx
    aae6:	48 89 c7             	mov    %rax,%rdi
    aae9:	b8 00 00 00 00       	mov    $0x0,%eax
    aaee:	41 ff d0             	call   *%r8
    aaf1:	b9 00 00 00 00       	mov    $0x0,%ecx
    aaf6:	48 89 c8             	mov    %rcx,%rax
    aaf9:	48 89 c2             	mov    %rax,%rdx
    aafc:	48 c1 ea 03          	shr    $0x3,%rdx
    ab00:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ab07:	0f b6 12             	movzbl (%rdx),%edx
    ab0a:	84 d2                	test   %dl,%dl
    ab0c:	40 0f 95 c6          	setne  %sil
    ab10:	48 89 c7             	mov    %rax,%rdi
    ab13:	83 e7 07             	and    $0x7,%edi
    ab16:	40 38 d7             	cmp    %dl,%dil
    ab19:	0f 9d c2             	setge  %dl
    ab1c:	21 f2                	and    %esi,%edx
    ab1e:	84 d2                	test   %dl,%dl
    ab20:	74 08                	je     ab2a <jstring_remove_at+0x139>
    ab22:	48 89 c7             	mov    %rax,%rdi
    ab25:	e8 66 96 ff ff       	call   4190 <__asan_report_load1@plt>
    ab2a:	0f b6 01             	movzbl (%rcx),%eax
    ab2d:	88 45 fa             	mov    %al,-0x6(%rbp)
    ab30:	b8 00 00 00 00       	mov    $0x0,%eax
    ab35:	e9 4e 01 00 00       	jmp    ac88 <jstring_remove_at+0x297>
    ab3a:	8b 45 e0             	mov    -0x20(%rbp),%eax
    ab3d:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ab40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab44:	48 89 c2             	mov    %rax,%rdx
    ab47:	48 89 d0             	mov    %rdx,%rax
    ab4a:	48 c1 e8 03          	shr    $0x3,%rax
    ab4e:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    ab54:	0f b6 00             	movzbl (%rax),%eax
    ab57:	84 c0                	test   %al,%al
    ab59:	0f 95 c1             	setne  %cl
    ab5c:	3c 03                	cmp    $0x3,%al
    ab5e:	0f 9e c0             	setle  %al
    ab61:	21 c8                	and    %ecx,%eax
    ab63:	84 c0                	test   %al,%al
    ab65:	74 08                	je     ab6f <jstring_remove_at+0x17e>
    ab67:	48 89 d7             	mov    %rdx,%rdi
    ab6a:	e8 81 95 ff ff       	call   40f0 <__asan_report_load4@plt>
    ab6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab73:	8b 00                	mov    (%rax),%eax
    ab75:	2b 45 e4             	sub    -0x1c(%rbp),%eax
    ab78:	2b 45 e0             	sub    -0x20(%rbp),%eax
    ab7b:	83 c0 01             	add    $0x1,%eax
    ab7e:	89 c7                	mov    %eax,%edi
    ab80:	8b 45 fc             	mov    -0x4(%rbp),%eax
    ab83:	f7 d8                	neg    %eax
    ab85:	48 98                	cltq
    ab87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab8b:	48 83 c2 08          	add    $0x8,%rdx
    ab8f:	48 89 d1             	mov    %rdx,%rcx
    ab92:	48 c1 e9 03          	shr    $0x3,%rcx
    ab96:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    ab9d:	0f b6 09             	movzbl (%rcx),%ecx
    aba0:	84 c9                	test   %cl,%cl
    aba2:	74 08                	je     abac <jstring_remove_at+0x1bb>
    aba4:	48 89 d7             	mov    %rdx,%rdi
    aba7:	e8 14 96 ff ff       	call   41c0 <__asan_report_load8@plt>
    abac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abb0:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    abb4:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    abb7:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    abba:	48 01 f1             	add    %rsi,%rcx
    abbd:	48 01 d1             	add    %rdx,%rcx
    abc0:	89 fa                	mov    %edi,%edx
    abc2:	48 89 c6             	mov    %rax,%rsi
    abc5:	48 89 cf             	mov    %rcx,%rdi
    abc8:	e8 45 ec ff ff       	call   9812 <copy_temporary_memory_chars>
    abcd:	85 c0                	test   %eax,%eax
    abcf:	75 72                	jne    ac43 <jstring_remove_at+0x252>
    abd1:	4c 8b 05 68 e5 00 00 	mov    0xe568(%rip),%r8        # 19140 <jstring_log>
    abd8:	48 8d 15 c1 89 00 00 	lea    0x89c1(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    abdf:	48 8d 35 3a 8b 00 00 	lea    0x8b3a(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    abe6:	48 8d 05 33 8a 00 00 	lea    0x8a33(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    abed:	b9 a5 04 00 00       	mov    $0x4a5,%ecx
    abf2:	48 89 c7             	mov    %rax,%rdi
    abf5:	b8 00 00 00 00       	mov    $0x0,%eax
    abfa:	41 ff d0             	call   *%r8
    abfd:	b9 00 00 00 00       	mov    $0x0,%ecx
    ac02:	48 89 c8             	mov    %rcx,%rax
    ac05:	48 89 c2             	mov    %rax,%rdx
    ac08:	48 c1 ea 03          	shr    $0x3,%rdx
    ac0c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ac13:	0f b6 12             	movzbl (%rdx),%edx
    ac16:	84 d2                	test   %dl,%dl
    ac18:	40 0f 95 c6          	setne  %sil
    ac1c:	48 89 c7             	mov    %rax,%rdi
    ac1f:	83 e7 07             	and    $0x7,%edi
    ac22:	40 38 d7             	cmp    %dl,%dil
    ac25:	0f 9d c2             	setge  %dl
    ac28:	21 f2                	and    %esi,%edx
    ac2a:	84 d2                	test   %dl,%dl
    ac2c:	74 08                	je     ac36 <jstring_remove_at+0x245>
    ac2e:	48 89 c7             	mov    %rax,%rdi
    ac31:	e8 5a 95 ff ff       	call   4190 <__asan_report_load1@plt>
    ac36:	0f b6 01             	movzbl (%rcx),%eax
    ac39:	88 45 f9             	mov    %al,-0x7(%rbp)
    ac3c:	b8 00 00 00 00       	mov    $0x0,%eax
    ac41:	eb 45                	jmp    ac88 <jstring_remove_at+0x297>
    ac43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac47:	48 89 c2             	mov    %rax,%rdx
    ac4a:	48 89 d0             	mov    %rdx,%rax
    ac4d:	48 c1 e8 03          	shr    $0x3,%rax
    ac51:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    ac57:	0f b6 00             	movzbl (%rax),%eax
    ac5a:	84 c0                	test   %al,%al
    ac5c:	0f 95 c1             	setne  %cl
    ac5f:	3c 03                	cmp    $0x3,%al
    ac61:	0f 9e c0             	setle  %al
    ac64:	21 c8                	and    %ecx,%eax
    ac66:	84 c0                	test   %al,%al
    ac68:	74 08                	je     ac72 <jstring_remove_at+0x281>
    ac6a:	48 89 d7             	mov    %rdx,%rdi
    ac6d:	e8 7e 94 ff ff       	call   40f0 <__asan_report_load4@plt>
    ac72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac76:	8b 00                	mov    (%rax),%eax
    ac78:	2b 45 e0             	sub    -0x20(%rbp),%eax
    ac7b:	89 c2                	mov    %eax,%edx
    ac7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac81:	89 10                	mov    %edx,(%rax)
    ac83:	b8 01 00 00 00       	mov    $0x1,%eax
    ac88:	c9                   	leave
    ac89:	c3                   	ret

000000000000ac8a <jstring_remove_chars>:
    ac8a:	55                   	push   %rbp
    ac8b:	48 89 e5             	mov    %rsp,%rbp
    ac8e:	48 83 ec 20          	sub    $0x20,%rsp
    ac92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ac9a:	8b 05 f8 05 01 00    	mov    0x105f8(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    aca0:	85 c0                	test   %eax,%eax
    aca2:	75 75                	jne    ad19 <jstring_remove_chars+0x8f>
    aca4:	4c 8b 05 95 e4 00 00 	mov    0xe495(%rip),%r8        # 19140 <jstring_log>
    acab:	48 8d 15 ee 88 00 00 	lea    0x88ee(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    acb2:	48 8d 35 67 8a 00 00 	lea    0x8a67(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    acb9:	48 8d 05 60 89 00 00 	lea    0x8960(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    acc0:	b9 b2 04 00 00       	mov    $0x4b2,%ecx
    acc5:	48 89 c7             	mov    %rax,%rdi
    acc8:	b8 00 00 00 00       	mov    $0x0,%eax
    accd:	41 ff d0             	call   *%r8
    acd0:	b9 00 00 00 00       	mov    $0x0,%ecx
    acd5:	48 89 c8             	mov    %rcx,%rax
    acd8:	48 89 c2             	mov    %rax,%rdx
    acdb:	48 c1 ea 03          	shr    $0x3,%rdx
    acdf:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ace6:	0f b6 12             	movzbl (%rdx),%edx
    ace9:	84 d2                	test   %dl,%dl
    aceb:	40 0f 95 c6          	setne  %sil
    acef:	48 89 c7             	mov    %rax,%rdi
    acf2:	83 e7 07             	and    $0x7,%edi
    acf5:	40 38 d7             	cmp    %dl,%dil
    acf8:	0f 9d c2             	setge  %dl
    acfb:	21 f2                	and    %esi,%edx
    acfd:	84 d2                	test   %dl,%dl
    acff:	74 08                	je     ad09 <jstring_remove_chars+0x7f>
    ad01:	48 89 c7             	mov    %rax,%rdi
    ad04:	e8 87 94 ff ff       	call   4190 <__asan_report_load1@plt>
    ad09:	0f b6 01             	movzbl (%rcx),%eax
    ad0c:	88 45 fb             	mov    %al,-0x5(%rbp)
    ad0f:	b8 00 00 00 00       	mov    $0x0,%eax
    ad14:	e9 c4 00 00 00       	jmp    addd <jstring_remove_chars+0x153>
    ad19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad1d:	48 89 c2             	mov    %rax,%rdx
    ad20:	48 c1 ea 03          	shr    $0x3,%rdx
    ad24:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ad2b:	0f b7 12             	movzwl (%rdx),%edx
    ad2e:	66 85 d2             	test   %dx,%dx
    ad31:	74 08                	je     ad3b <jstring_remove_chars+0xb1>
    ad33:	48 89 c7             	mov    %rax,%rdi
    ad36:	e8 65 94 ff ff       	call   41a0 <__asan_report_load16@plt>
    ad3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad43:	48 8b 08             	mov    (%rax),%rcx
    ad46:	48 8b 40 08          	mov    0x8(%rax),%rax
    ad4a:	48 89 cf             	mov    %rcx,%rdi
    ad4d:	48 89 c6             	mov    %rax,%rsi
    ad50:	e8 b4 d2 ff ff       	call   8009 <jstring_index_of_raw>
    ad55:	89 45 fc             	mov    %eax,-0x4(%rbp)
    ad58:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    ad5c:	79 50                	jns    adae <jstring_remove_chars+0x124>
    ad5e:	48 8b 0d db e3 00 00 	mov    0xe3db(%rip),%rcx        # 19140 <jstring_log>
    ad65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad69:	48 83 c0 08          	add    $0x8,%rax
    ad6d:	48 89 c2             	mov    %rax,%rdx
    ad70:	48 c1 ea 03          	shr    $0x3,%rdx
    ad74:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ad7b:	0f b6 12             	movzbl (%rdx),%edx
    ad7e:	84 d2                	test   %dl,%dl
    ad80:	74 08                	je     ad8a <jstring_remove_chars+0x100>
    ad82:	48 89 c7             	mov    %rax,%rdi
    ad85:	e8 36 94 ff ff       	call   41c0 <__asan_report_load8@plt>
    ad8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad8e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ad92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad96:	48 8d 3d 83 8e 00 00 	lea    0x8e83(%rip),%rdi        # 13c20 <_IO_stdin_used+0xc20>
    ad9d:	48 89 c6             	mov    %rax,%rsi
    ada0:	b8 00 00 00 00       	mov    $0x0,%eax
    ada5:	ff d1                	call   *%rcx
    ada7:	b8 00 00 00 00       	mov    $0x0,%eax
    adac:	eb 2f                	jmp    addd <jstring_remove_chars+0x153>
    adae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    adb2:	48 89 c7             	mov    %rax,%rdi
    adb5:	e8 71 9d ff ff       	call   4b2b <jstring_length>
    adba:	89 c2                	mov    %eax,%edx
    adbc:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    adbf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adc3:	89 ce                	mov    %ecx,%esi
    adc5:	48 89 c7             	mov    %rax,%rdi
    adc8:	e8 24 fc ff ff       	call   a9f1 <jstring_remove_at>
    adcd:	85 c0                	test   %eax,%eax
    adcf:	75 07                	jne    add8 <jstring_remove_chars+0x14e>
    add1:	b8 00 00 00 00       	mov    $0x0,%eax
    add6:	eb 05                	jmp    addd <jstring_remove_chars+0x153>
    add8:	b8 01 00 00 00       	mov    $0x1,%eax
    addd:	c9                   	leave
    adde:	c3                   	ret

000000000000addf <jstring_remove_chars_all>:
    addf:	55                   	push   %rbp
    ade0:	48 89 e5             	mov    %rsp,%rbp
    ade3:	48 83 ec 20          	sub    $0x20,%rsp
    ade7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adeb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    adef:	8b 05 a3 04 01 00    	mov    0x104a3(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    adf5:	85 c0                	test   %eax,%eax
    adf7:	75 75                	jne    ae6e <jstring_remove_chars_all+0x8f>
    adf9:	4c 8b 05 40 e3 00 00 	mov    0xe340(%rip),%r8        # 19140 <jstring_log>
    ae00:	48 8d 15 99 87 00 00 	lea    0x8799(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    ae07:	48 8d 35 12 89 00 00 	lea    0x8912(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    ae0e:	48 8d 05 0b 88 00 00 	lea    0x880b(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    ae15:	b9 cb 04 00 00       	mov    $0x4cb,%ecx
    ae1a:	48 89 c7             	mov    %rax,%rdi
    ae1d:	b8 00 00 00 00       	mov    $0x0,%eax
    ae22:	41 ff d0             	call   *%r8
    ae25:	b9 00 00 00 00       	mov    $0x0,%ecx
    ae2a:	48 89 c8             	mov    %rcx,%rax
    ae2d:	48 89 c2             	mov    %rax,%rdx
    ae30:	48 c1 ea 03          	shr    $0x3,%rdx
    ae34:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ae3b:	0f b6 12             	movzbl (%rdx),%edx
    ae3e:	84 d2                	test   %dl,%dl
    ae40:	40 0f 95 c6          	setne  %sil
    ae44:	48 89 c7             	mov    %rax,%rdi
    ae47:	83 e7 07             	and    $0x7,%edi
    ae4a:	40 38 d7             	cmp    %dl,%dil
    ae4d:	0f 9d c2             	setge  %dl
    ae50:	21 f2                	and    %esi,%edx
    ae52:	84 d2                	test   %dl,%dl
    ae54:	74 08                	je     ae5e <jstring_remove_chars_all+0x7f>
    ae56:	48 89 c7             	mov    %rax,%rdi
    ae59:	e8 32 93 ff ff       	call   4190 <__asan_report_load1@plt>
    ae5e:	0f b6 01             	movzbl (%rcx),%eax
    ae61:	88 45 fb             	mov    %al,-0x5(%rbp)
    ae64:	b8 00 00 00 00       	mov    $0x0,%eax
    ae69:	e9 0d 01 00 00       	jmp    af7b <jstring_remove_chars_all+0x19c>
    ae6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae72:	48 89 c2             	mov    %rax,%rdx
    ae75:	48 c1 ea 03          	shr    $0x3,%rdx
    ae79:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ae80:	0f b7 12             	movzwl (%rdx),%edx
    ae83:	66 85 d2             	test   %dx,%dx
    ae86:	74 08                	je     ae90 <jstring_remove_chars_all+0xb1>
    ae88:	48 89 c7             	mov    %rax,%rdi
    ae8b:	e8 10 93 ff ff       	call   41a0 <__asan_report_load16@plt>
    ae90:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae98:	48 8b 08             	mov    (%rax),%rcx
    ae9b:	48 8b 40 08          	mov    0x8(%rax),%rax
    ae9f:	48 89 cf             	mov    %rcx,%rdi
    aea2:	48 89 c6             	mov    %rax,%rsi
    aea5:	e8 5f d1 ff ff       	call   8009 <jstring_index_of_raw>
    aeaa:	89 45 fc             	mov    %eax,-0x4(%rbp)
    aead:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    aeb1:	0f 89 b9 00 00 00    	jns    af70 <jstring_remove_chars_all+0x191>
    aeb7:	48 8b 0d 82 e2 00 00 	mov    0xe282(%rip),%rcx        # 19140 <jstring_log>
    aebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aec2:	48 83 c0 08          	add    $0x8,%rax
    aec6:	48 89 c2             	mov    %rax,%rdx
    aec9:	48 c1 ea 03          	shr    $0x3,%rdx
    aecd:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    aed4:	0f b6 12             	movzbl (%rdx),%edx
    aed7:	84 d2                	test   %dl,%dl
    aed9:	74 08                	je     aee3 <jstring_remove_chars_all+0x104>
    aedb:	48 89 c7             	mov    %rax,%rdi
    aede:	e8 dd 92 ff ff       	call   41c0 <__asan_report_load8@plt>
    aee3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aee7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    aeeb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aeef:	48 8d 3d 2a 8d 00 00 	lea    0x8d2a(%rip),%rdi        # 13c20 <_IO_stdin_used+0xc20>
    aef6:	48 89 c6             	mov    %rax,%rsi
    aef9:	b8 00 00 00 00       	mov    $0x0,%eax
    aefe:	ff d1                	call   *%rcx
    af00:	b8 00 00 00 00       	mov    $0x0,%eax
    af05:	eb 74                	jmp    af7b <jstring_remove_chars_all+0x19c>
    af07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af0b:	48 89 c7             	mov    %rax,%rdi
    af0e:	e8 18 9c ff ff       	call   4b2b <jstring_length>
    af13:	89 c2                	mov    %eax,%edx
    af15:	8b 4d fc             	mov    -0x4(%rbp),%ecx
    af18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af1c:	89 ce                	mov    %ecx,%esi
    af1e:	48 89 c7             	mov    %rax,%rdi
    af21:	e8 cb fa ff ff       	call   a9f1 <jstring_remove_at>
    af26:	85 c0                	test   %eax,%eax
    af28:	75 07                	jne    af31 <jstring_remove_chars_all+0x152>
    af2a:	b8 00 00 00 00       	mov    $0x0,%eax
    af2f:	eb 4a                	jmp    af7b <jstring_remove_chars_all+0x19c>
    af31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af35:	48 89 c2             	mov    %rax,%rdx
    af38:	48 c1 ea 03          	shr    $0x3,%rdx
    af3c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    af43:	0f b7 12             	movzwl (%rdx),%edx
    af46:	66 85 d2             	test   %dx,%dx
    af49:	74 08                	je     af53 <jstring_remove_chars_all+0x174>
    af4b:	48 89 c7             	mov    %rax,%rdi
    af4e:	e8 4d 92 ff ff       	call   41a0 <__asan_report_load16@plt>
    af53:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    af57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af5b:	48 8b 08             	mov    (%rax),%rcx
    af5e:	48 8b 40 08          	mov    0x8(%rax),%rax
    af62:	48 89 cf             	mov    %rcx,%rdi
    af65:	48 89 c6             	mov    %rax,%rsi
    af68:	e8 9c d0 ff ff       	call   8009 <jstring_index_of_raw>
    af6d:	89 45 fc             	mov    %eax,-0x4(%rbp)
    af70:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    af74:	7f 91                	jg     af07 <jstring_remove_chars_all+0x128>
    af76:	b8 01 00 00 00       	mov    $0x1,%eax
    af7b:	c9                   	leave
    af7c:	c3                   	ret

000000000000af7d <jstring_remove_jstring>:
    af7d:	55                   	push   %rbp
    af7e:	48 89 e5             	mov    %rsp,%rbp
    af81:	41 56                	push   %r14
    af83:	41 55                	push   %r13
    af85:	41 54                	push   %r12
    af87:	53                   	push   %rbx
    af88:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    af8f:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    af96:	48 89 f0             	mov    %rsi,%rax
    af99:	48 89 d1             	mov    %rdx,%rcx
    af9c:	48 89 c0             	mov    %rax,%rax
    af9f:	ba 00 00 00 00       	mov    $0x0,%edx
    afa4:	48 89 ca             	mov    %rcx,%rdx
    afa7:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    afae:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    afb5:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    afb9:	49 89 de             	mov    %rbx,%r14
    afbc:	83 3d 9d 02 01 00 00 	cmpl   $0x0,0x1029d(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    afc3:	74 12                	je     afd7 <jstring_remove_jstring+0x5a>
    afc5:	bf 40 00 00 00       	mov    $0x40,%edi
    afca:	e8 d1 90 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    afcf:	48 85 c0             	test   %rax,%rax
    afd2:	74 03                	je     afd7 <jstring_remove_jstring+0x5a>
    afd4:	48 89 c3             	mov    %rax,%rbx
    afd7:	48 8d 43 60          	lea    0x60(%rbx),%rax
    afdb:	49 89 c4             	mov    %rax,%r12
    afde:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    afe5:	48 8d 05 94 8c 00 00 	lea    0x8c94(%rip),%rax        # 13c80 <_IO_stdin_used+0xc80>
    afec:	48 89 43 08          	mov    %rax,0x8(%rbx)
    aff0:	48 8d 05 86 ff ff ff 	lea    -0x7a(%rip),%rax        # af7d <jstring_remove_jstring>
    aff7:	48 89 43 10          	mov    %rax,0x10(%rbx)
    affb:	49 89 dd             	mov    %rbx,%r13
    affe:	49 c1 ed 03          	shr    $0x3,%r13
    b002:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    b009:	f1 f1 f1 f1 
    b00d:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    b014:	00 00 f3 f3 
    b018:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b01f:	00 00 
    b021:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b025:	31 c0                	xor    %eax,%eax
    b027:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b02e:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    b035:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    b03a:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    b03f:	8b 05 53 02 01 00    	mov    0x10253(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    b045:	85 c0                	test   %eax,%eax
    b047:	75 78                	jne    b0c1 <jstring_remove_jstring+0x144>
    b049:	4c 8b 05 f0 e0 00 00 	mov    0xe0f0(%rip),%r8        # 19140 <jstring_log>
    b050:	48 8d 15 49 85 00 00 	lea    0x8549(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    b057:	48 8d 35 c2 86 00 00 	lea    0x86c2(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    b05e:	48 8d 05 bb 85 00 00 	lea    0x85bb(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    b065:	b9 e9 04 00 00       	mov    $0x4e9,%ecx
    b06a:	48 89 c7             	mov    %rax,%rdi
    b06d:	b8 00 00 00 00       	mov    $0x0,%eax
    b072:	41 ff d0             	call   *%r8
    b075:	b9 00 00 00 00       	mov    $0x0,%ecx
    b07a:	48 89 c8             	mov    %rcx,%rax
    b07d:	48 89 c2             	mov    %rax,%rdx
    b080:	48 c1 ea 03          	shr    $0x3,%rdx
    b084:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b08b:	0f b6 12             	movzbl (%rdx),%edx
    b08e:	84 d2                	test   %dl,%dl
    b090:	40 0f 95 c6          	setne  %sil
    b094:	48 89 c7             	mov    %rax,%rdi
    b097:	83 e7 07             	and    $0x7,%edi
    b09a:	40 38 d7             	cmp    %dl,%dil
    b09d:	0f 9d c2             	setge  %dl
    b0a0:	21 f2                	and    %esi,%edx
    b0a2:	84 d2                	test   %dl,%dl
    b0a4:	74 08                	je     b0ae <jstring_remove_jstring+0x131>
    b0a6:	48 89 c7             	mov    %rax,%rdi
    b0a9:	e8 e2 90 ff ff       	call   4190 <__asan_report_load1@plt>
    b0ae:	0f b6 01             	movzbl (%rcx),%eax
    b0b1:	88 85 7b ff ff ff    	mov    %al,-0x85(%rbp)
    b0b7:	b8 00 00 00 00       	mov    $0x0,%eax
    b0bc:	e9 31 01 00 00       	jmp    b1f2 <jstring_remove_jstring+0x275>
    b0c1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b0c8:	48 89 c2             	mov    %rax,%rdx
    b0cb:	48 c1 ea 03          	shr    $0x3,%rdx
    b0cf:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b0d6:	0f b7 12             	movzwl (%rdx),%edx
    b0d9:	66 85 d2             	test   %dx,%dx
    b0dc:	74 08                	je     b0e6 <jstring_remove_jstring+0x169>
    b0de:	48 89 c7             	mov    %rax,%rdi
    b0e1:	e8 ba 90 ff ff       	call   41a0 <__asan_report_load16@plt>
    b0e6:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
    b0eb:	49 8b 54 24 c8       	mov    -0x38(%r12),%rdx
    b0f0:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    b0f7:	48 8b 39             	mov    (%rcx),%rdi
    b0fa:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    b0fe:	48 89 d1             	mov    %rdx,%rcx
    b101:	48 89 c2             	mov    %rax,%rdx
    b104:	e8 97 d1 ff ff       	call   82a0 <jstring_index_of_jstring>
    b109:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    b10f:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    b116:	79 7e                	jns    b196 <jstring_remove_jstring+0x219>
    b118:	48 8b 0d 21 e0 00 00 	mov    0xe021(%rip),%rcx        # 19140 <jstring_log>
    b11f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b126:	48 83 c0 08          	add    $0x8,%rax
    b12a:	48 89 c2             	mov    %rax,%rdx
    b12d:	48 c1 ea 03          	shr    $0x3,%rdx
    b131:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b138:	0f b6 12             	movzbl (%rdx),%edx
    b13b:	84 d2                	test   %dl,%dl
    b13d:	74 08                	je     b147 <jstring_remove_jstring+0x1ca>
    b13f:	48 89 c7             	mov    %rax,%rdi
    b142:	e8 79 90 ff ff       	call   41c0 <__asan_report_load8@plt>
    b147:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b14e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b152:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    b157:	48 83 c0 08          	add    $0x8,%rax
    b15b:	48 89 c6             	mov    %rax,%rsi
    b15e:	48 c1 ee 03          	shr    $0x3,%rsi
    b162:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    b169:	0f b6 36             	movzbl (%rsi),%esi
    b16c:	40 84 f6             	test   %sil,%sil
    b16f:	74 08                	je     b179 <jstring_remove_jstring+0x1fc>
    b171:	48 89 c7             	mov    %rax,%rdi
    b174:	e8 47 90 ff ff       	call   41c0 <__asan_report_load8@plt>
    b179:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    b17e:	48 8d 3d 9b 8a 00 00 	lea    0x8a9b(%rip),%rdi        # 13c20 <_IO_stdin_used+0xc20>
    b185:	48 89 c6             	mov    %rax,%rsi
    b188:	b8 00 00 00 00       	mov    $0x0,%eax
    b18d:	ff d1                	call   *%rcx
    b18f:	b8 00 00 00 00       	mov    $0x0,%eax
    b194:	eb 5c                	jmp    b1f2 <jstring_remove_jstring+0x275>
    b196:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    b19b:	48 89 c2             	mov    %rax,%rdx
    b19e:	48 89 d0             	mov    %rdx,%rax
    b1a1:	48 c1 e8 03          	shr    $0x3,%rax
    b1a5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    b1ab:	0f b6 00             	movzbl (%rax),%eax
    b1ae:	84 c0                	test   %al,%al
    b1b0:	0f 95 c1             	setne  %cl
    b1b3:	3c 03                	cmp    $0x3,%al
    b1b5:	0f 9e c0             	setle  %al
    b1b8:	21 c8                	and    %ecx,%eax
    b1ba:	84 c0                	test   %al,%al
    b1bc:	74 08                	je     b1c6 <jstring_remove_jstring+0x249>
    b1be:	48 89 d7             	mov    %rdx,%rdi
    b1c1:	e8 2a 8f ff ff       	call   40f0 <__asan_report_load4@plt>
    b1c6:	41 8b 54 24 c0       	mov    -0x40(%r12),%edx
    b1cb:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
    b1d1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b1d8:	89 ce                	mov    %ecx,%esi
    b1da:	48 89 c7             	mov    %rax,%rdi
    b1dd:	e8 0f f8 ff ff       	call   a9f1 <jstring_remove_at>
    b1e2:	85 c0                	test   %eax,%eax
    b1e4:	75 07                	jne    b1ed <jstring_remove_jstring+0x270>
    b1e6:	b8 00 00 00 00       	mov    $0x0,%eax
    b1eb:	eb 05                	jmp    b1f2 <jstring_remove_jstring+0x275>
    b1ed:	b8 01 00 00 00       	mov    $0x1,%eax
    b1f2:	89 c2                	mov    %eax,%edx
    b1f4:	49 39 de             	cmp    %rbx,%r14
    b1f7:	74 21                	je     b21a <jstring_remove_jstring+0x29d>
    b1f9:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    b200:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    b207:	f5 f5 f5 
    b20a:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    b211:	48 8b 43 38          	mov    0x38(%rbx),%rax
    b215:	c6 00 00             	movb   $0x0,(%rax)
    b218:	eb 0b                	jmp    b225 <jstring_remove_jstring+0x2a8>
    b21a:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    b221:	00 00 00 00 
    b225:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b229:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b230:	00 00 
    b232:	74 05                	je     b239 <jstring_remove_jstring+0x2bc>
    b234:	e8 27 8f ff ff       	call   4160 <__stack_chk_fail@plt>
    b239:	89 d0                	mov    %edx,%eax
    b23b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    b242:	5b                   	pop    %rbx
    b243:	41 5c                	pop    %r12
    b245:	41 5d                	pop    %r13
    b247:	41 5e                	pop    %r14
    b249:	5d                   	pop    %rbp
    b24a:	c3                   	ret

000000000000b24b <jstring_remove_jstring_all>:
    b24b:	55                   	push   %rbp
    b24c:	48 89 e5             	mov    %rsp,%rbp
    b24f:	41 56                	push   %r14
    b251:	41 55                	push   %r13
    b253:	41 54                	push   %r12
    b255:	53                   	push   %rbx
    b256:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    b25d:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    b264:	48 89 f0             	mov    %rsi,%rax
    b267:	48 89 d1             	mov    %rdx,%rcx
    b26a:	48 89 c0             	mov    %rax,%rax
    b26d:	ba 00 00 00 00       	mov    $0x0,%edx
    b272:	48 89 ca             	mov    %rcx,%rdx
    b275:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    b27c:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    b283:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    b287:	49 89 de             	mov    %rbx,%r14
    b28a:	83 3d cf ff 00 00 00 	cmpl   $0x0,0xffcf(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    b291:	74 12                	je     b2a5 <jstring_remove_jstring_all+0x5a>
    b293:	bf 40 00 00 00       	mov    $0x40,%edi
    b298:	e8 03 8e ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    b29d:	48 85 c0             	test   %rax,%rax
    b2a0:	74 03                	je     b2a5 <jstring_remove_jstring_all+0x5a>
    b2a2:	48 89 c3             	mov    %rax,%rbx
    b2a5:	48 8d 43 60          	lea    0x60(%rbx),%rax
    b2a9:	49 89 c4             	mov    %rax,%r12
    b2ac:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    b2b3:	48 8d 05 e4 89 00 00 	lea    0x89e4(%rip),%rax        # 13c9e <_IO_stdin_used+0xc9e>
    b2ba:	48 89 43 08          	mov    %rax,0x8(%rbx)
    b2be:	48 8d 05 86 ff ff ff 	lea    -0x7a(%rip),%rax        # b24b <jstring_remove_jstring_all>
    b2c5:	48 89 43 10          	mov    %rax,0x10(%rbx)
    b2c9:	49 89 dd             	mov    %rbx,%r13
    b2cc:	49 c1 ed 03          	shr    $0x3,%r13
    b2d0:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    b2d7:	f1 f1 f1 f1 
    b2db:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    b2e2:	00 00 f3 f3 
    b2e6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b2ed:	00 00 
    b2ef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b2f3:	31 c0                	xor    %eax,%eax
    b2f5:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b2fc:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    b303:	49 89 44 24 c0       	mov    %rax,-0x40(%r12)
    b308:	49 89 54 24 c8       	mov    %rdx,-0x38(%r12)
    b30d:	8b 05 85 ff 00 00    	mov    0xff85(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    b313:	85 c0                	test   %eax,%eax
    b315:	75 78                	jne    b38f <jstring_remove_jstring_all+0x144>
    b317:	4c 8b 05 22 de 00 00 	mov    0xde22(%rip),%r8        # 19140 <jstring_log>
    b31e:	48 8d 15 7b 82 00 00 	lea    0x827b(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    b325:	48 8d 35 f4 83 00 00 	lea    0x83f4(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    b32c:	48 8d 05 ed 82 00 00 	lea    0x82ed(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    b333:	b9 04 05 00 00       	mov    $0x504,%ecx
    b338:	48 89 c7             	mov    %rax,%rdi
    b33b:	b8 00 00 00 00       	mov    $0x0,%eax
    b340:	41 ff d0             	call   *%r8
    b343:	b9 00 00 00 00       	mov    $0x0,%ecx
    b348:	48 89 c8             	mov    %rcx,%rax
    b34b:	48 89 c2             	mov    %rax,%rdx
    b34e:	48 c1 ea 03          	shr    $0x3,%rdx
    b352:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b359:	0f b6 12             	movzbl (%rdx),%edx
    b35c:	84 d2                	test   %dl,%dl
    b35e:	40 0f 95 c6          	setne  %sil
    b362:	48 89 c7             	mov    %rax,%rdi
    b365:	83 e7 07             	and    $0x7,%edi
    b368:	40 38 d7             	cmp    %dl,%dil
    b36b:	0f 9d c2             	setge  %dl
    b36e:	21 f2                	and    %esi,%edx
    b370:	84 d2                	test   %dl,%dl
    b372:	74 08                	je     b37c <jstring_remove_jstring_all+0x131>
    b374:	48 89 c7             	mov    %rax,%rdi
    b377:	e8 14 8e ff ff       	call   4190 <__asan_report_load1@plt>
    b37c:	0f b6 01             	movzbl (%rcx),%eax
    b37f:	88 85 7b ff ff ff    	mov    %al,-0x85(%rbp)
    b385:	b8 00 00 00 00       	mov    $0x0,%eax
    b38a:	e9 93 01 00 00       	jmp    b522 <jstring_remove_jstring_all+0x2d7>
    b38f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b396:	48 89 c2             	mov    %rax,%rdx
    b399:	48 c1 ea 03          	shr    $0x3,%rdx
    b39d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b3a4:	0f b7 12             	movzwl (%rdx),%edx
    b3a7:	66 85 d2             	test   %dx,%dx
    b3aa:	74 08                	je     b3b4 <jstring_remove_jstring_all+0x169>
    b3ac:	48 89 c7             	mov    %rax,%rdi
    b3af:	e8 ec 8d ff ff       	call   41a0 <__asan_report_load16@plt>
    b3b4:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
    b3b9:	49 8b 54 24 c8       	mov    -0x38(%r12),%rdx
    b3be:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    b3c5:	48 8b 39             	mov    (%rcx),%rdi
    b3c8:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    b3cc:	48 89 d1             	mov    %rdx,%rcx
    b3cf:	48 89 c2             	mov    %rax,%rdx
    b3d2:	e8 c9 ce ff ff       	call   82a0 <jstring_index_of_jstring>
    b3d7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    b3dd:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    b3e4:	0f 89 26 01 00 00    	jns    b510 <jstring_remove_jstring_all+0x2c5>
    b3ea:	48 8b 0d 4f dd 00 00 	mov    0xdd4f(%rip),%rcx        # 19140 <jstring_log>
    b3f1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b3f8:	48 83 c0 08          	add    $0x8,%rax
    b3fc:	48 89 c2             	mov    %rax,%rdx
    b3ff:	48 c1 ea 03          	shr    $0x3,%rdx
    b403:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b40a:	0f b6 12             	movzbl (%rdx),%edx
    b40d:	84 d2                	test   %dl,%dl
    b40f:	74 08                	je     b419 <jstring_remove_jstring_all+0x1ce>
    b411:	48 89 c7             	mov    %rax,%rdi
    b414:	e8 a7 8d ff ff       	call   41c0 <__asan_report_load8@plt>
    b419:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b420:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b424:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    b429:	48 83 c0 08          	add    $0x8,%rax
    b42d:	48 89 c6             	mov    %rax,%rsi
    b430:	48 c1 ee 03          	shr    $0x3,%rsi
    b434:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    b43b:	0f b6 36             	movzbl (%rsi),%esi
    b43e:	40 84 f6             	test   %sil,%sil
    b441:	74 08                	je     b44b <jstring_remove_jstring_all+0x200>
    b443:	48 89 c7             	mov    %rax,%rdi
    b446:	e8 75 8d ff ff       	call   41c0 <__asan_report_load8@plt>
    b44b:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    b450:	48 8d 3d c9 87 00 00 	lea    0x87c9(%rip),%rdi        # 13c20 <_IO_stdin_used+0xc20>
    b457:	48 89 c6             	mov    %rax,%rsi
    b45a:	b8 00 00 00 00       	mov    $0x0,%eax
    b45f:	ff d1                	call   *%rcx
    b461:	b8 00 00 00 00       	mov    $0x0,%eax
    b466:	e9 b7 00 00 00       	jmp    b522 <jstring_remove_jstring_all+0x2d7>
    b46b:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    b470:	48 89 c2             	mov    %rax,%rdx
    b473:	48 89 d0             	mov    %rdx,%rax
    b476:	48 c1 e8 03          	shr    $0x3,%rax
    b47a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    b480:	0f b6 00             	movzbl (%rax),%eax
    b483:	84 c0                	test   %al,%al
    b485:	0f 95 c1             	setne  %cl
    b488:	3c 03                	cmp    $0x3,%al
    b48a:	0f 9e c0             	setle  %al
    b48d:	21 c8                	and    %ecx,%eax
    b48f:	84 c0                	test   %al,%al
    b491:	74 08                	je     b49b <jstring_remove_jstring_all+0x250>
    b493:	48 89 d7             	mov    %rdx,%rdi
    b496:	e8 55 8c ff ff       	call   40f0 <__asan_report_load4@plt>
    b49b:	41 8b 54 24 c0       	mov    -0x40(%r12),%edx
    b4a0:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
    b4a6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b4ad:	89 ce                	mov    %ecx,%esi
    b4af:	48 89 c7             	mov    %rax,%rdi
    b4b2:	e8 3a f5 ff ff       	call   a9f1 <jstring_remove_at>
    b4b7:	85 c0                	test   %eax,%eax
    b4b9:	75 07                	jne    b4c2 <jstring_remove_jstring_all+0x277>
    b4bb:	b8 00 00 00 00       	mov    $0x0,%eax
    b4c0:	eb 60                	jmp    b522 <jstring_remove_jstring_all+0x2d7>
    b4c2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b4c9:	48 89 c2             	mov    %rax,%rdx
    b4cc:	48 c1 ea 03          	shr    $0x3,%rdx
    b4d0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b4d7:	0f b7 12             	movzwl (%rdx),%edx
    b4da:	66 85 d2             	test   %dx,%dx
    b4dd:	74 08                	je     b4e7 <jstring_remove_jstring_all+0x29c>
    b4df:	48 89 c7             	mov    %rax,%rdi
    b4e2:	e8 b9 8c ff ff       	call   41a0 <__asan_report_load16@plt>
    b4e7:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
    b4ec:	49 8b 54 24 c8       	mov    -0x38(%r12),%rdx
    b4f1:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    b4f8:	48 8b 39             	mov    (%rcx),%rdi
    b4fb:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    b4ff:	48 89 d1             	mov    %rdx,%rcx
    b502:	48 89 c2             	mov    %rax,%rdx
    b505:	e8 96 cd ff ff       	call   82a0 <jstring_index_of_jstring>
    b50a:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    b510:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    b517:	0f 8f 4e ff ff ff    	jg     b46b <jstring_remove_jstring_all+0x220>
    b51d:	b8 01 00 00 00       	mov    $0x1,%eax
    b522:	89 c2                	mov    %eax,%edx
    b524:	49 39 de             	cmp    %rbx,%r14
    b527:	74 21                	je     b54a <jstring_remove_jstring_all+0x2ff>
    b529:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    b530:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    b537:	f5 f5 f5 
    b53a:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    b541:	48 8b 43 38          	mov    0x38(%rbx),%rax
    b545:	c6 00 00             	movb   $0x0,(%rax)
    b548:	eb 0b                	jmp    b555 <jstring_remove_jstring_all+0x30a>
    b54a:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    b551:	00 00 00 00 
    b555:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b559:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b560:	00 00 
    b562:	74 05                	je     b569 <jstring_remove_jstring_all+0x31e>
    b564:	e8 f7 8b ff ff       	call   4160 <__stack_chk_fail@plt>
    b569:	89 d0                	mov    %edx,%eax
    b56b:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    b572:	5b                   	pop    %rbx
    b573:	41 5c                	pop    %r12
    b575:	41 5d                	pop    %r13
    b577:	41 5e                	pop    %r14
    b579:	5d                   	pop    %rbp
    b57a:	c3                   	ret

000000000000b57b <jstring_replace_at_raw>:
    b57b:	55                   	push   %rbp
    b57c:	48 89 e5             	mov    %rsp,%rbp
    b57f:	48 83 ec 30          	sub    $0x30,%rsp
    b583:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b587:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    b58a:	89 55 e0             	mov    %edx,-0x20(%rbp)
    b58d:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    b591:	8b 05 01 fd 00 00    	mov    0xfd01(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    b597:	85 c0                	test   %eax,%eax
    b599:	75 72                	jne    b60d <jstring_replace_at_raw+0x92>
    b59b:	4c 8b 05 9e db 00 00 	mov    0xdb9e(%rip),%r8        # 19140 <jstring_log>
    b5a2:	48 8d 15 f7 7f 00 00 	lea    0x7ff7(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    b5a9:	48 8d 35 70 81 00 00 	lea    0x8170(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    b5b0:	48 8d 05 69 80 00 00 	lea    0x8069(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    b5b7:	b9 29 05 00 00       	mov    $0x529,%ecx
    b5bc:	48 89 c7             	mov    %rax,%rdi
    b5bf:	b8 00 00 00 00       	mov    $0x0,%eax
    b5c4:	41 ff d0             	call   *%r8
    b5c7:	b9 00 00 00 00       	mov    $0x0,%ecx
    b5cc:	48 89 c8             	mov    %rcx,%rax
    b5cf:	48 89 c2             	mov    %rax,%rdx
    b5d2:	48 c1 ea 03          	shr    $0x3,%rdx
    b5d6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b5dd:	0f b6 12             	movzbl (%rdx),%edx
    b5e0:	84 d2                	test   %dl,%dl
    b5e2:	40 0f 95 c6          	setne  %sil
    b5e6:	48 89 c7             	mov    %rax,%rdi
    b5e9:	83 e7 07             	and    $0x7,%edi
    b5ec:	40 38 d7             	cmp    %dl,%dil
    b5ef:	0f 9d c2             	setge  %dl
    b5f2:	21 f2                	and    %esi,%edx
    b5f4:	84 d2                	test   %dl,%dl
    b5f6:	74 08                	je     b600 <jstring_replace_at_raw+0x85>
    b5f8:	48 89 c7             	mov    %rax,%rdi
    b5fb:	e8 90 8b ff ff       	call   4190 <__asan_report_load1@plt>
    b600:	0f b6 01             	movzbl (%rcx),%eax
    b603:	88 45 ff             	mov    %al,-0x1(%rbp)
    b606:	b8 00 00 00 00       	mov    $0x0,%eax
    b60b:	eb 45                	jmp    b652 <jstring_replace_at_raw+0xd7>
    b60d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    b610:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    b613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b617:	89 ce                	mov    %ecx,%esi
    b619:	48 89 c7             	mov    %rax,%rdi
    b61c:	e8 d0 f3 ff ff       	call   a9f1 <jstring_remove_at>
    b621:	85 c0                	test   %eax,%eax
    b623:	75 07                	jne    b62c <jstring_replace_at_raw+0xb1>
    b625:	b8 00 00 00 00       	mov    $0x0,%eax
    b62a:	eb 26                	jmp    b652 <jstring_replace_at_raw+0xd7>
    b62c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    b62f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    b633:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b637:	48 89 ce             	mov    %rcx,%rsi
    b63a:	48 89 c7             	mov    %rax,%rdi
    b63d:	e8 58 e3 ff ff       	call   999a <jstring_insert_chars_at>
    b642:	85 c0                	test   %eax,%eax
    b644:	75 07                	jne    b64d <jstring_replace_at_raw+0xd2>
    b646:	b8 00 00 00 00       	mov    $0x0,%eax
    b64b:	eb 05                	jmp    b652 <jstring_replace_at_raw+0xd7>
    b64d:	b8 01 00 00 00       	mov    $0x1,%eax
    b652:	c9                   	leave
    b653:	c3                   	ret

000000000000b654 <jstring_replace_at_jstring>:
    b654:	55                   	push   %rbp
    b655:	48 89 e5             	mov    %rsp,%rbp
    b658:	48 83 ec 30          	sub    $0x30,%rsp
    b65c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b660:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    b663:	89 55 e0             	mov    %edx,-0x20(%rbp)
    b666:	48 89 c8             	mov    %rcx,%rax
    b669:	4c 89 c1             	mov    %r8,%rcx
    b66c:	48 89 c0             	mov    %rax,%rax
    b66f:	ba 00 00 00 00       	mov    $0x0,%edx
    b674:	48 89 ca             	mov    %rcx,%rdx
    b677:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b67b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b67f:	8b 05 13 fc 00 00    	mov    0xfc13(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    b685:	85 c0                	test   %eax,%eax
    b687:	75 72                	jne    b6fb <jstring_replace_at_jstring+0xa7>
    b689:	4c 8b 05 b0 da 00 00 	mov    0xdab0(%rip),%r8        # 19140 <jstring_log>
    b690:	48 8d 15 09 7f 00 00 	lea    0x7f09(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    b697:	48 8d 35 82 80 00 00 	lea    0x8082(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    b69e:	48 8d 05 7b 7f 00 00 	lea    0x7f7b(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    b6a5:	b9 44 05 00 00       	mov    $0x544,%ecx
    b6aa:	48 89 c7             	mov    %rax,%rdi
    b6ad:	b8 00 00 00 00       	mov    $0x0,%eax
    b6b2:	41 ff d0             	call   *%r8
    b6b5:	b9 00 00 00 00       	mov    $0x0,%ecx
    b6ba:	48 89 c8             	mov    %rcx,%rax
    b6bd:	48 89 c2             	mov    %rax,%rdx
    b6c0:	48 c1 ea 03          	shr    $0x3,%rdx
    b6c4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b6cb:	0f b6 12             	movzbl (%rdx),%edx
    b6ce:	84 d2                	test   %dl,%dl
    b6d0:	40 0f 95 c6          	setne  %sil
    b6d4:	48 89 c7             	mov    %rax,%rdi
    b6d7:	83 e7 07             	and    $0x7,%edi
    b6da:	40 38 d7             	cmp    %dl,%dil
    b6dd:	0f 9d c2             	setge  %dl
    b6e0:	21 f2                	and    %esi,%edx
    b6e2:	84 d2                	test   %dl,%dl
    b6e4:	74 08                	je     b6ee <jstring_replace_at_jstring+0x9a>
    b6e6:	48 89 c7             	mov    %rax,%rdi
    b6e9:	e8 a2 8a ff ff       	call   4190 <__asan_report_load1@plt>
    b6ee:	0f b6 01             	movzbl (%rcx),%eax
    b6f1:	88 45 ff             	mov    %al,-0x1(%rbp)
    b6f4:	b8 00 00 00 00       	mov    $0x0,%eax
    b6f9:	eb 46                	jmp    b741 <jstring_replace_at_jstring+0xed>
    b6fb:	8b 55 e0             	mov    -0x20(%rbp),%edx
    b6fe:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    b701:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b705:	89 ce                	mov    %ecx,%esi
    b707:	48 89 c7             	mov    %rax,%rdi
    b70a:	e8 e2 f2 ff ff       	call   a9f1 <jstring_remove_at>
    b70f:	85 c0                	test   %eax,%eax
    b711:	75 07                	jne    b71a <jstring_replace_at_jstring+0xc6>
    b713:	b8 00 00 00 00       	mov    $0x0,%eax
    b718:	eb 27                	jmp    b741 <jstring_replace_at_jstring+0xed>
    b71a:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    b71d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    b721:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b725:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b729:	48 89 c7             	mov    %rax,%rdi
    b72c:	e8 13 e9 ff ff       	call   a044 <jstring_insert_jstring_at>
    b731:	85 c0                	test   %eax,%eax
    b733:	75 07                	jne    b73c <jstring_replace_at_jstring+0xe8>
    b735:	b8 00 00 00 00       	mov    $0x0,%eax
    b73a:	eb 05                	jmp    b741 <jstring_replace_at_jstring+0xed>
    b73c:	b8 01 00 00 00       	mov    $0x1,%eax
    b741:	c9                   	leave
    b742:	c3                   	ret

000000000000b743 <jstring_copy_chars>:
    b743:	55                   	push   %rbp
    b744:	48 89 e5             	mov    %rsp,%rbp
    b747:	48 83 ec 30          	sub    $0x30,%rsp
    b74b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b74f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b753:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b757:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b75e:	00 
    b75f:	e9 9e 00 00 00       	jmp    b802 <jstring_copy_chars+0xbf>
    b764:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b768:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b76c:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    b770:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b778:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b77c:	48 89 f0             	mov    %rsi,%rax
    b77f:	48 89 c2             	mov    %rax,%rdx
    b782:	48 c1 ea 03          	shr    $0x3,%rdx
    b786:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b78d:	0f b6 12             	movzbl (%rdx),%edx
    b790:	84 d2                	test   %dl,%dl
    b792:	40 0f 95 c7          	setne  %dil
    b796:	49 89 c0             	mov    %rax,%r8
    b799:	41 83 e0 07          	and    $0x7,%r8d
    b79d:	41 38 d0             	cmp    %dl,%r8b
    b7a0:	0f 9d c2             	setge  %dl
    b7a3:	21 fa                	and    %edi,%edx
    b7a5:	84 d2                	test   %dl,%dl
    b7a7:	74 08                	je     b7b1 <jstring_copy_chars+0x6e>
    b7a9:	48 89 c7             	mov    %rax,%rdi
    b7ac:	e8 df 89 ff ff       	call   4190 <__asan_report_load1@plt>
    b7b1:	0f b6 36             	movzbl (%rsi),%esi
    b7b4:	48 89 c8             	mov    %rcx,%rax
    b7b7:	48 89 c2             	mov    %rax,%rdx
    b7ba:	48 c1 ea 03          	shr    $0x3,%rdx
    b7be:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b7c5:	0f b6 12             	movzbl (%rdx),%edx
    b7c8:	84 d2                	test   %dl,%dl
    b7ca:	40 0f 95 c7          	setne  %dil
    b7ce:	49 89 c0             	mov    %rax,%r8
    b7d1:	41 83 e0 07          	and    $0x7,%r8d
    b7d5:	41 38 d0             	cmp    %dl,%r8b
    b7d8:	0f 9d c2             	setge  %dl
    b7db:	21 fa                	and    %edi,%edx
    b7dd:	84 d2                	test   %dl,%dl
    b7df:	74 08                	je     b7e9 <jstring_copy_chars+0xa6>
    b7e1:	48 89 c7             	mov    %rax,%rdi
    b7e4:	e8 c7 89 ff ff       	call   41b0 <__asan_report_store1@plt>
    b7e9:	40 88 31             	mov    %sil,(%rcx)
    b7ec:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b7f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b7f9:	72 07                	jb     b802 <jstring_copy_chars+0xbf>
    b7fb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    b800:	75 4d                	jne    b84f <jstring_copy_chars+0x10c>
    b802:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b80a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b80e:	48 89 c8             	mov    %rcx,%rax
    b811:	48 89 c2             	mov    %rax,%rdx
    b814:	48 c1 ea 03          	shr    $0x3,%rdx
    b818:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b81f:	0f b6 12             	movzbl (%rdx),%edx
    b822:	84 d2                	test   %dl,%dl
    b824:	40 0f 95 c6          	setne  %sil
    b828:	48 89 c7             	mov    %rax,%rdi
    b82b:	83 e7 07             	and    $0x7,%edi
    b82e:	40 38 d7             	cmp    %dl,%dil
    b831:	0f 9d c2             	setge  %dl
    b834:	21 f2                	and    %esi,%edx
    b836:	84 d2                	test   %dl,%dl
    b838:	74 08                	je     b842 <jstring_copy_chars+0xff>
    b83a:	48 89 c7             	mov    %rax,%rdi
    b83d:	e8 4e 89 ff ff       	call   4190 <__asan_report_load1@plt>
    b842:	0f b6 01             	movzbl (%rcx),%eax
    b845:	84 c0                	test   %al,%al
    b847:	0f 85 17 ff ff ff    	jne    b764 <jstring_copy_chars+0x21>
    b84d:	eb 01                	jmp    b850 <jstring_copy_chars+0x10d>
    b84f:	90                   	nop
    b850:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b858:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    b85c:	48 89 c8             	mov    %rcx,%rax
    b85f:	48 89 c2             	mov    %rax,%rdx
    b862:	48 c1 ea 03          	shr    $0x3,%rdx
    b866:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b86d:	0f b6 12             	movzbl (%rdx),%edx
    b870:	84 d2                	test   %dl,%dl
    b872:	40 0f 95 c6          	setne  %sil
    b876:	48 89 c7             	mov    %rax,%rdi
    b879:	83 e7 07             	and    $0x7,%edi
    b87c:	40 38 d7             	cmp    %dl,%dil
    b87f:	0f 9d c2             	setge  %dl
    b882:	21 f2                	and    %esi,%edx
    b884:	84 d2                	test   %dl,%dl
    b886:	74 08                	je     b890 <jstring_copy_chars+0x14d>
    b888:	48 89 c7             	mov    %rax,%rdi
    b88b:	e8 20 89 ff ff       	call   41b0 <__asan_report_store1@plt>
    b890:	c6 01 00             	movb   $0x0,(%rcx)
    b893:	b8 01 00 00 00       	mov    $0x1,%eax
    b898:	c9                   	leave
    b899:	c3                   	ret

000000000000b89a <jstring_copy_to_buffer>:
    b89a:	55                   	push   %rbp
    b89b:	48 89 e5             	mov    %rsp,%rbp
    b89e:	41 55                	push   %r13
    b8a0:	41 54                	push   %r12
    b8a2:	53                   	push   %rbx
    b8a3:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    b8aa:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    b8b1:	89 b5 64 ff ff ff    	mov    %esi,-0x9c(%rbp)
    b8b7:	48 89 95 50 ff ff ff 	mov    %rdx,-0xb0(%rbp)
    b8be:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)
    b8c5:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    b8c9:	49 89 dd             	mov    %rbx,%r13
    b8cc:	83 3d 8d f9 00 00 00 	cmpl   $0x0,0xf98d(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    b8d3:	74 12                	je     b8e7 <jstring_copy_to_buffer+0x4d>
    b8d5:	bf 40 00 00 00       	mov    $0x40,%edi
    b8da:	e8 c1 87 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    b8df:	48 85 c0             	test   %rax,%rax
    b8e2:	74 03                	je     b8e7 <jstring_copy_to_buffer+0x4d>
    b8e4:	48 89 c3             	mov    %rax,%rbx
    b8e7:	48 8d 43 60          	lea    0x60(%rbx),%rax
    b8eb:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    b8f2:	48 8d 15 c3 83 00 00 	lea    0x83c3(%rip),%rdx        # 13cbc <_IO_stdin_used+0xcbc>
    b8f9:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    b8fd:	48 8d 15 96 ff ff ff 	lea    -0x6a(%rip),%rdx        # b89a <jstring_copy_to_buffer>
    b904:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    b908:	49 89 dc             	mov    %rbx,%r12
    b90b:	49 c1 ec 03          	shr    $0x3,%r12
    b90f:	41 c7 84 24 00 80 ff 	movl   $0xf1f1f1f1,0x7fff8000(%r12)
    b916:	7f f1 f1 f1 f1 
    b91b:	41 c7 84 24 04 80 ff 	movl   $0xf3f30000,0x7fff8004(%r12)
    b922:	7f 00 00 f3 f3 
    b927:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
    b92e:	00 00 
    b930:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    b934:	31 d2                	xor    %edx,%edx
    b936:	48 8b b5 50 ff ff ff 	mov    -0xb0(%rbp),%rsi
    b93d:	48 8b bd 58 ff ff ff 	mov    -0xa8(%rbp),%rdi
    b944:	48 89 70 c0          	mov    %rsi,-0x40(%rax)
    b948:	48 89 78 c8          	mov    %rdi,-0x38(%rax)
    b94c:	8b 15 46 f9 00 00    	mov    0xf946(%rip),%edx        # 1b298 <jstring_temporary_memory_info+0x18>
    b952:	85 d2                	test   %edx,%edx
    b954:	75 78                	jne    b9ce <jstring_copy_to_buffer+0x134>
    b956:	4c 8b 05 e3 d7 00 00 	mov    0xd7e3(%rip),%r8        # 19140 <jstring_log>
    b95d:	48 8d 15 3c 7c 00 00 	lea    0x7c3c(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    b964:	48 8d 35 b5 7d 00 00 	lea    0x7db5(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    b96b:	48 8d 05 ae 7c 00 00 	lea    0x7cae(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    b972:	b9 7b 05 00 00       	mov    $0x57b,%ecx
    b977:	48 89 c7             	mov    %rax,%rdi
    b97a:	b8 00 00 00 00       	mov    $0x0,%eax
    b97f:	41 ff d0             	call   *%r8
    b982:	b9 00 00 00 00       	mov    $0x0,%ecx
    b987:	48 89 c8             	mov    %rcx,%rax
    b98a:	48 89 c2             	mov    %rax,%rdx
    b98d:	48 c1 ea 03          	shr    $0x3,%rdx
    b991:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b998:	0f b6 12             	movzbl (%rdx),%edx
    b99b:	84 d2                	test   %dl,%dl
    b99d:	40 0f 95 c6          	setne  %sil
    b9a1:	48 89 c7             	mov    %rax,%rdi
    b9a4:	83 e7 07             	and    $0x7,%edi
    b9a7:	40 38 d7             	cmp    %dl,%dil
    b9aa:	0f 9d c2             	setge  %dl
    b9ad:	21 f2                	and    %esi,%edx
    b9af:	84 d2                	test   %dl,%dl
    b9b1:	74 08                	je     b9bb <jstring_copy_to_buffer+0x121>
    b9b3:	48 89 c7             	mov    %rax,%rdi
    b9b6:	e8 d5 87 ff ff       	call   4190 <__asan_report_load1@plt>
    b9bb:	0f b6 01             	movzbl (%rcx),%eax
    b9be:	88 85 7b ff ff ff    	mov    %al,-0x85(%rbp)
    b9c4:	b8 00 00 00 00       	mov    $0x0,%eax
    b9c9:	e9 79 01 00 00       	jmp    bb47 <jstring_copy_to_buffer+0x2ad>
    b9ce:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    b9d2:	48 89 d1             	mov    %rdx,%rcx
    b9d5:	48 89 ca             	mov    %rcx,%rdx
    b9d8:	48 c1 ea 03          	shr    $0x3,%rdx
    b9dc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    b9e3:	0f b6 12             	movzbl (%rdx),%edx
    b9e6:	84 d2                	test   %dl,%dl
    b9e8:	40 0f 95 c6          	setne  %sil
    b9ec:	80 fa 03             	cmp    $0x3,%dl
    b9ef:	0f 9e c2             	setle  %dl
    b9f2:	21 f2                	and    %esi,%edx
    b9f4:	84 d2                	test   %dl,%dl
    b9f6:	74 08                	je     ba00 <jstring_copy_to_buffer+0x166>
    b9f8:	48 89 cf             	mov    %rcx,%rdi
    b9fb:	e8 f0 86 ff ff       	call   40f0 <__asan_report_load4@plt>
    ba00:	8b 50 c0             	mov    -0x40(%rax),%edx
    ba03:	39 95 64 ff ff ff    	cmp    %edx,-0x9c(%rbp)
    ba09:	73 2a                	jae    ba35 <jstring_copy_to_buffer+0x19b>
    ba0b:	48 8b 0d 2e d7 00 00 	mov    0xd72e(%rip),%rcx        # 19140 <jstring_log>
    ba12:	8b 50 c0             	mov    -0x40(%rax),%edx
    ba15:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    ba1b:	48 8d 3d be 82 00 00 	lea    0x82be(%rip),%rdi        # 13ce0 <_IO_stdin_used+0xce0>
    ba22:	89 c6                	mov    %eax,%esi
    ba24:	b8 00 00 00 00       	mov    $0x0,%eax
    ba29:	ff d1                	call   *%rcx
    ba2b:	b8 00 00 00 00       	mov    $0x0,%eax
    ba30:	e9 12 01 00 00       	jmp    bb47 <jstring_copy_to_buffer+0x2ad>
    ba35:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
    ba3c:	00 00 00 
    ba3f:	e9 bd 00 00 00       	jmp    bb01 <jstring_copy_to_buffer+0x267>
    ba44:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    ba48:	48 83 c2 08          	add    $0x8,%rdx
    ba4c:	48 89 d1             	mov    %rdx,%rcx
    ba4f:	48 c1 e9 03          	shr    $0x3,%rcx
    ba53:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    ba5a:	0f b6 09             	movzbl (%rcx),%ecx
    ba5d:	84 c9                	test   %cl,%cl
    ba5f:	74 08                	je     ba69 <jstring_copy_to_buffer+0x1cf>
    ba61:	48 89 d7             	mov    %rdx,%rdi
    ba64:	e8 57 87 ff ff       	call   41c0 <__asan_report_load8@plt>
    ba69:	48 8b 48 c8          	mov    -0x38(%rax),%rcx
    ba6d:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
    ba73:	48 8d 3c 11          	lea    (%rcx,%rdx,1),%rdi
    ba77:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx
    ba7d:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx
    ba84:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    ba88:	48 89 fa             	mov    %rdi,%rdx
    ba8b:	48 89 d1             	mov    %rdx,%rcx
    ba8e:	48 c1 e9 03          	shr    $0x3,%rcx
    ba92:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    ba99:	0f b6 09             	movzbl (%rcx),%ecx
    ba9c:	84 c9                	test   %cl,%cl
    ba9e:	41 0f 95 c0          	setne  %r8b
    baa2:	49 89 d1             	mov    %rdx,%r9
    baa5:	41 83 e1 07          	and    $0x7,%r9d
    baa9:	41 38 c9             	cmp    %cl,%r9b
    baac:	0f 9d c1             	setge  %cl
    baaf:	44 21 c1             	and    %r8d,%ecx
    bab2:	84 c9                	test   %cl,%cl
    bab4:	74 08                	je     babe <jstring_copy_to_buffer+0x224>
    bab6:	48 89 d7             	mov    %rdx,%rdi
    bab9:	e8 d2 86 ff ff       	call   4190 <__asan_report_load1@plt>
    babe:	0f b6 3f             	movzbl (%rdi),%edi
    bac1:	48 89 f2             	mov    %rsi,%rdx
    bac4:	48 89 d1             	mov    %rdx,%rcx
    bac7:	48 c1 e9 03          	shr    $0x3,%rcx
    bacb:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    bad2:	0f b6 09             	movzbl (%rcx),%ecx
    bad5:	84 c9                	test   %cl,%cl
    bad7:	41 0f 95 c0          	setne  %r8b
    badb:	49 89 d1             	mov    %rdx,%r9
    bade:	41 83 e1 07          	and    $0x7,%r9d
    bae2:	41 38 c9             	cmp    %cl,%r9b
    bae5:	0f 9d c1             	setge  %cl
    bae8:	44 21 c1             	and    %r8d,%ecx
    baeb:	84 c9                	test   %cl,%cl
    baed:	74 08                	je     baf7 <jstring_copy_to_buffer+0x25d>
    baef:	48 89 d7             	mov    %rdx,%rdi
    baf2:	e8 b9 86 ff ff       	call   41b0 <__asan_report_store1@plt>
    baf7:	40 88 3e             	mov    %dil,(%rsi)
    bafa:	83 85 7c ff ff ff 01 	addl   $0x1,-0x84(%rbp)
    bb01:	48 8d 50 c0          	lea    -0x40(%rax),%rdx
    bb05:	48 89 d1             	mov    %rdx,%rcx
    bb08:	48 89 ca             	mov    %rcx,%rdx
    bb0b:	48 c1 ea 03          	shr    $0x3,%rdx
    bb0f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    bb16:	0f b6 12             	movzbl (%rdx),%edx
    bb19:	84 d2                	test   %dl,%dl
    bb1b:	40 0f 95 c6          	setne  %sil
    bb1f:	80 fa 03             	cmp    $0x3,%dl
    bb22:	0f 9e c2             	setle  %dl
    bb25:	21 f2                	and    %esi,%edx
    bb27:	84 d2                	test   %dl,%dl
    bb29:	74 08                	je     bb33 <jstring_copy_to_buffer+0x299>
    bb2b:	48 89 cf             	mov    %rcx,%rdi
    bb2e:	e8 bd 85 ff ff       	call   40f0 <__asan_report_load4@plt>
    bb33:	8b 50 c0             	mov    -0x40(%rax),%edx
    bb36:	3b 95 7c ff ff ff    	cmp    -0x84(%rbp),%edx
    bb3c:	0f 83 02 ff ff ff    	jae    ba44 <jstring_copy_to_buffer+0x1aa>
    bb42:	b8 01 00 00 00       	mov    $0x1,%eax
    bb47:	89 c2                	mov    %eax,%edx
    bb49:	49 39 dd             	cmp    %rbx,%r13
    bb4c:	74 22                	je     bb70 <jstring_copy_to_buffer+0x2d6>
    bb4e:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    bb55:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    bb5c:	f5 f5 f5 
    bb5f:	49 89 84 24 00 80 ff 	mov    %rax,0x7fff8000(%r12)
    bb66:	7f 
    bb67:	48 8b 43 38          	mov    0x38(%rbx),%rax
    bb6b:	c6 00 00             	movb   $0x0,(%rax)
    bb6e:	eb 0c                	jmp    bb7c <jstring_copy_to_buffer+0x2e2>
    bb70:	49 c7 84 24 00 80 ff 	movq   $0x0,0x7fff8000(%r12)
    bb77:	7f 00 00 00 00 
    bb7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb80:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bb87:	00 00 
    bb89:	74 05                	je     bb90 <jstring_copy_to_buffer+0x2f6>
    bb8b:	e8 d0 85 ff ff       	call   4160 <__stack_chk_fail@plt>
    bb90:	89 d0                	mov    %edx,%eax
    bb92:	48 81 c4 98 00 00 00 	add    $0x98,%rsp
    bb99:	5b                   	pop    %rbx
    bb9a:	41 5c                	pop    %r12
    bb9c:	41 5d                	pop    %r13
    bb9e:	5d                   	pop    %rbp
    bb9f:	c3                   	ret

000000000000bba0 <jstring_copy_to_jstring>:
    bba0:	55                   	push   %rbp
    bba1:	48 89 e5             	mov    %rsp,%rbp
    bba4:	41 56                	push   %r14
    bba6:	41 55                	push   %r13
    bba8:	41 54                	push   %r12
    bbaa:	53                   	push   %rbx
    bbab:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    bbb2:	48 89 f8             	mov    %rdi,%rax
    bbb5:	48 89 f1             	mov    %rsi,%rcx
    bbb8:	48 89 c0             	mov    %rax,%rax
    bbbb:	ba 00 00 00 00       	mov    $0x0,%edx
    bbc0:	48 89 ca             	mov    %rcx,%rdx
    bbc3:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    bbca:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    bbd1:	4c 8d a5 60 ff ff ff 	lea    -0xa0(%rbp),%r12
    bbd8:	4d 89 e6             	mov    %r12,%r14
    bbdb:	83 3d 7e f6 00 00 00 	cmpl   $0x0,0xf67e(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    bbe2:	74 12                	je     bbf6 <jstring_copy_to_jstring+0x56>
    bbe4:	bf 60 00 00 00       	mov    $0x60,%edi
    bbe9:	e8 f2 84 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    bbee:	48 85 c0             	test   %rax,%rax
    bbf1:	74 03                	je     bbf6 <jstring_copy_to_jstring+0x56>
    bbf3:	49 89 c4             	mov    %rax,%r12
    bbf6:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
    bbfd:	00 
    bbfe:	48 89 c3             	mov    %rax,%rbx
    bc01:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    bc08:	41 
    bc09:	48 8d 05 70 81 00 00 	lea    0x8170(%rip),%rax        # 13d80 <_IO_stdin_used+0xd80>
    bc10:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    bc15:	48 8d 05 84 ff ff ff 	lea    -0x7c(%rip),%rax        # bba0 <jstring_copy_to_jstring>
    bc1c:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    bc21:	4d 89 e5             	mov    %r12,%r13
    bc24:	49 c1 ed 03          	shr    $0x3,%r13
    bc28:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    bc2f:	f1 f1 f1 f1 
    bc33:	41 c7 85 04 80 ff 7f 	movl   $0xf2f20000,0x7fff8004(%r13)
    bc3a:	00 00 f2 f2 
    bc3e:	41 c7 85 08 80 ff 7f 	movl   $0xf3f30000,0x7fff8008(%r13)
    bc45:	00 00 f3 f3 
    bc49:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bc50:	00 00 
    bc52:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bc56:	31 c0                	xor    %eax,%eax
    bc58:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    bc5f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    bc66:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    bc6a:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    bc6e:	8b 05 24 f6 00 00    	mov    0xf624(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    bc74:	85 c0                	test   %eax,%eax
    bc76:	75 6e                	jne    bce6 <jstring_copy_to_jstring+0x146>
    bc78:	4c 8b 05 c1 d4 00 00 	mov    0xd4c1(%rip),%r8        # 19140 <jstring_log>
    bc7f:	48 8d 15 1a 79 00 00 	lea    0x791a(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    bc86:	48 8d 35 93 7a 00 00 	lea    0x7a93(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    bc8d:	48 8d 05 8c 79 00 00 	lea    0x798c(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    bc94:	b9 93 05 00 00       	mov    $0x593,%ecx
    bc99:	48 89 c7             	mov    %rax,%rdi
    bc9c:	b8 00 00 00 00       	mov    $0x0,%eax
    bca1:	41 ff d0             	call   *%r8
    bca4:	b9 00 00 00 00       	mov    $0x0,%ecx
    bca9:	48 89 c8             	mov    %rcx,%rax
    bcac:	48 89 c2             	mov    %rax,%rdx
    bcaf:	48 c1 ea 03          	shr    $0x3,%rdx
    bcb3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    bcba:	0f b6 12             	movzbl (%rdx),%edx
    bcbd:	84 d2                	test   %dl,%dl
    bcbf:	40 0f 95 c6          	setne  %sil
    bcc3:	48 89 c7             	mov    %rax,%rdi
    bcc6:	83 e7 07             	and    $0x7,%edi
    bcc9:	40 38 d7             	cmp    %dl,%dil
    bccc:	0f 9d c2             	setge  %dl
    bccf:	21 f2                	and    %esi,%edx
    bcd1:	84 d2                	test   %dl,%dl
    bcd3:	74 08                	je     bcdd <jstring_copy_to_jstring+0x13d>
    bcd5:	48 89 c7             	mov    %rax,%rdi
    bcd8:	e8 b3 84 ff ff       	call   4190 <__asan_report_load1@plt>
    bcdd:	0f b6 01             	movzbl (%rcx),%eax
    bce0:	88 85 5b ff ff ff    	mov    %al,-0xa5(%rbp)
    bce6:	c7 43 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbx)
    bced:	c7 43 a0 00 00 00 00 	movl   $0x0,-0x60(%rbx)
    bcf4:	48 c7 43 a8 00 00 00 	movq   $0x0,-0x58(%rbx)
    bcfb:	00 
    bcfc:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    bd00:	48 89 c2             	mov    %rax,%rdx
    bd03:	48 89 d0             	mov    %rdx,%rax
    bd06:	48 c1 e8 03          	shr    $0x3,%rax
    bd0a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    bd10:	0f b6 00             	movzbl (%rax),%eax
    bd13:	84 c0                	test   %al,%al
    bd15:	0f 95 c1             	setne  %cl
    bd18:	3c 03                	cmp    $0x3,%al
    bd1a:	0f 9e c0             	setle  %al
    bd1d:	21 c8                	and    %ecx,%eax
    bd1f:	84 c0                	test   %al,%al
    bd21:	74 08                	je     bd2b <jstring_copy_to_jstring+0x18b>
    bd23:	48 89 d7             	mov    %rdx,%rdi
    bd26:	e8 c5 83 ff ff       	call   40f0 <__asan_report_load4@plt>
    bd2b:	8b 43 c0             	mov    -0x40(%rbx),%eax
    bd2e:	89 43 a0             	mov    %eax,-0x60(%rbx)
    bd31:	8b 43 a0             	mov    -0x60(%rbx),%eax
    bd34:	83 c0 01             	add    $0x1,%eax
    bd37:	01 c0                	add    %eax,%eax
    bd39:	89 43 a4             	mov    %eax,-0x5c(%rbx)
    bd3c:	8b 43 a0             	mov    -0x60(%rbx),%eax
    bd3f:	83 c0 01             	add    $0x1,%eax
    bd42:	01 c0                	add    %eax,%eax
    bd44:	89 c0                	mov    %eax,%eax
    bd46:	48 89 c7             	mov    %rax,%rdi
    bd49:	e8 89 87 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    bd4e:	48 89 43 a8          	mov    %rax,-0x58(%rbx)
    bd52:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    bd59:	00 00 00 
    bd5c:	e9 b8 00 00 00       	jmp    be19 <jstring_copy_to_jstring+0x279>
    bd61:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    bd65:	48 83 c0 08          	add    $0x8,%rax
    bd69:	48 89 c2             	mov    %rax,%rdx
    bd6c:	48 c1 ea 03          	shr    $0x3,%rdx
    bd70:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    bd77:	0f b6 12             	movzbl (%rdx),%edx
    bd7a:	84 d2                	test   %dl,%dl
    bd7c:	74 08                	je     bd86 <jstring_copy_to_jstring+0x1e6>
    bd7e:	48 89 c7             	mov    %rax,%rdi
    bd81:	e8 3a 84 ff ff       	call   41c0 <__asan_report_load8@plt>
    bd86:	48 8b 53 c8          	mov    -0x38(%rbx),%rdx
    bd8a:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    bd90:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    bd94:	48 8b 53 a8          	mov    -0x58(%rbx),%rdx
    bd98:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    bd9e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bda2:	48 89 f0             	mov    %rsi,%rax
    bda5:	48 89 c2             	mov    %rax,%rdx
    bda8:	48 c1 ea 03          	shr    $0x3,%rdx
    bdac:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    bdb3:	0f b6 12             	movzbl (%rdx),%edx
    bdb6:	84 d2                	test   %dl,%dl
    bdb8:	40 0f 95 c7          	setne  %dil
    bdbc:	49 89 c0             	mov    %rax,%r8
    bdbf:	41 83 e0 07          	and    $0x7,%r8d
    bdc3:	41 38 d0             	cmp    %dl,%r8b
    bdc6:	0f 9d c2             	setge  %dl
    bdc9:	21 fa                	and    %edi,%edx
    bdcb:	84 d2                	test   %dl,%dl
    bdcd:	74 08                	je     bdd7 <jstring_copy_to_jstring+0x237>
    bdcf:	48 89 c7             	mov    %rax,%rdi
    bdd2:	e8 b9 83 ff ff       	call   4190 <__asan_report_load1@plt>
    bdd7:	0f b6 36             	movzbl (%rsi),%esi
    bdda:	48 89 c8             	mov    %rcx,%rax
    bddd:	48 89 c2             	mov    %rax,%rdx
    bde0:	48 c1 ea 03          	shr    $0x3,%rdx
    bde4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    bdeb:	0f b6 12             	movzbl (%rdx),%edx
    bdee:	84 d2                	test   %dl,%dl
    bdf0:	40 0f 95 c7          	setne  %dil
    bdf4:	49 89 c0             	mov    %rax,%r8
    bdf7:	41 83 e0 07          	and    $0x7,%r8d
    bdfb:	41 38 d0             	cmp    %dl,%r8b
    bdfe:	0f 9d c2             	setge  %dl
    be01:	21 fa                	and    %edi,%edx
    be03:	84 d2                	test   %dl,%dl
    be05:	74 08                	je     be0f <jstring_copy_to_jstring+0x26f>
    be07:	48 89 c7             	mov    %rax,%rdi
    be0a:	e8 a1 83 ff ff       	call   41b0 <__asan_report_store1@plt>
    be0f:	40 88 31             	mov    %sil,(%rcx)
    be12:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    be19:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    be1d:	48 89 c2             	mov    %rax,%rdx
    be20:	48 89 d0             	mov    %rdx,%rax
    be23:	48 c1 e8 03          	shr    $0x3,%rax
    be27:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    be2d:	0f b6 00             	movzbl (%rax),%eax
    be30:	84 c0                	test   %al,%al
    be32:	0f 95 c1             	setne  %cl
    be35:	3c 03                	cmp    $0x3,%al
    be37:	0f 9e c0             	setle  %al
    be3a:	21 c8                	and    %ecx,%eax
    be3c:	84 c0                	test   %al,%al
    be3e:	74 08                	je     be48 <jstring_copy_to_jstring+0x2a8>
    be40:	48 89 d7             	mov    %rdx,%rdi
    be43:	e8 a8 82 ff ff       	call   40f0 <__asan_report_load4@plt>
    be48:	8b 43 c0             	mov    -0x40(%rbx),%eax
    be4b:	3b 85 5c ff ff ff    	cmp    -0xa4(%rbp),%eax
    be51:	0f 83 0a ff ff ff    	jae    bd61 <jstring_copy_to_jstring+0x1c1>
    be57:	48 8b 43 a0          	mov    -0x60(%rbx),%rax
    be5b:	48 8b 53 a8          	mov    -0x58(%rbx),%rdx
    be5f:	4d 39 e6             	cmp    %r12,%r14
    be62:	74 2e                	je     be92 <jstring_copy_to_jstring+0x2f2>
    be64:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    be6b:	45 
    be6c:	48 be f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rsi
    be73:	f5 f5 f5 
    be76:	49 89 b5 00 80 ff 7f 	mov    %rsi,0x7fff8000(%r13)
    be7d:	41 c7 85 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r13)
    be84:	f5 f5 f5 f5 
    be88:	49 8b 4c 24 78       	mov    0x78(%r12),%rcx
    be8d:	c6 01 00             	movb   $0x0,(%rcx)
    be90:	eb 16                	jmp    bea8 <jstring_copy_to_jstring+0x308>
    be92:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    be99:	00 00 00 00 
    be9d:	41 c7 85 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r13)
    bea4:	00 00 00 00 
    bea8:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    beac:	64 48 2b 0c 25 28 00 	sub    %fs:0x28,%rcx
    beb3:	00 00 
    beb5:	74 05                	je     bebc <jstring_copy_to_jstring+0x31c>
    beb7:	e8 a4 82 ff ff       	call   4160 <__stack_chk_fail@plt>
    bebc:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    bec3:	5b                   	pop    %rbx
    bec4:	41 5c                	pop    %r12
    bec6:	41 5d                	pop    %r13
    bec8:	41 5e                	pop    %r14
    beca:	5d                   	pop    %rbp
    becb:	c3                   	ret

000000000000becc <jstring_join_jstrings>:
    becc:	55                   	push   %rbp
    becd:	48 89 e5             	mov    %rsp,%rbp
    bed0:	41 56                	push   %r14
    bed2:	41 55                	push   %r13
    bed4:	41 54                	push   %r12
    bed6:	53                   	push   %rbx
    bed7:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    bedb:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    bee2:	89 b5 74 ff ff ff    	mov    %esi,-0x8c(%rbp)
    bee8:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    beef:	4c 8d 65 a0          	lea    -0x60(%rbp),%r12
    bef3:	4d 89 e6             	mov    %r12,%r14
    bef6:	83 3d 63 f3 00 00 00 	cmpl   $0x0,0xf363(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    befd:	74 12                	je     bf11 <jstring_join_jstrings+0x45>
    beff:	bf 40 00 00 00       	mov    $0x40,%edi
    bf04:	e8 97 81 ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    bf09:	48 85 c0             	test   %rax,%rax
    bf0c:	74 03                	je     bf11 <jstring_join_jstrings+0x45>
    bf0e:	49 89 c4             	mov    %rax,%r12
    bf11:	49 8d 44 24 40       	lea    0x40(%r12),%rax
    bf16:	48 89 c3             	mov    %rax,%rbx
    bf19:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    bf20:	41 
    bf21:	48 8d 05 8b 7e 00 00 	lea    0x7e8b(%rip),%rax        # 13db3 <_IO_stdin_used+0xdb3>
    bf28:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    bf2d:	48 8d 05 98 ff ff ff 	lea    -0x68(%rip),%rax        # becc <jstring_join_jstrings>
    bf34:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    bf39:	4d 89 e5             	mov    %r12,%r13
    bf3c:	49 c1 ed 03          	shr    $0x3,%r13
    bf40:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    bf47:	f1 f1 f1 f1 
    bf4b:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    bf52:	00 00 f3 f3 
    bf56:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    bf5d:	48 89 c7             	mov    %rax,%rdi
    bf60:	e8 c6 8b ff ff       	call   4b2b <jstring_length>
    bf65:	89 45 94             	mov    %eax,-0x6c(%rbp)
    bf68:	c7 43 e0 00 00 00 00 	movl   $0x0,-0x20(%rbx)
    bf6f:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    bf76:	eb 6a                	jmp    bfe2 <jstring_join_jstrings+0x116>
    bf78:	8b 73 e0             	mov    -0x20(%rbx),%esi
    bf7b:	8b 45 8c             	mov    -0x74(%rbp),%eax
    bf7e:	48 c1 e0 04          	shl    $0x4,%rax
    bf82:	48 89 c2             	mov    %rax,%rdx
    bf85:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    bf8c:	48 01 c2             	add    %rax,%rdx
    bf8f:	48 89 d0             	mov    %rdx,%rax
    bf92:	48 89 c1             	mov    %rax,%rcx
    bf95:	48 89 c8             	mov    %rcx,%rax
    bf98:	48 c1 e8 03          	shr    $0x3,%rax
    bf9c:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    bfa2:	0f b6 00             	movzbl (%rax),%eax
    bfa5:	84 c0                	test   %al,%al
    bfa7:	40 0f 95 c7          	setne  %dil
    bfab:	3c 03                	cmp    $0x3,%al
    bfad:	0f 9e c0             	setle  %al
    bfb0:	21 f8                	and    %edi,%eax
    bfb2:	84 c0                	test   %al,%al
    bfb4:	74 08                	je     bfbe <jstring_join_jstrings+0xf2>
    bfb6:	48 89 cf             	mov    %rcx,%rdi
    bfb9:	e8 32 81 ff ff       	call   40f0 <__asan_report_load4@plt>
    bfbe:	8b 02                	mov    (%rdx),%eax
    bfc0:	01 f0                	add    %esi,%eax
    bfc2:	89 43 e0             	mov    %eax,-0x20(%rbx)
    bfc5:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    bfcb:	83 e8 01             	sub    $0x1,%eax
    bfce:	39 45 8c             	cmp    %eax,-0x74(%rbp)
    bfd1:	74 0b                	je     bfde <jstring_join_jstrings+0x112>
    bfd3:	8b 53 e0             	mov    -0x20(%rbx),%edx
    bfd6:	8b 45 94             	mov    -0x6c(%rbp),%eax
    bfd9:	01 d0                	add    %edx,%eax
    bfdb:	89 43 e0             	mov    %eax,-0x20(%rbx)
    bfde:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
    bfe2:	8b 45 8c             	mov    -0x74(%rbp),%eax
    bfe5:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    bfeb:	72 8b                	jb     bf78 <jstring_join_jstrings+0xac>
    bfed:	8b 43 e0             	mov    -0x20(%rbx),%eax
    bff0:	83 c0 01             	add    $0x1,%eax
    bff3:	01 c0                	add    %eax,%eax
    bff5:	89 43 e4             	mov    %eax,-0x1c(%rbx)
    bff8:	8b 43 e4             	mov    -0x1c(%rbx),%eax
    bffb:	89 c0                	mov    %eax,%eax
    bffd:	48 89 c7             	mov    %rax,%rdi
    c000:	e8 d2 84 ff ff       	call   44d7 <jstring_temporary_memory_allocate_string>
    c005:	48 89 43 e8          	mov    %rax,-0x18(%rbx)
    c009:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    c00d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    c011:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    c018:	e9 ca 01 00 00       	jmp    c1e7 <jstring_join_jstrings+0x31b>
    c01d:	8b 45 8c             	mov    -0x74(%rbp),%eax
    c020:	48 c1 e0 04          	shl    $0x4,%rax
    c024:	48 89 c2             	mov    %rax,%rdx
    c027:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c02e:	48 01 d0             	add    %rdx,%rax
    c031:	8b 73 e4             	mov    -0x1c(%rbx),%esi
    c034:	48 89 c2             	mov    %rax,%rdx
    c037:	48 89 d1             	mov    %rdx,%rcx
    c03a:	48 c1 e9 03          	shr    $0x3,%rcx
    c03e:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    c045:	0f b7 09             	movzwl (%rcx),%ecx
    c048:	66 85 c9             	test   %cx,%cx
    c04b:	74 08                	je     c055 <jstring_join_jstrings+0x189>
    c04d:	48 89 d7             	mov    %rdx,%rdi
    c050:	e8 4b 81 ff ff       	call   41a0 <__asan_report_load16@plt>
    c055:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c059:	48 8b 00             	mov    (%rax),%rax
    c05c:	48 8b 7d 98          	mov    -0x68(%rbp),%rdi
    c060:	48 89 d1             	mov    %rdx,%rcx
    c063:	48 89 c2             	mov    %rax,%rdx
    c066:	e8 2f f8 ff ff       	call   b89a <jstring_copy_to_buffer>
    c06b:	85 c0                	test   %eax,%eax
    c06d:	75 6b                	jne    c0da <jstring_join_jstrings+0x20e>
    c06f:	4c 8b 05 ca d0 00 00 	mov    0xd0ca(%rip),%r8        # 19140 <jstring_log>
    c076:	48 8d 15 23 75 00 00 	lea    0x7523(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    c07d:	48 8d 35 9c 76 00 00 	lea    0x769c(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    c084:	48 8d 05 95 75 00 00 	lea    0x7595(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    c08b:	b9 cb 05 00 00       	mov    $0x5cb,%ecx
    c090:	48 89 c7             	mov    %rax,%rdi
    c093:	b8 00 00 00 00       	mov    $0x0,%eax
    c098:	41 ff d0             	call   *%r8
    c09b:	b9 00 00 00 00       	mov    $0x0,%ecx
    c0a0:	48 89 c8             	mov    %rcx,%rax
    c0a3:	48 89 c2             	mov    %rax,%rdx
    c0a6:	48 c1 ea 03          	shr    $0x3,%rdx
    c0aa:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c0b1:	0f b6 12             	movzbl (%rdx),%edx
    c0b4:	84 d2                	test   %dl,%dl
    c0b6:	40 0f 95 c6          	setne  %sil
    c0ba:	48 89 c7             	mov    %rax,%rdi
    c0bd:	83 e7 07             	and    $0x7,%edi
    c0c0:	40 38 d7             	cmp    %dl,%dil
    c0c3:	0f 9d c2             	setge  %dl
    c0c6:	21 f2                	and    %esi,%edx
    c0c8:	84 d2                	test   %dl,%dl
    c0ca:	74 08                	je     c0d4 <jstring_join_jstrings+0x208>
    c0cc:	48 89 c7             	mov    %rax,%rdi
    c0cf:	e8 bc 80 ff ff       	call   4190 <__asan_report_load1@plt>
    c0d4:	0f b6 01             	movzbl (%rcx),%eax
    c0d7:	88 45 8b             	mov    %al,-0x75(%rbp)
    c0da:	8b 45 8c             	mov    -0x74(%rbp),%eax
    c0dd:	48 c1 e0 04          	shl    $0x4,%rax
    c0e1:	48 89 c2             	mov    %rax,%rdx
    c0e4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c0eb:	48 01 c2             	add    %rax,%rdx
    c0ee:	48 89 d0             	mov    %rdx,%rax
    c0f1:	48 89 c1             	mov    %rax,%rcx
    c0f4:	48 89 c8             	mov    %rcx,%rax
    c0f7:	48 c1 e8 03          	shr    $0x3,%rax
    c0fb:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    c101:	0f b6 00             	movzbl (%rax),%eax
    c104:	84 c0                	test   %al,%al
    c106:	40 0f 95 c6          	setne  %sil
    c10a:	3c 03                	cmp    $0x3,%al
    c10c:	0f 9e c0             	setle  %al
    c10f:	21 f0                	and    %esi,%eax
    c111:	84 c0                	test   %al,%al
    c113:	74 08                	je     c11d <jstring_join_jstrings+0x251>
    c115:	48 89 cf             	mov    %rcx,%rdi
    c118:	e8 d3 7f ff ff       	call   40f0 <__asan_report_load4@plt>
    c11d:	8b 02                	mov    (%rdx),%eax
    c11f:	89 c0                	mov    %eax,%eax
    c121:	48 01 45 98          	add    %rax,-0x68(%rbp)
    c125:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    c12b:	83 e8 01             	sub    $0x1,%eax
    c12e:	39 45 8c             	cmp    %eax,-0x74(%rbp)
    c131:	0f 84 ac 00 00 00    	je     c1e3 <jstring_join_jstrings+0x317>
    c137:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%rbp)
    c13e:	e9 8d 00 00 00       	jmp    c1d0 <jstring_join_jstrings+0x304>
    c143:	8b 55 90             	mov    -0x70(%rbp),%edx
    c146:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c14d:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    c151:	8b 55 90             	mov    -0x70(%rbp),%edx
    c154:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c158:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c15c:	48 89 f0             	mov    %rsi,%rax
    c15f:	48 89 c2             	mov    %rax,%rdx
    c162:	48 c1 ea 03          	shr    $0x3,%rdx
    c166:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c16d:	0f b6 12             	movzbl (%rdx),%edx
    c170:	84 d2                	test   %dl,%dl
    c172:	40 0f 95 c7          	setne  %dil
    c176:	49 89 c0             	mov    %rax,%r8
    c179:	41 83 e0 07          	and    $0x7,%r8d
    c17d:	41 38 d0             	cmp    %dl,%r8b
    c180:	0f 9d c2             	setge  %dl
    c183:	21 fa                	and    %edi,%edx
    c185:	84 d2                	test   %dl,%dl
    c187:	74 08                	je     c191 <jstring_join_jstrings+0x2c5>
    c189:	48 89 c7             	mov    %rax,%rdi
    c18c:	e8 ff 7f ff ff       	call   4190 <__asan_report_load1@plt>
    c191:	0f b6 36             	movzbl (%rsi),%esi
    c194:	48 89 c8             	mov    %rcx,%rax
    c197:	48 89 c2             	mov    %rax,%rdx
    c19a:	48 c1 ea 03          	shr    $0x3,%rdx
    c19e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c1a5:	0f b6 12             	movzbl (%rdx),%edx
    c1a8:	84 d2                	test   %dl,%dl
    c1aa:	40 0f 95 c7          	setne  %dil
    c1ae:	49 89 c0             	mov    %rax,%r8
    c1b1:	41 83 e0 07          	and    $0x7,%r8d
    c1b5:	41 38 d0             	cmp    %dl,%r8b
    c1b8:	0f 9d c2             	setge  %dl
    c1bb:	21 fa                	and    %edi,%edx
    c1bd:	84 d2                	test   %dl,%dl
    c1bf:	74 08                	je     c1c9 <jstring_join_jstrings+0x2fd>
    c1c1:	48 89 c7             	mov    %rax,%rdi
    c1c4:	e8 e7 7f ff ff       	call   41b0 <__asan_report_store1@plt>
    c1c9:	40 88 31             	mov    %sil,(%rcx)
    c1cc:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
    c1d0:	8b 45 90             	mov    -0x70(%rbp),%eax
    c1d3:	3b 45 94             	cmp    -0x6c(%rbp),%eax
    c1d6:	0f 82 67 ff ff ff    	jb     c143 <jstring_join_jstrings+0x277>
    c1dc:	8b 45 94             	mov    -0x6c(%rbp),%eax
    c1df:	48 01 45 98          	add    %rax,-0x68(%rbp)
    c1e3:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
    c1e7:	8b 45 8c             	mov    -0x74(%rbp),%eax
    c1ea:	3b 85 74 ff ff ff    	cmp    -0x8c(%rbp),%eax
    c1f0:	0f 82 27 fe ff ff    	jb     c01d <jstring_join_jstrings+0x151>
    c1f6:	48 8b 43 e8          	mov    -0x18(%rbx),%rax
    c1fa:	8b 53 e0             	mov    -0x20(%rbx),%edx
    c1fd:	89 d2                	mov    %edx,%edx
    c1ff:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c203:	48 89 c8             	mov    %rcx,%rax
    c206:	48 89 c2             	mov    %rax,%rdx
    c209:	48 c1 ea 03          	shr    $0x3,%rdx
    c20d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c214:	0f b6 12             	movzbl (%rdx),%edx
    c217:	84 d2                	test   %dl,%dl
    c219:	40 0f 95 c6          	setne  %sil
    c21d:	48 89 c7             	mov    %rax,%rdi
    c220:	83 e7 07             	and    $0x7,%edi
    c223:	40 38 d7             	cmp    %dl,%dil
    c226:	0f 9d c2             	setge  %dl
    c229:	21 f2                	and    %esi,%edx
    c22b:	84 d2                	test   %dl,%dl
    c22d:	74 08                	je     c237 <jstring_join_jstrings+0x36b>
    c22f:	48 89 c7             	mov    %rax,%rdi
    c232:	e8 79 7f ff ff       	call   41b0 <__asan_report_store1@plt>
    c237:	c6 01 00             	movb   $0x0,(%rcx)
    c23a:	48 8b 43 e0          	mov    -0x20(%rbx),%rax
    c23e:	48 8b 53 e8          	mov    -0x18(%rbx),%rdx
    c242:	4d 39 e6             	cmp    %r12,%r14
    c245:	74 23                	je     c26a <jstring_join_jstrings+0x39e>
    c247:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    c24e:	45 
    c24f:	48 bb f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rbx
    c256:	f5 f5 f5 
    c259:	49 89 9d 00 80 ff 7f 	mov    %rbx,0x7fff8000(%r13)
    c260:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    c265:	c6 01 00             	movb   $0x0,(%rcx)
    c268:	eb 0b                	jmp    c275 <jstring_join_jstrings+0x3a9>
    c26a:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    c271:	00 00 00 00 
    c275:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    c279:	5b                   	pop    %rbx
    c27a:	41 5c                	pop    %r12
    c27c:	41 5d                	pop    %r13
    c27e:	41 5e                	pop    %r14
    c280:	5d                   	pop    %rbp
    c281:	c3                   	ret

000000000000c282 <jstring_split_jstring>:
    c282:	55                   	push   %rbp
    c283:	48 89 e5             	mov    %rsp,%rbp
    c286:	41 57                	push   %r15
    c288:	41 56                	push   %r14
    c28a:	41 55                	push   %r13
    c28c:	41 54                	push   %r12
    c28e:	53                   	push   %rbx
    c28f:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    c296:	48 89 f8             	mov    %rdi,%rax
    c299:	49 89 f1             	mov    %rsi,%r9
    c29c:	48 89 c6             	mov    %rax,%rsi
    c29f:	bf 00 00 00 00       	mov    $0x0,%edi
    c2a4:	4c 89 cf             	mov    %r9,%rdi
    c2a7:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    c2ae:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    c2b5:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    c2bc:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%rbp)
    c2c2:	4c 89 85 38 ff ff ff 	mov    %r8,-0xc8(%rbp)
    c2c9:	4c 8d a5 70 ff ff ff 	lea    -0x90(%rbp),%r12
    c2d0:	4d 89 e7             	mov    %r12,%r15
    c2d3:	83 3d 86 ef 00 00 00 	cmpl   $0x0,0xef86(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    c2da:	74 12                	je     c2ee <jstring_split_jstring+0x6c>
    c2dc:	bf 40 00 00 00       	mov    $0x40,%edi
    c2e1:	e8 ba 7d ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    c2e6:	48 85 c0             	test   %rax,%rax
    c2e9:	74 03                	je     c2ee <jstring_split_jstring+0x6c>
    c2eb:	49 89 c4             	mov    %rax,%r12
    c2ee:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    c2f3:	48 89 c3             	mov    %rax,%rbx
    c2f6:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    c2fd:	41 
    c2fe:	48 8d 05 cc 7a 00 00 	lea    0x7acc(%rip),%rax        # 13dd1 <_IO_stdin_used+0xdd1>
    c305:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    c30a:	48 8d 05 71 ff ff ff 	lea    -0x8f(%rip),%rax        # c282 <jstring_split_jstring>
    c311:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    c316:	4d 89 e5             	mov    %r12,%r13
    c319:	49 c1 ed 03          	shr    $0x3,%r13
    c31d:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    c324:	f1 f1 f1 f1 
    c328:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    c32f:	00 00 f3 f3 
    c333:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c33a:	00 00 
    c33c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    c340:	31 c0                	xor    %eax,%eax
    c342:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c346:	48 89 c2             	mov    %rax,%rdx
    c349:	48 c1 ea 03          	shr    $0x3,%rdx
    c34d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c354:	0f b7 12             	movzwl (%rdx),%edx
    c357:	66 85 d2             	test   %dx,%dx
    c35a:	74 08                	je     c364 <jstring_split_jstring+0xe2>
    c35c:	48 89 c7             	mov    %rax,%rdi
    c35f:	e8 6c 7d ff ff       	call   40d0 <__asan_report_store16@plt>
    c364:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    c36b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    c372:	48 89 d7             	mov    %rdx,%rdi
    c375:	48 89 c6             	mov    %rax,%rsi
    c378:	e8 23 f8 ff ff       	call   bba0 <jstring_copy_to_jstring>
    c37d:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    c381:	48 89 53 c8          	mov    %rdx,-0x38(%rbx)
    c385:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    c38c:	48 89 c7             	mov    %rax,%rdi
    c38f:	e8 97 87 ff ff       	call   4b2b <jstring_length>
    c394:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
    c39a:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c39e:	48 89 c2             	mov    %rax,%rdx
    c3a1:	48 c1 ea 03          	shr    $0x3,%rdx
    c3a5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c3ac:	0f b7 12             	movzwl (%rdx),%edx
    c3af:	66 85 d2             	test   %dx,%dx
    c3b2:	74 08                	je     c3bc <jstring_split_jstring+0x13a>
    c3b4:	48 89 c7             	mov    %rax,%rdi
    c3b7:	e8 e4 7d ff ff       	call   41a0 <__asan_report_load16@plt>
    c3bc:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c3c3:	48 8b 4b c0          	mov    -0x40(%rbx),%rcx
    c3c7:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
    c3cb:	48 89 cf             	mov    %rcx,%rdi
    c3ce:	48 89 c6             	mov    %rax,%rsi
    c3d1:	e8 33 bc ff ff       	call   8009 <jstring_index_of_raw>
    c3d6:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
    c3dc:	c7 85 68 ff ff ff 00 	movl   $0x0,-0x98(%rbp)
    c3e3:	00 00 00 
    c3e6:	e9 81 01 00 00       	jmp    c56c <jstring_split_jstring+0x2ea>
    c3eb:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    c3f1:	3b 85 44 ff ff ff    	cmp    -0xbc(%rbp),%eax
    c3f7:	72 78                	jb     c471 <jstring_split_jstring+0x1ef>
    c3f9:	4c 8b 05 40 cd 00 00 	mov    0xcd40(%rip),%r8        # 19140 <jstring_log>
    c400:	48 8d 15 99 71 00 00 	lea    0x7199(%rip),%rdx        # 135a0 <_IO_stdin_used+0x5a0>
    c407:	48 8d 35 12 73 00 00 	lea    0x7312(%rip),%rsi        # 13720 <_IO_stdin_used+0x720>
    c40e:	48 8d 05 0b 72 00 00 	lea    0x720b(%rip),%rax        # 13620 <_IO_stdin_used+0x620>
    c415:	b9 fb 05 00 00       	mov    $0x5fb,%ecx
    c41a:	48 89 c7             	mov    %rax,%rdi
    c41d:	b8 00 00 00 00       	mov    $0x0,%eax
    c422:	41 ff d0             	call   *%r8
    c425:	b9 00 00 00 00       	mov    $0x0,%ecx
    c42a:	48 89 c8             	mov    %rcx,%rax
    c42d:	48 89 c2             	mov    %rax,%rdx
    c430:	48 c1 ea 03          	shr    $0x3,%rdx
    c434:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c43b:	0f b6 12             	movzbl (%rdx),%edx
    c43e:	84 d2                	test   %dl,%dl
    c440:	40 0f 95 c6          	setne  %sil
    c444:	48 89 c7             	mov    %rax,%rdi
    c447:	83 e7 07             	and    $0x7,%edi
    c44a:	40 38 d7             	cmp    %dl,%dil
    c44d:	0f 9d c2             	setge  %dl
    c450:	21 f2                	and    %esi,%edx
    c452:	84 d2                	test   %dl,%dl
    c454:	74 08                	je     c45e <jstring_split_jstring+0x1dc>
    c456:	48 89 c7             	mov    %rax,%rdi
    c459:	e8 32 7d ff ff       	call   4190 <__asan_report_load1@plt>
    c45e:	0f b6 01             	movzbl (%rcx),%eax
    c461:	88 85 63 ff ff ff    	mov    %al,-0x9d(%rbp)
    c467:	b8 00 00 00 00       	mov    $0x0,%eax
    c46c:	e9 72 02 00 00       	jmp    c6e3 <jstring_split_jstring+0x461>
    c471:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
    c477:	83 e8 01             	sub    $0x1,%eax
    c47a:	89 c1                	mov    %eax,%ecx
    c47c:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    c482:	48 c1 e0 04          	shl    $0x4,%rax
    c486:	48 89 c2             	mov    %rax,%rdx
    c489:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    c490:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    c494:	4c 89 f0             	mov    %r14,%rax
    c497:	48 89 c2             	mov    %rax,%rdx
    c49a:	48 c1 ea 03          	shr    $0x3,%rdx
    c49e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c4a5:	0f b7 12             	movzwl (%rdx),%edx
    c4a8:	66 85 d2             	test   %dx,%dx
    c4ab:	74 08                	je     c4b5 <jstring_split_jstring+0x233>
    c4ad:	48 89 c7             	mov    %rax,%rdi
    c4b0:	e8 1b 7c ff ff       	call   40d0 <__asan_report_store16@plt>
    c4b5:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c4b9:	48 89 c2             	mov    %rax,%rdx
    c4bc:	48 c1 ea 03          	shr    $0x3,%rdx
    c4c0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c4c7:	0f b7 12             	movzwl (%rdx),%edx
    c4ca:	66 85 d2             	test   %dx,%dx
    c4cd:	74 08                	je     c4d7 <jstring_split_jstring+0x255>
    c4cf:	48 89 c7             	mov    %rax,%rdi
    c4d2:	e8 c9 7c ff ff       	call   41a0 <__asan_report_load16@plt>
    c4d7:	48 8b 73 c0          	mov    -0x40(%rbx),%rsi
    c4db:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
    c4df:	ba 00 00 00 00       	mov    $0x0,%edx
    c4e4:	48 89 f7             	mov    %rsi,%rdi
    c4e7:	48 89 c6             	mov    %rax,%rsi
    c4ea:	e8 f1 92 ff ff       	call   57e0 <jstring_create_substring_temporary>
    c4ef:	49 89 06             	mov    %rax,(%r14)
    c4f2:	49 89 56 08          	mov    %rdx,0x8(%r14)
    c4f6:	8b 95 64 ff ff ff    	mov    -0x9c(%rbp),%edx
    c4fc:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    c502:	01 c2                	add    %eax,%edx
    c504:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c508:	be 00 00 00 00       	mov    $0x0,%esi
    c50d:	48 89 c7             	mov    %rax,%rdi
    c510:	e8 dc e4 ff ff       	call   a9f1 <jstring_remove_at>
    c515:	85 c0                	test   %eax,%eax
    c517:	75 0a                	jne    c523 <jstring_split_jstring+0x2a1>
    c519:	b8 00 00 00 00       	mov    $0x0,%eax
    c51e:	e9 c0 01 00 00       	jmp    c6e3 <jstring_split_jstring+0x461>
    c523:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c527:	48 89 c2             	mov    %rax,%rdx
    c52a:	48 c1 ea 03          	shr    $0x3,%rdx
    c52e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c535:	0f b7 12             	movzwl (%rdx),%edx
    c538:	66 85 d2             	test   %dx,%dx
    c53b:	74 08                	je     c545 <jstring_split_jstring+0x2c3>
    c53d:	48 89 c7             	mov    %rax,%rdi
    c540:	e8 5b 7c ff ff       	call   41a0 <__asan_report_load16@plt>
    c545:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
    c54c:	48 8b 4b c0          	mov    -0x40(%rbx),%rcx
    c550:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
    c554:	48 89 cf             	mov    %rcx,%rdi
    c557:	48 89 c6             	mov    %rax,%rsi
    c55a:	e8 aa ba ff ff       	call   8009 <jstring_index_of_raw>
    c55f:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
    c565:	83 85 68 ff ff ff 01 	addl   $0x1,-0x98(%rbp)
    c56c:	83 bd 64 ff ff ff ff 	cmpl   $0xffffffff,-0x9c(%rbp)
    c573:	0f 85 72 fe ff ff    	jne    c3eb <jstring_split_jstring+0x169>
    c579:	4c 8b 05 c0 cb 00 00 	mov    0xcbc0(%rip),%r8        # 19140 <jstring_log>
    c580:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c584:	48 83 c0 04          	add    $0x4,%rax
    c588:	48 89 c2             	mov    %rax,%rdx
    c58b:	48 c1 ea 03          	shr    $0x3,%rdx
    c58f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c596:	0f b6 12             	movzbl (%rdx),%edx
    c599:	84 d2                	test   %dl,%dl
    c59b:	40 0f 95 c6          	setne  %sil
    c59f:	48 89 c1             	mov    %rax,%rcx
    c5a2:	83 e1 07             	and    $0x7,%ecx
    c5a5:	83 c1 03             	add    $0x3,%ecx
    c5a8:	38 d1                	cmp    %dl,%cl
    c5aa:	0f 9d c2             	setge  %dl
    c5ad:	21 f2                	and    %esi,%edx
    c5af:	84 d2                	test   %dl,%dl
    c5b1:	74 08                	je     c5bb <jstring_split_jstring+0x339>
    c5b3:	48 89 c7             	mov    %rax,%rdi
    c5b6:	e8 35 7b ff ff       	call   40f0 <__asan_report_load4@plt>
    c5bb:	8b 4b c4             	mov    -0x3c(%rbx),%ecx
    c5be:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c5c2:	48 89 c2             	mov    %rax,%rdx
    c5c5:	48 89 d0             	mov    %rdx,%rax
    c5c8:	48 c1 e8 03          	shr    $0x3,%rax
    c5cc:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    c5d2:	0f b6 00             	movzbl (%rax),%eax
    c5d5:	84 c0                	test   %al,%al
    c5d7:	40 0f 95 c6          	setne  %sil
    c5db:	3c 03                	cmp    $0x3,%al
    c5dd:	0f 9e c0             	setle  %al
    c5e0:	21 f0                	and    %esi,%eax
    c5e2:	84 c0                	test   %al,%al
    c5e4:	74 08                	je     c5ee <jstring_split_jstring+0x36c>
    c5e6:	48 89 d7             	mov    %rdx,%rdi
    c5e9:	e8 02 7b ff ff       	call   40f0 <__asan_report_load4@plt>
    c5ee:	8b 53 c0             	mov    -0x40(%rbx),%edx
    c5f1:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c5f5:	48 83 c0 08          	add    $0x8,%rax
    c5f9:	48 89 c6             	mov    %rax,%rsi
    c5fc:	48 c1 ee 03          	shr    $0x3,%rsi
    c600:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
    c607:	0f b6 36             	movzbl (%rsi),%esi
    c60a:	40 84 f6             	test   %sil,%sil
    c60d:	74 08                	je     c617 <jstring_split_jstring+0x395>
    c60f:	48 89 c7             	mov    %rax,%rdi
    c612:	e8 a9 7b ff ff       	call   41c0 <__asan_report_load8@plt>
    c617:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
    c61b:	48 8d 3d de 77 00 00 	lea    0x77de(%rip),%rdi        # 13e00 <_IO_stdin_used+0xe00>
    c622:	48 89 c6             	mov    %rax,%rsi
    c625:	b8 00 00 00 00       	mov    $0x0,%eax
    c62a:	41 ff d0             	call   *%r8
    c62d:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c631:	48 89 c2             	mov    %rax,%rdx
    c634:	48 89 d0             	mov    %rdx,%rax
    c637:	48 c1 e8 03          	shr    $0x3,%rax
    c63b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    c641:	0f b6 00             	movzbl (%rax),%eax
    c644:	84 c0                	test   %al,%al
    c646:	0f 95 c1             	setne  %cl
    c649:	3c 03                	cmp    $0x3,%al
    c64b:	0f 9e c0             	setle  %al
    c64e:	21 c8                	and    %ecx,%eax
    c650:	84 c0                	test   %al,%al
    c652:	74 08                	je     c65c <jstring_split_jstring+0x3da>
    c654:	48 89 d7             	mov    %rdx,%rdi
    c657:	e8 94 7a ff ff       	call   40f0 <__asan_report_load4@plt>
    c65c:	8b 43 c0             	mov    -0x40(%rbx),%eax
    c65f:	8d 50 ff             	lea    -0x1(%rax),%edx
    c662:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
    c668:	48 c1 e0 04          	shl    $0x4,%rax
    c66c:	48 89 c1             	mov    %rax,%rcx
    c66f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    c676:	4c 8d 34 01          	lea    (%rcx,%rax,1),%r14
    c67a:	4c 89 f0             	mov    %r14,%rax
    c67d:	48 89 c1             	mov    %rax,%rcx
    c680:	48 c1 e9 03          	shr    $0x3,%rcx
    c684:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    c68b:	0f b7 09             	movzwl (%rcx),%ecx
    c68e:	66 85 c9             	test   %cx,%cx
    c691:	74 08                	je     c69b <jstring_split_jstring+0x419>
    c693:	48 89 c7             	mov    %rax,%rdi
    c696:	e8 35 7a ff ff       	call   40d0 <__asan_report_store16@plt>
    c69b:	48 8d 43 c0          	lea    -0x40(%rbx),%rax
    c69f:	48 89 c1             	mov    %rax,%rcx
    c6a2:	48 c1 e9 03          	shr    $0x3,%rcx
    c6a6:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    c6ad:	0f b7 09             	movzwl (%rcx),%ecx
    c6b0:	66 85 c9             	test   %cx,%cx
    c6b3:	74 08                	je     c6bd <jstring_split_jstring+0x43b>
    c6b5:	48 89 c7             	mov    %rax,%rdi
    c6b8:	e8 e3 7a ff ff       	call   41a0 <__asan_report_load16@plt>
    c6bd:	48 8b 73 c0          	mov    -0x40(%rbx),%rsi
    c6c1:	48 8b 43 c8          	mov    -0x38(%rbx),%rax
    c6c5:	89 d1                	mov    %edx,%ecx
    c6c7:	ba 00 00 00 00       	mov    $0x0,%edx
    c6cc:	48 89 f7             	mov    %rsi,%rdi
    c6cf:	48 89 c6             	mov    %rax,%rsi
    c6d2:	e8 09 91 ff ff       	call   57e0 <jstring_create_substring_temporary>
    c6d7:	49 89 06             	mov    %rax,(%r14)
    c6da:	49 89 56 08          	mov    %rdx,0x8(%r14)
    c6de:	b8 01 00 00 00       	mov    $0x1,%eax
    c6e3:	89 c2                	mov    %eax,%edx
    c6e5:	4d 39 e7             	cmp    %r12,%r15
    c6e8:	74 23                	je     c70d <jstring_split_jstring+0x48b>
    c6ea:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    c6f1:	45 
    c6f2:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    c6f9:	f5 f5 f5 
    c6fc:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    c703:	49 8b 44 24 38       	mov    0x38(%r12),%rax
    c708:	c6 00 00             	movb   $0x0,(%rax)
    c70b:	eb 0b                	jmp    c718 <jstring_split_jstring+0x496>
    c70d:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    c714:	00 00 00 00 
    c718:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c71c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c723:	00 00 
    c725:	74 05                	je     c72c <jstring_split_jstring+0x4aa>
    c727:	e8 34 7a ff ff       	call   4160 <__stack_chk_fail@plt>
    c72c:	89 d0                	mov    %edx,%eax
    c72e:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    c735:	5b                   	pop    %rbx
    c736:	41 5c                	pop    %r12
    c738:	41 5d                	pop    %r13
    c73a:	41 5e                	pop    %r14
    c73c:	41 5f                	pop    %r15
    c73e:	5d                   	pop    %rbp
    c73f:	c3                   	ret

000000000000c740 <char_is_whitespace>:
    c740:	55                   	push   %rbp
    c741:	48 89 e5             	mov    %rsp,%rbp
    c744:	89 f8                	mov    %edi,%eax
    c746:	88 45 fc             	mov    %al,-0x4(%rbp)
    c749:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
    c74d:	83 f8 0d             	cmp    $0xd,%eax
    c750:	7f 07                	jg     c759 <char_is_whitespace+0x19>
    c752:	83 f8 09             	cmp    $0x9,%eax
    c755:	7d 07                	jge    c75e <char_is_whitespace+0x1e>
    c757:	eb 0c                	jmp    c765 <char_is_whitespace+0x25>
    c759:	83 f8 20             	cmp    $0x20,%eax
    c75c:	75 07                	jne    c765 <char_is_whitespace+0x25>
    c75e:	b8 01 00 00 00       	mov    $0x1,%eax
    c763:	eb 05                	jmp    c76a <char_is_whitespace+0x2a>
    c765:	b8 00 00 00 00       	mov    $0x0,%eax
    c76a:	5d                   	pop    %rbp
    c76b:	c3                   	ret

000000000000c76c <jstring_trim_left>:
    c76c:	55                   	push   %rbp
    c76d:	48 89 e5             	mov    %rsp,%rbp
    c770:	48 83 ec 20          	sub    $0x20,%rsp
    c774:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c778:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    c77f:	eb 04                	jmp    c785 <jstring_trim_left+0x19>
    c781:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    c785:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c789:	48 83 c0 08          	add    $0x8,%rax
    c78d:	48 89 c2             	mov    %rax,%rdx
    c790:	48 c1 ea 03          	shr    $0x3,%rdx
    c794:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c79b:	0f b6 12             	movzbl (%rdx),%edx
    c79e:	84 d2                	test   %dl,%dl
    c7a0:	74 08                	je     c7aa <jstring_trim_left+0x3e>
    c7a2:	48 89 c7             	mov    %rax,%rdi
    c7a5:	e8 16 7a ff ff       	call   41c0 <__asan_report_load8@plt>
    c7aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7ae:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c7b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c7b5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c7b9:	48 89 c8             	mov    %rcx,%rax
    c7bc:	48 89 c2             	mov    %rax,%rdx
    c7bf:	48 c1 ea 03          	shr    $0x3,%rdx
    c7c3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c7ca:	0f b6 12             	movzbl (%rdx),%edx
    c7cd:	84 d2                	test   %dl,%dl
    c7cf:	40 0f 95 c6          	setne  %sil
    c7d3:	48 89 c7             	mov    %rax,%rdi
    c7d6:	83 e7 07             	and    $0x7,%edi
    c7d9:	40 38 d7             	cmp    %dl,%dil
    c7dc:	0f 9d c2             	setge  %dl
    c7df:	21 f2                	and    %esi,%edx
    c7e1:	84 d2                	test   %dl,%dl
    c7e3:	74 08                	je     c7ed <jstring_trim_left+0x81>
    c7e5:	48 89 c7             	mov    %rax,%rdi
    c7e8:	e8 a3 79 ff ff       	call   4190 <__asan_report_load1@plt>
    c7ed:	0f b6 01             	movzbl (%rcx),%eax
    c7f0:	0f be c0             	movsbl %al,%eax
    c7f3:	89 c7                	mov    %eax,%edi
    c7f5:	e8 46 ff ff ff       	call   c740 <char_is_whitespace>
    c7fa:	85 c0                	test   %eax,%eax
    c7fc:	75 83                	jne    c781 <jstring_trim_left+0x15>
    c7fe:	8b 55 fc             	mov    -0x4(%rbp),%edx
    c801:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c805:	be 00 00 00 00       	mov    $0x0,%esi
    c80a:	48 89 c7             	mov    %rax,%rdi
    c80d:	e8 df e1 ff ff       	call   a9f1 <jstring_remove_at>
    c812:	85 c0                	test   %eax,%eax
    c814:	75 07                	jne    c81d <jstring_trim_left+0xb1>
    c816:	b8 00 00 00 00       	mov    $0x0,%eax
    c81b:	eb 05                	jmp    c822 <jstring_trim_left+0xb6>
    c81d:	b8 01 00 00 00       	mov    $0x1,%eax
    c822:	c9                   	leave
    c823:	c3                   	ret

000000000000c824 <jstring_trim_right>:
    c824:	55                   	push   %rbp
    c825:	48 89 e5             	mov    %rsp,%rbp
    c828:	48 83 ec 20          	sub    $0x20,%rsp
    c82c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c830:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c834:	48 89 c2             	mov    %rax,%rdx
    c837:	48 89 d0             	mov    %rdx,%rax
    c83a:	48 c1 e8 03          	shr    $0x3,%rax
    c83e:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    c844:	0f b6 00             	movzbl (%rax),%eax
    c847:	84 c0                	test   %al,%al
    c849:	0f 95 c1             	setne  %cl
    c84c:	3c 03                	cmp    $0x3,%al
    c84e:	0f 9e c0             	setle  %al
    c851:	21 c8                	and    %ecx,%eax
    c853:	84 c0                	test   %al,%al
    c855:	74 08                	je     c85f <jstring_trim_right+0x3b>
    c857:	48 89 d7             	mov    %rdx,%rdi
    c85a:	e8 91 78 ff ff       	call   40f0 <__asan_report_load4@plt>
    c85f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c863:	8b 00                	mov    (%rax),%eax
    c865:	83 e8 01             	sub    $0x1,%eax
    c868:	89 45 fc             	mov    %eax,-0x4(%rbp)
    c86b:	eb 04                	jmp    c871 <jstring_trim_right+0x4d>
    c86d:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    c871:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c875:	48 83 c0 08          	add    $0x8,%rax
    c879:	48 89 c2             	mov    %rax,%rdx
    c87c:	48 c1 ea 03          	shr    $0x3,%rdx
    c880:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c887:	0f b6 12             	movzbl (%rdx),%edx
    c88a:	84 d2                	test   %dl,%dl
    c88c:	74 08                	je     c896 <jstring_trim_right+0x72>
    c88e:	48 89 c7             	mov    %rax,%rdi
    c891:	e8 2a 79 ff ff       	call   41c0 <__asan_report_load8@plt>
    c896:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c89a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c89e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c8a1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c8a5:	48 89 c8             	mov    %rcx,%rax
    c8a8:	48 89 c2             	mov    %rax,%rdx
    c8ab:	48 c1 ea 03          	shr    $0x3,%rdx
    c8af:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    c8b6:	0f b6 12             	movzbl (%rdx),%edx
    c8b9:	84 d2                	test   %dl,%dl
    c8bb:	40 0f 95 c6          	setne  %sil
    c8bf:	48 89 c7             	mov    %rax,%rdi
    c8c2:	83 e7 07             	and    $0x7,%edi
    c8c5:	40 38 d7             	cmp    %dl,%dil
    c8c8:	0f 9d c2             	setge  %dl
    c8cb:	21 f2                	and    %esi,%edx
    c8cd:	84 d2                	test   %dl,%dl
    c8cf:	74 08                	je     c8d9 <jstring_trim_right+0xb5>
    c8d1:	48 89 c7             	mov    %rax,%rdi
    c8d4:	e8 b7 78 ff ff       	call   4190 <__asan_report_load1@plt>
    c8d9:	0f b6 01             	movzbl (%rcx),%eax
    c8dc:	0f be c0             	movsbl %al,%eax
    c8df:	89 c7                	mov    %eax,%edi
    c8e1:	e8 5a fe ff ff       	call   c740 <char_is_whitespace>
    c8e6:	85 c0                	test   %eax,%eax
    c8e8:	75 83                	jne    c86d <jstring_trim_right+0x49>
    c8ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8ee:	48 89 c2             	mov    %rax,%rdx
    c8f1:	48 89 d0             	mov    %rdx,%rax
    c8f4:	48 c1 e8 03          	shr    $0x3,%rax
    c8f8:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    c8fe:	0f b6 00             	movzbl (%rax),%eax
    c901:	84 c0                	test   %al,%al
    c903:	0f 95 c1             	setne  %cl
    c906:	3c 03                	cmp    $0x3,%al
    c908:	0f 9e c0             	setle  %al
    c90b:	21 c8                	and    %ecx,%eax
    c90d:	84 c0                	test   %al,%al
    c90f:	74 08                	je     c919 <jstring_trim_right+0xf5>
    c911:	48 89 d7             	mov    %rdx,%rdi
    c914:	e8 d7 77 ff ff       	call   40f0 <__asan_report_load4@plt>
    c919:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c91d:	8b 00                	mov    (%rax),%eax
    c91f:	2b 45 fc             	sub    -0x4(%rbp),%eax
    c922:	8d 50 ff             	lea    -0x1(%rax),%edx
    c925:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c928:	8d 48 01             	lea    0x1(%rax),%ecx
    c92b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c92f:	89 ce                	mov    %ecx,%esi
    c931:	48 89 c7             	mov    %rax,%rdi
    c934:	e8 b8 e0 ff ff       	call   a9f1 <jstring_remove_at>
    c939:	85 c0                	test   %eax,%eax
    c93b:	75 07                	jne    c944 <jstring_trim_right+0x120>
    c93d:	b8 00 00 00 00       	mov    $0x0,%eax
    c942:	eb 05                	jmp    c949 <jstring_trim_right+0x125>
    c944:	b8 01 00 00 00       	mov    $0x1,%eax
    c949:	c9                   	leave
    c94a:	c3                   	ret

000000000000c94b <jstring_trim>:
    c94b:	55                   	push   %rbp
    c94c:	48 89 e5             	mov    %rsp,%rbp
    c94f:	48 83 ec 10          	sub    $0x10,%rsp
    c953:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95b:	48 89 c7             	mov    %rax,%rdi
    c95e:	e8 c1 fe ff ff       	call   c824 <jstring_trim_right>
    c963:	85 c0                	test   %eax,%eax
    c965:	75 07                	jne    c96e <jstring_trim+0x23>
    c967:	b8 00 00 00 00       	mov    $0x0,%eax
    c96c:	eb 1c                	jmp    c98a <jstring_trim+0x3f>
    c96e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c972:	48 89 c7             	mov    %rax,%rdi
    c975:	e8 f2 fd ff ff       	call   c76c <jstring_trim_left>
    c97a:	85 c0                	test   %eax,%eax
    c97c:	75 07                	jne    c985 <jstring_trim+0x3a>
    c97e:	b8 00 00 00 00       	mov    $0x0,%eax
    c983:	eb 05                	jmp    c98a <jstring_trim+0x3f>
    c985:	b8 01 00 00 00       	mov    $0x1,%eax
    c98a:	c9                   	leave
    c98b:	c3                   	ret

000000000000c98c <log_error>:
    c98c:	55                   	push   %rbp
    c98d:	48 89 e5             	mov    %rsp,%rbp
    c990:	41 56                	push   %r14
    c992:	41 55                	push   %r13
    c994:	41 54                	push   %r12
    c996:	53                   	push   %rbx
    c997:	48 81 ec 40 42 00 00 	sub    $0x4240,%rsp
    c99e:	48 89 bd a8 bd ff ff 	mov    %rdi,-0x4258(%rbp)
    c9a5:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
    c9ac:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    c9b3:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    c9ba:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    c9c1:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    c9c8:	84 c0                	test   %al,%al
    c9ca:	74 26                	je     c9f2 <log_error+0x66>
    c9cc:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    c9d3:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    c9da:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    c9de:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    c9e2:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    c9e6:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    c9ea:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    c9ee:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    c9f2:	4c 8d a5 b0 bd ff ff 	lea    -0x4250(%rbp),%r12
    c9f9:	4d 89 e6             	mov    %r12,%r14
    c9fc:	83 3d 5d e8 00 00 00 	cmpl   $0x0,0xe85d(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    ca03:	74 12                	je     ca17 <log_error+0x8b>
    ca05:	bf 60 41 00 00       	mov    $0x4160,%edi
    ca0a:	e8 b1 76 ff ff       	call   40c0 <__asan_stack_malloc_9@plt>
    ca0f:	48 85 c0             	test   %rax,%rax
    ca12:	74 03                	je     ca17 <log_error+0x8b>
    ca14:	49 89 c4             	mov    %rax,%r12
    ca17:	49 8d 84 24 80 41 00 	lea    0x4180(%r12),%rax
    ca1e:	00 
    ca1f:	49 89 c5             	mov    %rax,%r13
    ca22:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    ca29:	41 
    ca2a:	48 8d 05 2f 74 00 00 	lea    0x742f(%rip),%rax        # 13e60 <_IO_stdin_used+0xe60>
    ca31:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ca36:	48 8d 05 4f ff ff ff 	lea    -0xb1(%rip),%rax        # c98c <log_error>
    ca3d:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    ca42:	4c 89 e3             	mov    %r12,%rbx
    ca45:	48 c1 eb 03          	shr    $0x3,%rbx
    ca49:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
    ca50:	f1 f1 f1 
    ca53:	c7 83 04 80 ff 7f 00 	movl   $0xf2000000,0x7fff8004(%rbx)
    ca5a:	00 00 f2 
    ca5d:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
    ca64:	f2 f2 f2 
    ca67:	c7 83 0c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff880c(%rbx)
    ca6e:	f3 f3 f3 
    ca71:	c7 83 10 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8810(%rbx)
    ca78:	f3 f3 f3 
    ca7b:	c7 83 14 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8814(%rbx)
    ca82:	f3 f3 f3 
    ca85:	c7 83 18 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8818(%rbx)
    ca8c:	f3 f3 f3 
    ca8f:	c7 83 1c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff881c(%rbx)
    ca96:	f3 f3 f3 
    ca99:	c7 83 20 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8820(%rbx)
    caa0:	f3 f3 f3 
    caa3:	c7 83 24 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8824(%rbx)
    caaa:	f3 f3 f3 
    caad:	c7 83 28 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8828(%rbx)
    cab4:	f3 f3 f3 
    cab7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cabe:	00 00 
    cac0:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    cac7:	31 c0                	xor    %eax,%eax
    cac9:	41 c7 85 a0 be ff ff 	movl   $0x8,-0x4160(%r13)
    cad0:	08 00 00 00 
    cad4:	41 c7 85 a4 be ff ff 	movl   $0x30,-0x415c(%r13)
    cadb:	30 00 00 00 
    cadf:	48 8d 45 10          	lea    0x10(%rbp),%rax
    cae3:	49 89 85 a8 be ff ff 	mov    %rax,-0x4158(%r13)
    caea:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    caf1:	49 89 85 b0 be ff ff 	mov    %rax,-0x4150(%r13)
    caf8:	49 8d 8d a0 be ff ff 	lea    -0x4160(%r13),%rcx
    caff:	48 8b 95 a8 bd ff ff 	mov    -0x4258(%rbp),%rdx
    cb06:	49 8d 85 e0 be ff ff 	lea    -0x4120(%r13),%rax
    cb0d:	be 00 40 00 00       	mov    $0x4000,%esi
    cb12:	48 89 c7             	mov    %rax,%rdi
    cb15:	b8 00 00 00 00       	mov    $0x0,%eax
    cb1a:	e8 b1 76 ff ff       	call   41d0 <vsnprintf@plt>
    cb1f:	49 8d 95 e0 be ff ff 	lea    -0x4120(%r13),%rdx
    cb26:	48 8d 05 73 73 00 00 	lea    0x7373(%rip),%rax        # 13ea0 <_IO_stdin_used+0xea0>
    cb2d:	48 89 d6             	mov    %rdx,%rsi
    cb30:	48 89 c7             	mov    %rax,%rdi
    cb33:	b8 00 00 00 00       	mov    $0x0,%eax
    cb38:	e8 13 75 ff ff       	call   4050 <printf@plt>
    cb3d:	90                   	nop
    cb3e:	4d 39 e6             	cmp    %r12,%r14
    cb41:	74 1a                	je     cb5d <log_error+0x1d1>
    cb43:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    cb4a:	45 
    cb4b:	4c 89 f2             	mov    %r14,%rdx
    cb4e:	be 60 41 00 00       	mov    $0x4160,%esi
    cb53:	4c 89 e7             	mov    %r12,%rdi
    cb56:	e8 a5 75 ff ff       	call   4100 <__asan_stack_free_9@plt>
    cb5b:	eb 27                	jmp    cb84 <log_error+0x1f8>
    cb5d:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
    cb64:	00 00 00 00 
    cb68:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
    cb6f:	00 00 00 
    cb72:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cb76:	0f 11 83 0c 88 ff 7f 	movups %xmm0,0x7fff880c(%rbx)
    cb7d:	0f 11 83 1c 88 ff 7f 	movups %xmm0,0x7fff881c(%rbx)
    cb84:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    cb8b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cb92:	00 00 
    cb94:	74 05                	je     cb9b <log_error+0x20f>
    cb96:	e8 c5 75 ff ff       	call   4160 <__stack_chk_fail@plt>
    cb9b:	48 81 c4 40 42 00 00 	add    $0x4240,%rsp
    cba2:	5b                   	pop    %rbx
    cba3:	41 5c                	pop    %r12
    cba5:	41 5d                	pop    %r13
    cba7:	41 5e                	pop    %r14
    cba9:	5d                   	pop    %rbp
    cbaa:	c3                   	ret

000000000000cbab <log_warn>:
    cbab:	55                   	push   %rbp
    cbac:	48 89 e5             	mov    %rsp,%rbp
    cbaf:	41 56                	push   %r14
    cbb1:	41 55                	push   %r13
    cbb3:	41 54                	push   %r12
    cbb5:	53                   	push   %rbx
    cbb6:	48 81 ec 40 42 00 00 	sub    $0x4240,%rsp
    cbbd:	48 89 bd a8 bd ff ff 	mov    %rdi,-0x4258(%rbp)
    cbc4:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
    cbcb:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    cbd2:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    cbd9:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    cbe0:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    cbe7:	84 c0                	test   %al,%al
    cbe9:	74 26                	je     cc11 <log_warn+0x66>
    cbeb:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    cbf2:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    cbf9:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    cbfd:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    cc01:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    cc05:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    cc09:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    cc0d:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    cc11:	4c 8d a5 b0 bd ff ff 	lea    -0x4250(%rbp),%r12
    cc18:	4d 89 e6             	mov    %r12,%r14
    cc1b:	83 3d 3e e6 00 00 00 	cmpl   $0x0,0xe63e(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    cc22:	74 12                	je     cc36 <log_warn+0x8b>
    cc24:	bf 60 41 00 00       	mov    $0x4160,%edi
    cc29:	e8 92 74 ff ff       	call   40c0 <__asan_stack_malloc_9@plt>
    cc2e:	48 85 c0             	test   %rax,%rax
    cc31:	74 03                	je     cc36 <log_warn+0x8b>
    cc33:	49 89 c4             	mov    %rax,%r12
    cc36:	49 8d 84 24 80 41 00 	lea    0x4180(%r12),%rax
    cc3d:	00 
    cc3e:	49 89 c5             	mov    %rax,%r13
    cc41:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    cc48:	41 
    cc49:	48 8d 05 b0 72 00 00 	lea    0x72b0(%rip),%rax        # 13f00 <_IO_stdin_used+0xf00>
    cc50:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    cc55:	48 8d 05 4f ff ff ff 	lea    -0xb1(%rip),%rax        # cbab <log_warn>
    cc5c:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    cc61:	4c 89 e3             	mov    %r12,%rbx
    cc64:	48 c1 eb 03          	shr    $0x3,%rbx
    cc68:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
    cc6f:	f1 f1 f1 
    cc72:	c7 83 04 80 ff 7f 00 	movl   $0xf2000000,0x7fff8004(%rbx)
    cc79:	00 00 f2 
    cc7c:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
    cc83:	f2 f2 f2 
    cc86:	c7 83 0c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff880c(%rbx)
    cc8d:	f3 f3 f3 
    cc90:	c7 83 10 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8810(%rbx)
    cc97:	f3 f3 f3 
    cc9a:	c7 83 14 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8814(%rbx)
    cca1:	f3 f3 f3 
    cca4:	c7 83 18 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8818(%rbx)
    ccab:	f3 f3 f3 
    ccae:	c7 83 1c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff881c(%rbx)
    ccb5:	f3 f3 f3 
    ccb8:	c7 83 20 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8820(%rbx)
    ccbf:	f3 f3 f3 
    ccc2:	c7 83 24 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8824(%rbx)
    ccc9:	f3 f3 f3 
    cccc:	c7 83 28 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8828(%rbx)
    ccd3:	f3 f3 f3 
    ccd6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ccdd:	00 00 
    ccdf:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    cce6:	31 c0                	xor    %eax,%eax
    cce8:	41 c7 85 a0 be ff ff 	movl   $0x8,-0x4160(%r13)
    ccef:	08 00 00 00 
    ccf3:	41 c7 85 a4 be ff ff 	movl   $0x30,-0x415c(%r13)
    ccfa:	30 00 00 00 
    ccfe:	48 8d 45 10          	lea    0x10(%rbp),%rax
    cd02:	49 89 85 a8 be ff ff 	mov    %rax,-0x4158(%r13)
    cd09:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    cd10:	49 89 85 b0 be ff ff 	mov    %rax,-0x4150(%r13)
    cd17:	49 8d 8d a0 be ff ff 	lea    -0x4160(%r13),%rcx
    cd1e:	48 8b 95 a8 bd ff ff 	mov    -0x4258(%rbp),%rdx
    cd25:	49 8d 85 e0 be ff ff 	lea    -0x4120(%r13),%rax
    cd2c:	be 00 40 00 00       	mov    $0x4000,%esi
    cd31:	48 89 c7             	mov    %rax,%rdi
    cd34:	b8 00 00 00 00       	mov    $0x0,%eax
    cd39:	e8 92 74 ff ff       	call   41d0 <vsnprintf@plt>
    cd3e:	49 8d 95 e0 be ff ff 	lea    -0x4120(%r13),%rdx
    cd45:	48 8d 05 f4 71 00 00 	lea    0x71f4(%rip),%rax        # 13f40 <_IO_stdin_used+0xf40>
    cd4c:	48 89 d6             	mov    %rdx,%rsi
    cd4f:	48 89 c7             	mov    %rax,%rdi
    cd52:	b8 00 00 00 00       	mov    $0x0,%eax
    cd57:	e8 f4 72 ff ff       	call   4050 <printf@plt>
    cd5c:	90                   	nop
    cd5d:	4d 39 e6             	cmp    %r12,%r14
    cd60:	74 1a                	je     cd7c <log_warn+0x1d1>
    cd62:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    cd69:	45 
    cd6a:	4c 89 f2             	mov    %r14,%rdx
    cd6d:	be 60 41 00 00       	mov    $0x4160,%esi
    cd72:	4c 89 e7             	mov    %r12,%rdi
    cd75:	e8 86 73 ff ff       	call   4100 <__asan_stack_free_9@plt>
    cd7a:	eb 27                	jmp    cda3 <log_warn+0x1f8>
    cd7c:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
    cd83:	00 00 00 00 
    cd87:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
    cd8e:	00 00 00 
    cd91:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cd95:	0f 11 83 0c 88 ff 7f 	movups %xmm0,0x7fff880c(%rbx)
    cd9c:	0f 11 83 1c 88 ff 7f 	movups %xmm0,0x7fff881c(%rbx)
    cda3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    cdaa:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cdb1:	00 00 
    cdb3:	74 05                	je     cdba <log_warn+0x20f>
    cdb5:	e8 a6 73 ff ff       	call   4160 <__stack_chk_fail@plt>
    cdba:	48 81 c4 40 42 00 00 	add    $0x4240,%rsp
    cdc1:	5b                   	pop    %rbx
    cdc2:	41 5c                	pop    %r12
    cdc4:	41 5d                	pop    %r13
    cdc6:	41 5e                	pop    %r14
    cdc8:	5d                   	pop    %rbp
    cdc9:	c3                   	ret

000000000000cdca <log_info>:
    cdca:	55                   	push   %rbp
    cdcb:	48 89 e5             	mov    %rsp,%rbp
    cdce:	41 56                	push   %r14
    cdd0:	41 55                	push   %r13
    cdd2:	41 54                	push   %r12
    cdd4:	53                   	push   %rbx
    cdd5:	48 81 ec 40 42 00 00 	sub    $0x4240,%rsp
    cddc:	48 89 bd a8 bd ff ff 	mov    %rdi,-0x4258(%rbp)
    cde3:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
    cdea:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    cdf1:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    cdf8:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    cdff:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    ce06:	84 c0                	test   %al,%al
    ce08:	74 26                	je     ce30 <log_info+0x66>
    ce0a:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ce11:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    ce18:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    ce1c:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    ce20:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    ce24:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    ce28:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    ce2c:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    ce30:	4c 8d a5 b0 bd ff ff 	lea    -0x4250(%rbp),%r12
    ce37:	4d 89 e6             	mov    %r12,%r14
    ce3a:	83 3d 1f e4 00 00 00 	cmpl   $0x0,0xe41f(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    ce41:	74 12                	je     ce55 <log_info+0x8b>
    ce43:	bf 60 41 00 00       	mov    $0x4160,%edi
    ce48:	e8 73 72 ff ff       	call   40c0 <__asan_stack_malloc_9@plt>
    ce4d:	48 85 c0             	test   %rax,%rax
    ce50:	74 03                	je     ce55 <log_info+0x8b>
    ce52:	49 89 c4             	mov    %rax,%r12
    ce55:	49 8d 84 24 80 41 00 	lea    0x4180(%r12),%rax
    ce5c:	00 
    ce5d:	49 89 c5             	mov    %rax,%r13
    ce60:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    ce67:	41 
    ce68:	48 8d 05 31 71 00 00 	lea    0x7131(%rip),%rax        # 13fa0 <_IO_stdin_used+0xfa0>
    ce6f:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    ce74:	48 8d 05 4f ff ff ff 	lea    -0xb1(%rip),%rax        # cdca <log_info>
    ce7b:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    ce80:	4c 89 e3             	mov    %r12,%rbx
    ce83:	48 c1 eb 03          	shr    $0x3,%rbx
    ce87:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
    ce8e:	f1 f1 f1 
    ce91:	c7 83 04 80 ff 7f 00 	movl   $0xf2000000,0x7fff8004(%rbx)
    ce98:	00 00 f2 
    ce9b:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
    cea2:	f2 f2 f2 
    cea5:	c7 83 0c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff880c(%rbx)
    ceac:	f3 f3 f3 
    ceaf:	c7 83 10 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8810(%rbx)
    ceb6:	f3 f3 f3 
    ceb9:	c7 83 14 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8814(%rbx)
    cec0:	f3 f3 f3 
    cec3:	c7 83 18 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8818(%rbx)
    ceca:	f3 f3 f3 
    cecd:	c7 83 1c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff881c(%rbx)
    ced4:	f3 f3 f3 
    ced7:	c7 83 20 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8820(%rbx)
    cede:	f3 f3 f3 
    cee1:	c7 83 24 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8824(%rbx)
    cee8:	f3 f3 f3 
    ceeb:	c7 83 28 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8828(%rbx)
    cef2:	f3 f3 f3 
    cef5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cefc:	00 00 
    cefe:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    cf05:	31 c0                	xor    %eax,%eax
    cf07:	41 c7 85 a0 be ff ff 	movl   $0x8,-0x4160(%r13)
    cf0e:	08 00 00 00 
    cf12:	41 c7 85 a4 be ff ff 	movl   $0x30,-0x415c(%r13)
    cf19:	30 00 00 00 
    cf1d:	48 8d 45 10          	lea    0x10(%rbp),%rax
    cf21:	49 89 85 a8 be ff ff 	mov    %rax,-0x4158(%r13)
    cf28:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    cf2f:	49 89 85 b0 be ff ff 	mov    %rax,-0x4150(%r13)
    cf36:	49 8d 8d a0 be ff ff 	lea    -0x4160(%r13),%rcx
    cf3d:	48 8b 95 a8 bd ff ff 	mov    -0x4258(%rbp),%rdx
    cf44:	49 8d 85 e0 be ff ff 	lea    -0x4120(%r13),%rax
    cf4b:	be 00 40 00 00       	mov    $0x4000,%esi
    cf50:	48 89 c7             	mov    %rax,%rdi
    cf53:	b8 00 00 00 00       	mov    $0x0,%eax
    cf58:	e8 73 72 ff ff       	call   41d0 <vsnprintf@plt>
    cf5d:	49 8d 95 e0 be ff ff 	lea    -0x4120(%r13),%rdx
    cf64:	48 8d 05 75 70 00 00 	lea    0x7075(%rip),%rax        # 13fe0 <_IO_stdin_used+0xfe0>
    cf6b:	48 89 d6             	mov    %rdx,%rsi
    cf6e:	48 89 c7             	mov    %rax,%rdi
    cf71:	b8 00 00 00 00       	mov    $0x0,%eax
    cf76:	e8 d5 70 ff ff       	call   4050 <printf@plt>
    cf7b:	90                   	nop
    cf7c:	4d 39 e6             	cmp    %r12,%r14
    cf7f:	74 1a                	je     cf9b <log_info+0x1d1>
    cf81:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    cf88:	45 
    cf89:	4c 89 f2             	mov    %r14,%rdx
    cf8c:	be 60 41 00 00       	mov    $0x4160,%esi
    cf91:	4c 89 e7             	mov    %r12,%rdi
    cf94:	e8 67 71 ff ff       	call   4100 <__asan_stack_free_9@plt>
    cf99:	eb 27                	jmp    cfc2 <log_info+0x1f8>
    cf9b:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
    cfa2:	00 00 00 00 
    cfa6:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
    cfad:	00 00 00 
    cfb0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cfb4:	0f 11 83 0c 88 ff 7f 	movups %xmm0,0x7fff880c(%rbx)
    cfbb:	0f 11 83 1c 88 ff 7f 	movups %xmm0,0x7fff881c(%rbx)
    cfc2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    cfc9:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cfd0:	00 00 
    cfd2:	74 05                	je     cfd9 <log_info+0x20f>
    cfd4:	e8 87 71 ff ff       	call   4160 <__stack_chk_fail@plt>
    cfd9:	48 81 c4 40 42 00 00 	add    $0x4240,%rsp
    cfe0:	5b                   	pop    %rbx
    cfe1:	41 5c                	pop    %r12
    cfe3:	41 5d                	pop    %r13
    cfe5:	41 5e                	pop    %r14
    cfe7:	5d                   	pop    %rbp
    cfe8:	c3                   	ret

000000000000cfe9 <log_debug>:
    cfe9:	55                   	push   %rbp
    cfea:	48 89 e5             	mov    %rsp,%rbp
    cfed:	41 56                	push   %r14
    cfef:	41 55                	push   %r13
    cff1:	41 54                	push   %r12
    cff3:	53                   	push   %rbx
    cff4:	48 81 ec 40 42 00 00 	sub    $0x4240,%rsp
    cffb:	48 89 bd a8 bd ff ff 	mov    %rdi,-0x4258(%rbp)
    d002:	48 89 b5 38 ff ff ff 	mov    %rsi,-0xc8(%rbp)
    d009:	48 89 95 40 ff ff ff 	mov    %rdx,-0xc0(%rbp)
    d010:	48 89 8d 48 ff ff ff 	mov    %rcx,-0xb8(%rbp)
    d017:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    d01e:	4c 89 8d 58 ff ff ff 	mov    %r9,-0xa8(%rbp)
    d025:	84 c0                	test   %al,%al
    d027:	74 26                	je     d04f <log_debug+0x66>
    d029:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d030:	0f 29 8d 70 ff ff ff 	movaps %xmm1,-0x90(%rbp)
    d037:	0f 29 55 80          	movaps %xmm2,-0x80(%rbp)
    d03b:	0f 29 5d 90          	movaps %xmm3,-0x70(%rbp)
    d03f:	0f 29 65 a0          	movaps %xmm4,-0x60(%rbp)
    d043:	0f 29 6d b0          	movaps %xmm5,-0x50(%rbp)
    d047:	0f 29 75 c0          	movaps %xmm6,-0x40(%rbp)
    d04b:	0f 29 7d d0          	movaps %xmm7,-0x30(%rbp)
    d04f:	4c 8d a5 b0 bd ff ff 	lea    -0x4250(%rbp),%r12
    d056:	4d 89 e6             	mov    %r12,%r14
    d059:	83 3d 00 e2 00 00 00 	cmpl   $0x0,0xe200(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    d060:	74 12                	je     d074 <log_debug+0x8b>
    d062:	bf 60 41 00 00       	mov    $0x4160,%edi
    d067:	e8 54 70 ff ff       	call   40c0 <__asan_stack_malloc_9@plt>
    d06c:	48 85 c0             	test   %rax,%rax
    d06f:	74 03                	je     d074 <log_debug+0x8b>
    d071:	49 89 c4             	mov    %rax,%r12
    d074:	49 8d 84 24 80 41 00 	lea    0x4180(%r12),%rax
    d07b:	00 
    d07c:	49 89 c5             	mov    %rax,%r13
    d07f:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    d086:	41 
    d087:	48 8d 05 b2 6f 00 00 	lea    0x6fb2(%rip),%rax        # 14040 <_IO_stdin_used+0x1040>
    d08e:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    d093:	48 8d 05 4f ff ff ff 	lea    -0xb1(%rip),%rax        # cfe9 <log_debug>
    d09a:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    d09f:	4c 89 e3             	mov    %r12,%rbx
    d0a2:	48 c1 eb 03          	shr    $0x3,%rbx
    d0a6:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
    d0ad:	f1 f1 f1 
    d0b0:	c7 83 04 80 ff 7f 00 	movl   $0xf2000000,0x7fff8004(%rbx)
    d0b7:	00 00 f2 
    d0ba:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2f2f2,0x7fff8008(%rbx)
    d0c1:	f2 f2 f2 
    d0c4:	c7 83 0c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff880c(%rbx)
    d0cb:	f3 f3 f3 
    d0ce:	c7 83 10 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8810(%rbx)
    d0d5:	f3 f3 f3 
    d0d8:	c7 83 14 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8814(%rbx)
    d0df:	f3 f3 f3 
    d0e2:	c7 83 18 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8818(%rbx)
    d0e9:	f3 f3 f3 
    d0ec:	c7 83 1c 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff881c(%rbx)
    d0f3:	f3 f3 f3 
    d0f6:	c7 83 20 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8820(%rbx)
    d0fd:	f3 f3 f3 
    d100:	c7 83 24 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8824(%rbx)
    d107:	f3 f3 f3 
    d10a:	c7 83 28 88 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8828(%rbx)
    d111:	f3 f3 f3 
    d114:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d11b:	00 00 
    d11d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    d124:	31 c0                	xor    %eax,%eax
    d126:	41 c7 85 a0 be ff ff 	movl   $0x8,-0x4160(%r13)
    d12d:	08 00 00 00 
    d131:	41 c7 85 a4 be ff ff 	movl   $0x30,-0x415c(%r13)
    d138:	30 00 00 00 
    d13c:	48 8d 45 10          	lea    0x10(%rbp),%rax
    d140:	49 89 85 a8 be ff ff 	mov    %rax,-0x4158(%r13)
    d147:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    d14e:	49 89 85 b0 be ff ff 	mov    %rax,-0x4150(%r13)
    d155:	49 8d 8d a0 be ff ff 	lea    -0x4160(%r13),%rcx
    d15c:	48 8b 95 a8 bd ff ff 	mov    -0x4258(%rbp),%rdx
    d163:	49 8d 85 e0 be ff ff 	lea    -0x4120(%r13),%rax
    d16a:	be 00 40 00 00       	mov    $0x4000,%esi
    d16f:	48 89 c7             	mov    %rax,%rdi
    d172:	b8 00 00 00 00       	mov    $0x0,%eax
    d177:	e8 54 70 ff ff       	call   41d0 <vsnprintf@plt>
    d17c:	49 8d 95 e0 be ff ff 	lea    -0x4120(%r13),%rdx
    d183:	48 8d 05 f6 6e 00 00 	lea    0x6ef6(%rip),%rax        # 14080 <_IO_stdin_used+0x1080>
    d18a:	48 89 d6             	mov    %rdx,%rsi
    d18d:	48 89 c7             	mov    %rax,%rdi
    d190:	b8 00 00 00 00       	mov    $0x0,%eax
    d195:	e8 b6 6e ff ff       	call   4050 <printf@plt>
    d19a:	90                   	nop
    d19b:	4d 39 e6             	cmp    %r12,%r14
    d19e:	74 1a                	je     d1ba <log_debug+0x1d1>
    d1a0:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    d1a7:	45 
    d1a8:	4c 89 f2             	mov    %r14,%rdx
    d1ab:	be 60 41 00 00       	mov    $0x4160,%esi
    d1b0:	4c 89 e7             	mov    %r12,%rdi
    d1b3:	e8 48 6f ff ff       	call   4100 <__asan_stack_free_9@plt>
    d1b8:	eb 27                	jmp    d1e1 <log_debug+0x1f8>
    d1ba:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
    d1c1:	00 00 00 00 
    d1c5:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
    d1cc:	00 00 00 
    d1cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d1d3:	0f 11 83 0c 88 ff 7f 	movups %xmm0,0x7fff880c(%rbx)
    d1da:	0f 11 83 1c 88 ff 7f 	movups %xmm0,0x7fff881c(%rbx)
    d1e1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    d1e8:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d1ef:	00 00 
    d1f1:	74 05                	je     d1f8 <log_debug+0x20f>
    d1f3:	e8 68 6f ff ff       	call   4160 <__stack_chk_fail@plt>
    d1f8:	48 81 c4 40 42 00 00 	add    $0x4240,%rsp
    d1ff:	5b                   	pop    %rbx
    d200:	41 5c                	pop    %r12
    d202:	41 5d                	pop    %r13
    d204:	41 5e                	pop    %r14
    d206:	5d                   	pop    %rbp
    d207:	c3                   	ret

000000000000d208 <log_trace>:
    d208:	55                   	push   %rbp
    d209:	48 89 e5             	mov    %rsp,%rbp
    d20c:	48 83 ec 48          	sub    $0x48,%rsp
    d210:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    d217:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
    d21e:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
    d225:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
    d22c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
    d233:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
    d23a:	84 c0                	test   %al,%al
    d23c:	74 20                	je     d25e <log_trace+0x56>
    d23e:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    d242:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
    d246:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
    d24a:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
    d24e:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
    d252:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
    d256:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
    d25a:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
    d25e:	90                   	nop
    d25f:	c9                   	leave
    d260:	c3                   	ret

000000000000d261 <read_os_timer>:
    d261:	55                   	push   %rbp
    d262:	48 89 e5             	mov    %rsp,%rbp
    d265:	41 56                	push   %r14
    d267:	41 55                	push   %r13
    d269:	41 54                	push   %r12
    d26b:	53                   	push   %rbx
    d26c:	48 83 ec 60          	sub    $0x60,%rsp
    d270:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
    d274:	49 89 de             	mov    %rbx,%r14
    d277:	83 3d e2 df 00 00 00 	cmpl   $0x0,0xdfe2(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    d27e:	74 12                	je     d292 <read_os_timer+0x31>
    d280:	bf 40 00 00 00       	mov    $0x40,%edi
    d285:	e8 16 6e ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
    d28a:	48 85 c0             	test   %rax,%rax
    d28d:	74 03                	je     d292 <read_os_timer+0x31>
    d28f:	48 89 c3             	mov    %rax,%rbx
    d292:	48 8d 43 60          	lea    0x60(%rbx),%rax
    d296:	49 89 c4             	mov    %rax,%r12
    d299:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
    d2a0:	48 8d 05 39 6e 00 00 	lea    0x6e39(%rip),%rax        # 140e0 <_IO_stdin_used+0x10e0>
    d2a7:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d2ab:	48 8d 05 af ff ff ff 	lea    -0x51(%rip),%rax        # d261 <read_os_timer>
    d2b2:	48 89 43 10          	mov    %rax,0x10(%rbx)
    d2b6:	49 89 dd             	mov    %rbx,%r13
    d2b9:	49 c1 ed 03          	shr    $0x3,%r13
    d2bd:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    d2c4:	f1 f1 f1 f1 
    d2c8:	41 c7 85 04 80 ff 7f 	movl   $0xf3f30000,0x7fff8004(%r13)
    d2cf:	00 00 f3 f3 
    d2d3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d2da:	00 00 
    d2dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d2e0:	31 c0                	xor    %eax,%eax
    d2e2:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    d2e7:	be 00 00 00 00       	mov    $0x0,%esi
    d2ec:	48 89 c7             	mov    %rax,%rdi
    d2ef:	e8 ec 6e ff ff       	call   41e0 <gettimeofday@plt>
    d2f4:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    d2f9:	48 89 c2             	mov    %rax,%rdx
    d2fc:	48 c1 ea 03          	shr    $0x3,%rdx
    d300:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    d307:	0f b6 12             	movzbl (%rdx),%edx
    d30a:	84 d2                	test   %dl,%dl
    d30c:	74 08                	je     d316 <read_os_timer+0xb5>
    d30e:	48 89 c7             	mov    %rax,%rdi
    d311:	e8 aa 6e ff ff       	call   41c0 <__asan_report_load8@plt>
    d316:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
    d31b:	48 69 c8 40 42 0f 00 	imul   $0xf4240,%rax,%rcx
    d322:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
    d327:	48 83 c0 08          	add    $0x8,%rax
    d32b:	48 89 c2             	mov    %rax,%rdx
    d32e:	48 c1 ea 03          	shr    $0x3,%rdx
    d332:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    d339:	0f b6 12             	movzbl (%rdx),%edx
    d33c:	84 d2                	test   %dl,%dl
    d33e:	74 08                	je     d348 <read_os_timer+0xe7>
    d340:	48 89 c7             	mov    %rax,%rdi
    d343:	e8 78 6e ff ff       	call   41c0 <__asan_report_load8@plt>
    d348:	49 8b 44 24 c8       	mov    -0x38(%r12),%rax
    d34d:	48 01 c8             	add    %rcx,%rax
    d350:	48 89 c2             	mov    %rax,%rdx
    d353:	49 39 de             	cmp    %rbx,%r14
    d356:	74 21                	je     d379 <read_os_timer+0x118>
    d358:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
    d35f:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    d366:	f5 f5 f5 
    d369:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    d370:	48 8b 43 38          	mov    0x38(%rbx),%rax
    d374:	c6 00 00             	movb   $0x0,(%rax)
    d377:	eb 0b                	jmp    d384 <read_os_timer+0x123>
    d379:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    d380:	00 00 00 00 
    d384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d388:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    d38f:	00 00 
    d391:	74 05                	je     d398 <read_os_timer+0x137>
    d393:	e8 c8 6d ff ff       	call   4160 <__stack_chk_fail@plt>
    d398:	48 89 d0             	mov    %rdx,%rax
    d39b:	48 83 c4 60          	add    $0x60,%rsp
    d39f:	5b                   	pop    %rbx
    d3a0:	41 5c                	pop    %r12
    d3a2:	41 5d                	pop    %r13
    d3a4:	41 5e                	pop    %r14
    d3a6:	5d                   	pop    %rbp
    d3a7:	c3                   	ret

000000000000d3a8 <read_cpu_timer>:
    d3a8:	55                   	push   %rbp
    d3a9:	48 89 e5             	mov    %rsp,%rbp
    d3ac:	0f 31                	rdtsc
    d3ae:	48 c1 e2 20          	shl    $0x20,%rdx
    d3b2:	48 09 d0             	or     %rdx,%rax
    d3b5:	5d                   	pop    %rbp
    d3b6:	c3                   	ret

000000000000d3b7 <read_cpu_frequency>:
    d3b7:	55                   	push   %rbp
    d3b8:	48 89 e5             	mov    %rsp,%rbp
    d3bb:	48 83 ec 40          	sub    $0x40,%rsp
    d3bf:	b8 00 00 00 00       	mov    $0x0,%eax
    d3c4:	e8 df ff ff ff       	call   d3a8 <read_cpu_timer>
    d3c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d3cd:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    d3d4:	00 
    d3d5:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    d3dc:	00 
    d3dd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d3e4:	00 
    d3e5:	b8 00 00 00 00       	mov    $0x0,%eax
    d3ea:	e8 72 fe ff ff       	call   d261 <read_os_timer>
    d3ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d3f3:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d3fa:	00 
    d3fb:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    d402:	00 
    d403:	48 c7 45 f8 a0 86 01 	movq   $0x186a0,-0x8(%rbp)
    d40a:	00 
    d40b:	eb 1a                	jmp    d427 <read_cpu_frequency+0x70>
    d40d:	b8 00 00 00 00       	mov    $0x0,%eax
    d412:	e8 4a fe ff ff       	call   d261 <read_os_timer>
    d417:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d41b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d41f:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    d423:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d427:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d42b:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
    d42f:	72 dc                	jb     d40d <read_cpu_frequency+0x56>
    d431:	b8 00 00 00 00       	mov    $0x0,%eax
    d436:	e8 6d ff ff ff       	call   d3a8 <read_cpu_timer>
    d43b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d43f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d443:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
    d447:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d44b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d44f:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
    d456:	ba 00 00 00 00       	mov    $0x0,%edx
    d45b:	48 f7 75 c8          	divq   -0x38(%rbp)
    d45f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d463:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d467:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d46b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d46f:	48 8d 3d 8a 6c 00 00 	lea    0x6c8a(%rip),%rdi        # 14100 <_IO_stdin_used+0x1100>
    d476:	48 89 c6             	mov    %rax,%rsi
    d479:	b8 00 00 00 00       	mov    $0x0,%eax
    d47e:	e8 85 fd ff ff       	call   d208 <log_trace>
    d483:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d487:	48 ba db 34 b6 d7 82 	movabs $0x431bde82d7b634db,%rdx
    d48e:	de 1b 43 
    d491:	48 f7 e2             	mul    %rdx
    d494:	48 c1 ea 12          	shr    $0x12,%rdx
    d498:	48 8d 05 c1 6c 00 00 	lea    0x6cc1(%rip),%rax        # 14160 <_IO_stdin_used+0x1160>
    d49f:	48 89 d6             	mov    %rdx,%rsi
    d4a2:	48 89 c7             	mov    %rax,%rdi
    d4a5:	b8 00 00 00 00       	mov    $0x0,%eax
    d4aa:	e8 59 fd ff ff       	call   d208 <log_trace>
    d4af:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    d4b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d4b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d4bb:	48 8d 3d de 6c 00 00 	lea    0x6cde(%rip),%rdi        # 141a0 <_IO_stdin_used+0x11a0>
    d4c2:	48 89 c6             	mov    %rax,%rsi
    d4c5:	b8 00 00 00 00       	mov    $0x0,%eax
    d4ca:	e8 39 fd ff ff       	call   d208 <log_trace>
    d4cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4d3:	48 8d 15 26 6d 00 00 	lea    0x6d26(%rip),%rdx        # 14200 <_IO_stdin_used+0x1200>
    d4da:	48 89 c6             	mov    %rax,%rsi
    d4dd:	48 89 d7             	mov    %rdx,%rdi
    d4e0:	b8 00 00 00 00       	mov    $0x0,%eax
    d4e5:	e8 1e fd ff ff       	call   d208 <log_trace>
    d4ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4ee:	c9                   	leave
    d4ef:	c3                   	ret

000000000000d4f0 <start_profile>:
    d4f0:	55                   	push   %rbp
    d4f1:	48 89 e5             	mov    %rsp,%rbp
    d4f4:	b8 00 00 00 00       	mov    $0x0,%eax
    d4f9:	e8 aa fe ff ff       	call   d3a8 <read_cpu_timer>
    d4fe:	48 89 05 bb 5d 02 00 	mov    %rax,0x25dbb(%rip)        # 332c0 <global_profiler+0x18000>
    d505:	90                   	nop
    d506:	5d                   	pop    %rbp
    d507:	c3                   	ret

000000000000d508 <finish_and_print_profile>:
    d508:	55                   	push   %rbp
    d509:	48 89 e5             	mov    %rsp,%rbp
    d50c:	48 83 ec 30          	sub    $0x30,%rsp
    d510:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d514:	b8 00 00 00 00       	mov    $0x0,%eax
    d519:	e8 8a fe ff ff       	call   d3a8 <read_cpu_timer>
    d51e:	48 89 05 a3 5d 02 00 	mov    %rax,0x25da3(%rip)        # 332c8 <global_profiler+0x18008>
    d525:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d52a:	0f 84 ee 02 00 00    	je     d81e <finish_and_print_profile+0x316>
    d530:	48 8b 15 91 5d 02 00 	mov    0x25d91(%rip),%rdx        # 332c8 <global_profiler+0x18008>
    d537:	48 8b 05 82 5d 02 00 	mov    0x25d82(%rip),%rax        # 332c0 <global_profiler+0x18000>
    d53e:	48 29 c2             	sub    %rax,%rdx
    d541:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d545:	b8 00 00 00 00       	mov    $0x0,%eax
    d54a:	e8 68 fe ff ff       	call   d3b7 <read_cpu_frequency>
    d54f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d553:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d558:	75 29                	jne    d583 <finish_and_print_profile+0x7b>
    d55a:	48 8d 15 ff 6c 00 00 	lea    0x6cff(%rip),%rdx        # 14260 <_IO_stdin_used+0x1260>
    d561:	48 8d 35 38 6d 00 00 	lea    0x6d38(%rip),%rsi        # 142a0 <_IO_stdin_used+0x12a0>
    d568:	48 8d 05 71 6d 00 00 	lea    0x6d71(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    d56f:	b9 44 00 00 00       	mov    $0x44,%ecx
    d574:	48 89 c7             	mov    %rax,%rdi
    d577:	b8 00 00 00 00       	mov    $0x0,%eax
    d57c:	e8 cf 6a ff ff       	call   4050 <printf@plt>
    d581:	0f 0b                	ud2
    d583:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d587:	48 85 c0             	test   %rax,%rax
    d58a:	78 0b                	js     d597 <finish_and_print_profile+0x8f>
    d58c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d590:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    d595:	eb 19                	jmp    d5b0 <finish_and_print_profile+0xa8>
    d597:	48 89 c2             	mov    %rax,%rdx
    d59a:	48 d1 ea             	shr    $1,%rdx
    d59d:	83 e0 01             	and    $0x1,%eax
    d5a0:	48 09 c2             	or     %rax,%rdx
    d5a3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d5a7:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    d5ac:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    d5b0:	f2 0f 10 0d e8 90 00 	movsd  0x90e8(%rip),%xmm1        # 166a0 <__func__.0+0x440>
    d5b7:	00 
    d5b8:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    d5bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d5c0:	48 85 c0             	test   %rax,%rax
    d5c3:	78 0b                	js     d5d0 <finish_and_print_profile+0xc8>
    d5c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d5c9:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    d5ce:	eb 19                	jmp    d5e9 <finish_and_print_profile+0xe1>
    d5d0:	48 89 c2             	mov    %rax,%rdx
    d5d3:	48 d1 ea             	shr    $1,%rdx
    d5d6:	83 e0 01             	and    $0x1,%eax
    d5d9:	48 09 c2             	or     %rax,%rdx
    d5dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d5e0:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    d5e5:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    d5e9:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    d5ed:	66 48 0f 7e c8       	movq   %xmm1,%rax
    d5f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d5f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d5fa:	48 8d 3d 5f 6d 00 00 	lea    0x6d5f(%rip),%rdi        # 14360 <_IO_stdin_used+0x1360>
    d601:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
    d605:	48 89 ce             	mov    %rcx,%rsi
    d608:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d60d:	b8 01 00 00 00       	mov    $0x1,%eax
    d612:	41 ff d0             	call   *%r8
    d615:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    d61c:	e9 ee 01 00 00       	jmp    d80f <finish_and_print_profile+0x307>
    d621:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d624:	48 89 d0             	mov    %rdx,%rax
    d627:	48 01 c0             	add    %rax,%rax
    d62a:	48 01 d0             	add    %rdx,%rax
    d62d:	48 c1 e0 03          	shl    $0x3,%rax
    d631:	48 8d 15 88 dc 00 00 	lea    0xdc88(%rip),%rdx        # 1b2c0 <global_profiler>
    d638:	48 01 d0             	add    %rdx,%rax
    d63b:	48 89 c2             	mov    %rax,%rdx
    d63e:	48 c1 ea 03          	shr    $0x3,%rdx
    d642:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    d649:	0f b6 12             	movzbl (%rdx),%edx
    d64c:	84 d2                	test   %dl,%dl
    d64e:	74 08                	je     d658 <finish_and_print_profile+0x150>
    d650:	48 89 c7             	mov    %rax,%rdi
    d653:	e8 68 6b ff ff       	call   41c0 <__asan_report_load8@plt>
    d658:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d65b:	48 89 d0             	mov    %rdx,%rax
    d65e:	48 01 c0             	add    %rax,%rax
    d661:	48 01 d0             	add    %rdx,%rax
    d664:	48 c1 e0 03          	shl    $0x3,%rax
    d668:	48 89 c2             	mov    %rax,%rdx
    d66b:	48 8d 05 4e dc 00 00 	lea    0xdc4e(%rip),%rax        # 1b2c0 <global_profiler>
    d672:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    d676:	48 85 c0             	test   %rax,%rax
    d679:	0f 84 8c 01 00 00    	je     d80b <finish_and_print_profile+0x303>
    d67f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d682:	48 89 d0             	mov    %rdx,%rax
    d685:	48 01 c0             	add    %rax,%rax
    d688:	48 01 d0             	add    %rdx,%rax
    d68b:	48 c1 e0 03          	shl    $0x3,%rax
    d68f:	48 89 c2             	mov    %rax,%rdx
    d692:	48 8d 05 27 dc 00 00 	lea    0xdc27(%rip),%rax        # 1b2c0 <global_profiler>
    d699:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    d69d:	48 85 c0             	test   %rax,%rax
    d6a0:	78 0b                	js     d6ad <finish_and_print_profile+0x1a5>
    d6a2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d6a6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    d6ab:	eb 19                	jmp    d6c6 <finish_and_print_profile+0x1be>
    d6ad:	48 89 c2             	mov    %rax,%rdx
    d6b0:	48 d1 ea             	shr    $1,%rdx
    d6b3:	83 e0 01             	and    $0x1,%eax
    d6b6:	48 09 c2             	or     %rax,%rdx
    d6b9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d6bd:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    d6c2:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    d6c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6ca:	48 85 c0             	test   %rax,%rax
    d6cd:	78 0b                	js     d6da <finish_and_print_profile+0x1d2>
    d6cf:	66 0f ef c9          	pxor   %xmm1,%xmm1
    d6d3:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    d6d8:	eb 19                	jmp    d6f3 <finish_and_print_profile+0x1eb>
    d6da:	48 89 c2             	mov    %rax,%rdx
    d6dd:	48 d1 ea             	shr    $1,%rdx
    d6e0:	83 e0 01             	and    $0x1,%eax
    d6e3:	48 09 c2             	or     %rax,%rdx
    d6e6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    d6ea:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    d6ef:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
    d6f3:	66 0f 28 d0          	movapd %xmm0,%xmm2
    d6f7:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    d6fb:	f2 0f 10 05 a5 8f 00 	movsd  0x8fa5(%rip),%xmm0        # 166a8 <__func__.0+0x448>
    d702:	00 
    d703:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
    d707:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    d70c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d70f:	48 89 d0             	mov    %rdx,%rax
    d712:	48 01 c0             	add    %rax,%rax
    d715:	48 01 d0             	add    %rdx,%rax
    d718:	48 c1 e0 03          	shl    $0x3,%rax
    d71c:	48 89 c2             	mov    %rax,%rdx
    d71f:	48 8d 05 9a db 00 00 	lea    0xdb9a(%rip),%rax        # 1b2c0 <global_profiler>
    d726:	48 8b 0c 02          	mov    (%rdx,%rax,1),%rcx
    d72a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d72d:	48 89 d0             	mov    %rdx,%rax
    d730:	48 01 c0             	add    %rax,%rax
    d733:	48 01 d0             	add    %rdx,%rax
    d736:	48 c1 e0 03          	shl    $0x3,%rax
    d73a:	48 8d 50 10          	lea    0x10(%rax),%rdx
    d73e:	48 8d 05 7b db 00 00 	lea    0xdb7b(%rip),%rax        # 1b2c0 <global_profiler>
    d745:	48 01 d0             	add    %rdx,%rax
    d748:	48 89 c2             	mov    %rax,%rdx
    d74b:	48 89 d0             	mov    %rdx,%rax
    d74e:	48 c1 e8 03          	shr    $0x3,%rax
    d752:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    d758:	0f b6 00             	movzbl (%rax),%eax
    d75b:	84 c0                	test   %al,%al
    d75d:	40 0f 95 c6          	setne  %sil
    d761:	3c 03                	cmp    $0x3,%al
    d763:	0f 9e c0             	setle  %al
    d766:	21 f0                	and    %esi,%eax
    d768:	84 c0                	test   %al,%al
    d76a:	74 08                	je     d774 <finish_and_print_profile+0x26c>
    d76c:	48 89 d7             	mov    %rdx,%rdi
    d76f:	e8 7c 69 ff ff       	call   40f0 <__asan_report_load4@plt>
    d774:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d777:	48 89 d0             	mov    %rdx,%rax
    d77a:	48 01 c0             	add    %rax,%rax
    d77d:	48 01 d0             	add    %rdx,%rax
    d780:	48 c1 e0 03          	shl    $0x3,%rax
    d784:	48 89 c2             	mov    %rax,%rdx
    d787:	48 8d 05 42 db 00 00 	lea    0xdb42(%rip),%rax        # 1b2d0 <global_profiler+0x10>
    d78e:	8b 34 02             	mov    (%rdx,%rax,1),%esi
    d791:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d794:	48 89 d0             	mov    %rdx,%rax
    d797:	48 01 c0             	add    %rax,%rax
    d79a:	48 01 d0             	add    %rdx,%rax
    d79d:	48 c1 e0 03          	shl    $0x3,%rax
    d7a1:	48 8d 15 18 db 00 00 	lea    0xdb18(%rip),%rdx        # 1b2c0 <global_profiler>
    d7a8:	48 01 d0             	add    %rdx,%rax
    d7ab:	48 83 c0 08          	add    $0x8,%rax
    d7af:	48 89 c2             	mov    %rax,%rdx
    d7b2:	48 c1 ea 03          	shr    $0x3,%rdx
    d7b6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    d7bd:	0f b6 12             	movzbl (%rdx),%edx
    d7c0:	84 d2                	test   %dl,%dl
    d7c2:	74 08                	je     d7cc <finish_and_print_profile+0x2c4>
    d7c4:	48 89 c7             	mov    %rax,%rdi
    d7c7:	e8 f4 69 ff ff       	call   41c0 <__asan_report_load8@plt>
    d7cc:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    d7cf:	48 89 d0             	mov    %rdx,%rax
    d7d2:	48 01 c0             	add    %rax,%rax
    d7d5:	48 01 d0             	add    %rdx,%rax
    d7d8:	48 c1 e0 03          	shl    $0x3,%rax
    d7dc:	48 89 c2             	mov    %rax,%rdx
    d7df:	48 8d 05 e2 da 00 00 	lea    0xdae2(%rip),%rax        # 1b2c8 <global_profiler+0x8>
    d7e6:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    d7ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7ee:	48 8d 3d cb 6b 00 00 	lea    0x6bcb(%rip),%rdi        # 143c0 <_IO_stdin_used+0x13c0>
    d7f5:	4c 8b 45 d8          	mov    -0x28(%rbp),%r8
    d7f9:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    d7fe:	89 f2                	mov    %esi,%edx
    d800:	48 89 c6             	mov    %rax,%rsi
    d803:	b8 01 00 00 00       	mov    $0x1,%eax
    d808:	41 ff d0             	call   *%r8
    d80b:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    d80f:	81 7d e4 ff 0f 00 00 	cmpl   $0xfff,-0x1c(%rbp)
    d816:	0f 86 05 fe ff ff    	jbe    d621 <finish_and_print_profile+0x119>
    d81c:	eb 01                	jmp    d81f <finish_and_print_profile+0x317>
    d81e:	90                   	nop
    d81f:	c9                   	leave
    d820:	c3                   	ret

000000000000d821 <square_float>:
    d821:	55                   	push   %rbp
    d822:	48 89 e5             	mov    %rsp,%rbp
    d825:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    d82a:	f2 0f 10 45 e8       	movsd  -0x18(%rbp),%xmm0
    d82f:	f2 0f 59 c0          	mulsd  %xmm0,%xmm0
    d833:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    d838:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    d83d:	5d                   	pop    %rbp
    d83e:	c3                   	ret

000000000000d83f <radians_from_degrees>:
    d83f:	55                   	push   %rbp
    d840:	48 89 e5             	mov    %rsp,%rbp
    d843:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    d848:	f2 0f 10 4d e8       	movsd  -0x18(%rbp),%xmm1
    d84d:	f2 0f 10 05 5b 8e 00 	movsd  0x8e5b(%rip),%xmm0        # 166b0 <__func__.0+0x450>
    d854:	00 
    d855:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    d859:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    d85e:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    d863:	5d                   	pop    %rbp
    d864:	c3                   	ret

000000000000d865 <reference_haversine>:
    d865:	55                   	push   %rbp
    d866:	48 89 e5             	mov    %rsp,%rbp
    d869:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    d870:	f2 0f 11 45 a8       	movsd  %xmm0,-0x58(%rbp)
    d875:	f2 0f 11 4d a0       	movsd  %xmm1,-0x60(%rbp)
    d87a:	f2 0f 11 55 98       	movsd  %xmm2,-0x68(%rbp)
    d87f:	f2 0f 11 5d 90       	movsd  %xmm3,-0x70(%rbp)
    d884:	f2 0f 11 65 88       	movsd  %xmm4,-0x78(%rbp)
    d889:	f2 0f 10 45 a0       	movsd  -0x60(%rbp),%xmm0
    d88e:	f2 0f 11 45 b8       	movsd  %xmm0,-0x48(%rbp)
    d893:	f2 0f 10 45 90       	movsd  -0x70(%rbp),%xmm0
    d898:	f2 0f 11 45 c0       	movsd  %xmm0,-0x40(%rbp)
    d89d:	f2 0f 10 45 a8       	movsd  -0x58(%rbp),%xmm0
    d8a2:	f2 0f 11 45 c8       	movsd  %xmm0,-0x38(%rbp)
    d8a7:	f2 0f 10 45 98       	movsd  -0x68(%rbp),%xmm0
    d8ac:	f2 0f 11 45 d0       	movsd  %xmm0,-0x30(%rbp)
    d8b1:	f2 0f 10 45 c0       	movsd  -0x40(%rbp),%xmm0
    d8b6:	f2 0f 5c 45 b8       	subsd  -0x48(%rbp),%xmm0
    d8bb:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d8c0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d8c5:	e8 75 ff ff ff       	call   d83f <radians_from_degrees>
    d8ca:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d8cf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d8d3:	f2 0f 10 45 d0       	movsd  -0x30(%rbp),%xmm0
    d8d8:	f2 0f 5c 45 c8       	subsd  -0x38(%rbp),%xmm0
    d8dd:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d8e2:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d8e7:	e8 53 ff ff ff       	call   d83f <radians_from_degrees>
    d8ec:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d8f1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d8f5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d8f9:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d8fe:	e8 3c ff ff ff       	call   d83f <radians_from_degrees>
    d903:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d908:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d90c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d910:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d915:	e8 25 ff ff ff       	call   d83f <radians_from_degrees>
    d91a:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d91f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d923:	f2 0f 10 45 d8       	movsd  -0x28(%rbp),%xmm0
    d928:	f2 0f 10 0d 88 8d 00 	movsd  0x8d88(%rip),%xmm1        # 166b8 <__func__.0+0x458>
    d92f:	00 
    d930:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    d934:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d939:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d93e:	e8 2d 67 ff ff       	call   4070 <sin@plt>
    d943:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d948:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d94d:	e8 cf fe ff ff       	call   d821 <square_float>
    d952:	f2 0f 11 45 80       	movsd  %xmm0,-0x80(%rbp)
    d957:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    d95b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d960:	e8 cb 68 ff ff       	call   4230 <cos@plt>
    d965:	f2 0f 11 85 78 ff ff 	movsd  %xmm0,-0x88(%rbp)
    d96c:	ff 
    d96d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    d971:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d976:	e8 b5 68 ff ff       	call   4230 <cos@plt>
    d97b:	66 0f 28 e8          	movapd %xmm0,%xmm5
    d97f:	f2 0f 59 ad 78 ff ff 	mulsd  -0x88(%rbp),%xmm5
    d986:	ff 
    d987:	f2 0f 11 ad 78 ff ff 	movsd  %xmm5,-0x88(%rbp)
    d98e:	ff 
    d98f:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    d994:	f2 0f 10 0d 1c 8d 00 	movsd  0x8d1c(%rip),%xmm1        # 166b8 <__func__.0+0x458>
    d99b:	00 
    d99c:	66 0f 28 f0          	movapd %xmm0,%xmm6
    d9a0:	f2 0f 5e f1          	divsd  %xmm1,%xmm6
    d9a4:	66 48 0f 7e f0       	movq   %xmm6,%rax
    d9a9:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d9ae:	e8 bd 66 ff ff       	call   4070 <sin@plt>
    d9b3:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d9b8:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d9bd:	e8 5f fe ff ff       	call   d821 <square_float>
    d9c2:	f2 0f 59 85 78 ff ff 	mulsd  -0x88(%rbp),%xmm0
    d9c9:	ff 
    d9ca:	f2 0f 58 45 80       	addsd  -0x80(%rbp),%xmm0
    d9cf:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
    d9d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9d8:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d9dd:	e8 3e 67 ff ff       	call   4120 <sqrt@plt>
    d9e2:	66 48 0f 7e c0       	movq   %xmm0,%rax
    d9e7:	66 48 0f 6e c0       	movq   %rax,%xmm0
    d9ec:	e8 0f 68 ff ff       	call   4200 <asin@plt>
    d9f1:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    d9f5:	f2 0f 11 45 f0       	movsd  %xmm0,-0x10(%rbp)
    d9fa:	f2 0f 10 45 88       	movsd  -0x78(%rbp),%xmm0
    d9ff:	f2 0f 59 45 f0       	mulsd  -0x10(%rbp),%xmm0
    da04:	f2 0f 11 45 f8       	movsd  %xmm0,-0x8(%rbp)
    da09:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
    da0e:	c9                   	leave
    da0f:	c3                   	ret

000000000000da10 <json_memory_initialize>:
    da10:	55                   	push   %rbp
    da11:	48 89 e5             	mov    %rsp,%rbp
    da14:	48 83 ec 10          	sub    $0x10,%rsp
    da18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da1c:	48 8b 05 dd 58 02 00 	mov    0x258dd(%rip),%rax        # 33300 <json_memory>
    da23:	48 85 c0             	test   %rax,%rax
    da26:	74 1b                	je     da43 <json_memory_initialize+0x33>
    da28:	48 8d 05 d1 69 00 00 	lea    0x69d1(%rip),%rax        # 14400 <_IO_stdin_used+0x1400>
    da2f:	48 89 c7             	mov    %rax,%rdi
    da32:	b8 00 00 00 00       	mov    $0x0,%eax
    da37:	e8 50 ef ff ff       	call   c98c <log_error>
    da3c:	b8 00 00 00 00       	mov    $0x0,%eax
    da41:	eb 76                	jmp    dab9 <json_memory_initialize+0xa9>
    da43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da47:	48 89 c7             	mov    %rax,%rdi
    da4a:	e8 31 67 ff ff       	call   4180 <malloc@plt>
    da4f:	48 89 05 aa 58 02 00 	mov    %rax,0x258aa(%rip)        # 33300 <json_memory>
    da56:	48 8b 05 a3 58 02 00 	mov    0x258a3(%rip),%rax        # 33300 <json_memory>
    da5d:	48 85 c0             	test   %rax,%rax
    da60:	75 29                	jne    da8b <json_memory_initialize+0x7b>
    da62:	48 8d 15 57 6a 00 00 	lea    0x6a57(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    da69:	48 8d 35 d0 5e 00 00 	lea    0x5ed0(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    da70:	48 8d 05 69 68 00 00 	lea    0x6869(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    da77:	b9 39 00 00 00       	mov    $0x39,%ecx
    da7c:	48 89 c7             	mov    %rax,%rdi
    da7f:	b8 00 00 00 00       	mov    $0x0,%eax
    da84:	e8 c7 65 ff ff       	call   4050 <printf@plt>
    da89:	0f 0b                	ud2
    da8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8f:	48 89 05 aa 58 02 00 	mov    %rax,0x258aa(%rip)        # 33340 <json_memory_size>
    da96:	48 8b 05 a3 58 02 00 	mov    0x258a3(%rip),%rax        # 33340 <json_memory_size>
    da9d:	48 8d 15 5c 6a 00 00 	lea    0x6a5c(%rip),%rdx        # 14500 <_IO_stdin_used+0x1500>
    daa4:	48 89 c6             	mov    %rax,%rsi
    daa7:	48 89 d7             	mov    %rdx,%rdi
    daaa:	b8 00 00 00 00       	mov    $0x0,%eax
    daaf:	e8 54 f7 ff ff       	call   d208 <log_trace>
    dab4:	b8 01 00 00 00       	mov    $0x1,%eax
    dab9:	c9                   	leave
    daba:	c3                   	ret

000000000000dabb <json_memory_allocate>:
    dabb:	55                   	push   %rbp
    dabc:	48 89 e5             	mov    %rsp,%rbp
    dabf:	48 83 ec 20          	sub    $0x20,%rsp
    dac3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dac7:	48 8b 05 32 58 02 00 	mov    0x25832(%rip),%rax        # 33300 <json_memory>
    dace:	48 85 c0             	test   %rax,%rax
    dad1:	75 29                	jne    dafc <json_memory_allocate+0x41>
    dad3:	48 8d 15 e6 69 00 00 	lea    0x69e6(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    dada:	48 8d 35 7f 6a 00 00 	lea    0x6a7f(%rip),%rsi        # 14560 <_IO_stdin_used+0x1560>
    dae1:	48 8d 05 f8 67 00 00 	lea    0x67f8(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    dae8:	b9 45 00 00 00       	mov    $0x45,%ecx
    daed:	48 89 c7             	mov    %rax,%rdi
    daf0:	b8 00 00 00 00       	mov    $0x0,%eax
    daf5:	e8 56 65 ff ff       	call   4050 <printf@plt>
    dafa:	0f 0b                	ud2
    dafc:	48 8b 15 7d 58 02 00 	mov    0x2587d(%rip),%rdx        # 33380 <json_memory_offset>
    db03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db07:	48 01 d0             	add    %rdx,%rax
    db0a:	48 8b 15 2f 58 02 00 	mov    0x2582f(%rip),%rdx        # 33340 <json_memory_size>
    db11:	48 39 c2             	cmp    %rax,%rdx
    db14:	0f 83 bb 00 00 00    	jae    dbd5 <json_memory_allocate+0x11a>
    db1a:	e9 98 00 00 00       	jmp    dbb7 <json_memory_allocate+0xfc>
    db1f:	48 8b 05 1a 58 02 00 	mov    0x2581a(%rip),%rax        # 33340 <json_memory_size>
    db26:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    db2a:	48 8d 05 6f 6a 00 00 	lea    0x6a6f(%rip),%rax        # 145a0 <_IO_stdin_used+0x15a0>
    db31:	48 89 d6             	mov    %rdx,%rsi
    db34:	48 89 c7             	mov    %rax,%rdi
    db37:	b8 00 00 00 00       	mov    $0x0,%eax
    db3c:	e8 c7 f6 ff ff       	call   d208 <log_trace>
    db41:	48 8b 05 b8 57 02 00 	mov    0x257b8(%rip),%rax        # 33300 <json_memory>
    db48:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    db4c:	48 8b 05 ed 57 02 00 	mov    0x257ed(%rip),%rax        # 33340 <json_memory_size>
    db53:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    db57:	48 8b 05 a2 57 02 00 	mov    0x257a2(%rip),%rax        # 33300 <json_memory>
    db5e:	48 89 d6             	mov    %rdx,%rsi
    db61:	48 89 c7             	mov    %rax,%rdi
    db64:	e8 a7 66 ff ff       	call   4210 <realloc@plt>
    db69:	48 89 05 90 57 02 00 	mov    %rax,0x25790(%rip)        # 33300 <json_memory>
    db70:	48 8b 05 89 57 02 00 	mov    0x25789(%rip),%rax        # 33300 <json_memory>
    db77:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    db7b:	74 29                	je     dba6 <json_memory_allocate+0xeb>
    db7d:	48 8d 15 3c 69 00 00 	lea    0x693c(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    db84:	48 8d 35 75 6a 00 00 	lea    0x6a75(%rip),%rsi        # 14600 <_IO_stdin_used+0x1600>
    db8b:	48 8d 05 4e 67 00 00 	lea    0x674e(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    db92:	b9 54 00 00 00       	mov    $0x54,%ecx
    db97:	48 89 c7             	mov    %rax,%rdi
    db9a:	b8 00 00 00 00       	mov    $0x0,%eax
    db9f:	e8 ac 64 ff ff       	call   4050 <printf@plt>
    dba4:	0f 0b                	ud2
    dba6:	48 8b 05 93 57 02 00 	mov    0x25793(%rip),%rax        # 33340 <json_memory_size>
    dbad:	48 01 c0             	add    %rax,%rax
    dbb0:	48 89 05 89 57 02 00 	mov    %rax,0x25789(%rip)        # 33340 <json_memory_size>
    dbb7:	48 8b 15 c2 57 02 00 	mov    0x257c2(%rip),%rdx        # 33380 <json_memory_offset>
    dbbe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbc2:	48 01 d0             	add    %rdx,%rax
    dbc5:	48 8b 15 74 57 02 00 	mov    0x25774(%rip),%rdx        # 33340 <json_memory_size>
    dbcc:	48 39 c2             	cmp    %rax,%rdx
    dbcf:	0f 82 4a ff ff ff    	jb     db1f <json_memory_allocate+0x64>
    dbd5:	48 8b 15 24 57 02 00 	mov    0x25724(%rip),%rdx        # 33300 <json_memory>
    dbdc:	48 8b 05 9d 57 02 00 	mov    0x2579d(%rip),%rax        # 33380 <json_memory_offset>
    dbe3:	48 01 d0             	add    %rdx,%rax
    dbe6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dbea:	48 8b 15 8f 57 02 00 	mov    0x2578f(%rip),%rdx        # 33380 <json_memory_offset>
    dbf1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbf5:	48 01 d0             	add    %rdx,%rax
    dbf8:	48 89 05 81 57 02 00 	mov    %rax,0x25781(%rip)        # 33380 <json_memory_offset>
    dbff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc07:	48 8d 0d 32 6a 00 00 	lea    0x6a32(%rip),%rcx        # 14640 <_IO_stdin_used+0x1640>
    dc0e:	48 89 c6             	mov    %rax,%rsi
    dc11:	48 89 cf             	mov    %rcx,%rdi
    dc14:	b8 00 00 00 00       	mov    $0x0,%eax
    dc19:	e8 ea f5 ff ff       	call   d208 <log_trace>
    dc1e:	48 8b 05 1b 57 02 00 	mov    0x2571b(%rip),%rax        # 33340 <json_memory_size>
    dc25:	48 8d 15 74 6a 00 00 	lea    0x6a74(%rip),%rdx        # 146a0 <_IO_stdin_used+0x16a0>
    dc2c:	48 89 c6             	mov    %rax,%rsi
    dc2f:	48 89 d7             	mov    %rdx,%rdi
    dc32:	b8 00 00 00 00       	mov    $0x0,%eax
    dc37:	e8 cc f5 ff ff       	call   d208 <log_trace>
    dc3c:	48 8b 05 3d 57 02 00 	mov    0x2573d(%rip),%rax        # 33380 <json_memory_offset>
    dc43:	48 8d 15 b6 6a 00 00 	lea    0x6ab6(%rip),%rdx        # 14700 <_IO_stdin_used+0x1700>
    dc4a:	48 89 c6             	mov    %rax,%rsi
    dc4d:	48 89 d7             	mov    %rdx,%rdi
    dc50:	b8 00 00 00 00       	mov    $0x0,%eax
    dc55:	e8 ae f5 ff ff       	call   d208 <log_trace>
    dc5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5e:	c9                   	leave
    dc5f:	c3                   	ret

000000000000dc60 <json_memory_clear>:
    dc60:	55                   	push   %rbp
    dc61:	48 89 e5             	mov    %rsp,%rbp
    dc64:	48 8b 05 95 56 02 00 	mov    0x25695(%rip),%rax        # 33300 <json_memory>
    dc6b:	48 89 c7             	mov    %rax,%rdi
    dc6e:	e8 0d 64 ff ff       	call   4080 <free@plt>
    dc73:	48 c7 05 82 56 02 00 	movq   $0x0,0x25682(%rip)        # 33300 <json_memory>
    dc7a:	00 00 00 00 
    dc7e:	48 c7 05 b7 56 02 00 	movq   $0x0,0x256b7(%rip)        # 33340 <json_memory_size>
    dc85:	00 00 00 00 
    dc89:	48 c7 05 ec 56 02 00 	movq   $0x0,0x256ec(%rip)        # 33380 <json_memory_offset>
    dc90:	00 00 00 00 
    dc94:	48 8d 05 c5 6a 00 00 	lea    0x6ac5(%rip),%rax        # 14760 <_IO_stdin_used+0x1760>
    dc9b:	48 89 c7             	mov    %rax,%rdi
    dc9e:	b8 00 00 00 00       	mov    $0x0,%eax
    dca3:	e8 60 f5 ff ff       	call   d208 <log_trace>
    dca8:	90                   	nop
    dca9:	5d                   	pop    %rbp
    dcaa:	c3                   	ret

000000000000dcab <json_parse>:
    dcab:	55                   	push   %rbp
    dcac:	48 89 e5             	mov    %rsp,%rbp
    dcaf:	41 56                	push   %r14
    dcb1:	41 55                	push   %r13
    dcb3:	41 54                	push   %r12
    dcb5:	53                   	push   %rbx
    dcb6:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    dcbd:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    dcc4:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
    dccb:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
    dcd2:	89 8d 14 ff ff ff    	mov    %ecx,-0xec(%rbp)
    dcd8:	4c 8d a5 60 ff ff ff 	lea    -0xa0(%rbp),%r12
    dcdf:	4d 89 e6             	mov    %r12,%r14
    dce2:	83 3d 77 d5 00 00 00 	cmpl   $0x0,0xd577(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    dce9:	74 12                	je     dcfd <json_parse+0x52>
    dceb:	bf 60 00 00 00       	mov    $0x60,%edi
    dcf0:	e8 eb 63 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    dcf5:	48 85 c0             	test   %rax,%rax
    dcf8:	74 03                	je     dcfd <json_parse+0x52>
    dcfa:	49 89 c4             	mov    %rax,%r12
    dcfd:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
    dd04:	00 
    dd05:	48 89 c3             	mov    %rax,%rbx
    dd08:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    dd0f:	41 
    dd10:	48 8d 05 a9 6a 00 00 	lea    0x6aa9(%rip),%rax        # 147c0 <_IO_stdin_used+0x17c0>
    dd17:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    dd1c:	48 8d 05 88 ff ff ff 	lea    -0x78(%rip),%rax        # dcab <json_parse>
    dd23:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    dd28:	4d 89 e5             	mov    %r12,%r13
    dd2b:	49 c1 ed 03          	shr    $0x3,%r13
    dd2f:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    dd36:	f1 f1 f1 f1 
    dd3a:	41 c7 85 04 80 ff 7f 	movl   $0xf2f2f200,0x7fff8004(%r13)
    dd41:	00 f2 f2 f2 
    dd45:	41 c7 85 08 80 ff 7f 	movl   $0xf3f30000,0x7fff8008(%r13)
    dd4c:	00 00 f3 f3 
    dd50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    dd57:	00 00 
    dd59:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    dd5d:	31 c0                	xor    %eax,%eax
    dd5f:	b8 00 00 00 00       	mov    $0x0,%eax
    dd64:	e8 3f f6 ff ff       	call   d3a8 <read_cpu_timer>
    dd69:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    dd6d:	c7 43 c8 00 00 00 00 	movl   $0x0,-0x38(%rbx)
    dd74:	b8 00 00 00 00       	mov    $0x0,%eax
    dd79:	e8 2a f6 ff ff       	call   d3a8 <read_cpu_timer>
    dd7e:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    dd84:	48 8d 05 75 6a 00 00 	lea    0x6a75(%rip),%rax        # 14800 <_IO_stdin_used+0x1800>
    dd8b:	48 89 c7             	mov    %rax,%rdi
    dd8e:	b8 00 00 00 00       	mov    $0x0,%eax
    dd93:	e8 51 f2 ff ff       	call   cfe9 <log_debug>
    dd98:	8b 05 fa d4 00 00    	mov    0xd4fa(%rip),%eax        # 1b298 <jstring_temporary_memory_info+0x18>
    dd9e:	85 c0                	test   %eax,%eax
    dda0:	75 29                	jne    ddcb <json_parse+0x120>
    dda2:	48 8d 15 17 67 00 00 	lea    0x6717(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    dda9:	48 8d 35 90 6a 00 00 	lea    0x6a90(%rip),%rsi        # 14840 <_IO_stdin_used+0x1840>
    ddb0:	48 8d 05 29 65 00 00 	lea    0x6529(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ddb7:	b9 86 00 00 00       	mov    $0x86,%ecx
    ddbc:	48 89 c7             	mov    %rax,%rdi
    ddbf:	b8 00 00 00 00       	mov    $0x0,%eax
    ddc4:	e8 87 62 ff ff       	call   4050 <printf@plt>
    ddc9:	0f 0b                	ud2
    ddcb:	48 8b 05 be d4 00 00 	mov    0xd4be(%rip),%rax        # 1b290 <jstring_temporary_memory_info+0x10>
    ddd2:	48 85 c0             	test   %rax,%rax
    ddd5:	75 29                	jne    de00 <json_parse+0x155>
    ddd7:	48 8d 15 e2 66 00 00 	lea    0x66e2(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ddde:	48 8d 35 bb 6a 00 00 	lea    0x6abb(%rip),%rsi        # 148a0 <_IO_stdin_used+0x18a0>
    dde5:	48 8d 05 f4 64 00 00 	lea    0x64f4(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ddec:	b9 87 00 00 00       	mov    $0x87,%ecx
    ddf1:	48 89 c7             	mov    %rax,%rdi
    ddf4:	b8 00 00 00 00       	mov    $0x0,%eax
    ddf9:	e8 52 62 ff ff       	call   4050 <printf@plt>
    ddfe:	0f 0b                	ud2
    de00:	48 8b 05 81 d4 00 00 	mov    0xd481(%rip),%rax        # 1b288 <jstring_temporary_memory_info+0x8>
    de07:	48 85 c0             	test   %rax,%rax
    de0a:	74 29                	je     de35 <json_parse+0x18a>
    de0c:	48 8d 15 ad 66 00 00 	lea    0x66ad(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    de13:	48 8d 35 e6 6a 00 00 	lea    0x6ae6(%rip),%rsi        # 14900 <_IO_stdin_used+0x1900>
    de1a:	48 8d 05 bf 64 00 00 	lea    0x64bf(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    de21:	b9 88 00 00 00       	mov    $0x88,%ecx
    de26:	48 89 c7             	mov    %rax,%rdi
    de29:	b8 00 00 00 00       	mov    $0x0,%eax
    de2e:	e8 1d 62 ff ff       	call   4050 <printf@plt>
    de33:	0f 0b                	ud2
    de35:	48 8b 15 44 d4 00 00 	mov    0xd444(%rip),%rdx        # 1b280 <jstring_temporary_memory_info>
    de3c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    de43:	48 83 c0 01          	add    $0x1,%rax
    de47:	48 01 c0             	add    %rax,%rax
    de4a:	48 39 c2             	cmp    %rax,%rdx
    de4d:	73 29                	jae    de78 <json_parse+0x1cd>
    de4f:	48 8d 15 6a 66 00 00 	lea    0x666a(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    de56:	48 8d 35 03 6b 00 00 	lea    0x6b03(%rip),%rsi        # 14960 <_IO_stdin_used+0x1960>
    de5d:	48 8d 05 7c 64 00 00 	lea    0x647c(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    de64:	b9 89 00 00 00       	mov    $0x89,%ecx
    de69:	48 89 c7             	mov    %rax,%rdi
    de6c:	b8 00 00 00 00       	mov    $0x0,%eax
    de71:	e8 da 61 ff ff       	call   4050 <printf@plt>
    de76:	0f 0b                	ud2
    de78:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    de7f:	48 c1 e0 02          	shl    $0x2,%rax
    de83:	48 89 c7             	mov    %rax,%rdi
    de86:	e8 85 fb ff ff       	call   da10 <json_memory_initialize>
    de8b:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    de8f:	48 89 c2             	mov    %rax,%rdx
    de92:	48 c1 ea 03          	shr    $0x3,%rdx
    de96:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    de9d:	0f b6 12             	movzbl (%rdx),%edx
    dea0:	84 d2                	test   %dl,%dl
    dea2:	74 08                	je     deac <json_parse+0x201>
    dea4:	48 89 c7             	mov    %rax,%rdi
    dea7:	e8 94 62 ff ff       	call   4140 <__asan_report_store8@plt>
    deac:	48 c7 43 a0 00 00 00 	movq   $0x0,-0x60(%rbx)
    deb3:	00 
    deb4:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%rbp)
    debb:	00 00 00 
    debe:	48 8d 53 a0          	lea    -0x60(%rbx),%rdx
    dec2:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    dec9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    ded0:	48 89 ce             	mov    %rcx,%rsi
    ded3:	48 89 c7             	mov    %rax,%rdi
    ded6:	e8 53 07 00 00       	call   e62e <json_parse_whitespace>
    dedb:	85 c0                	test   %eax,%eax
    dedd:	0f 85 b6 04 00 00    	jne    e399 <json_parse+0x6ee>
    dee3:	48 8d 05 d6 6a 00 00 	lea    0x6ad6(%rip),%rax        # 149c0 <_IO_stdin_used+0x19c0>
    deea:	48 89 c7             	mov    %rax,%rdi
    deed:	b8 00 00 00 00       	mov    $0x0,%eax
    def2:	e8 95 ea ff ff       	call   c98c <log_error>
    def7:	b8 00 00 00 00       	mov    $0x0,%eax
    defc:	e9 bc 06 00 00       	jmp    e5bd <json_parse+0x912>
    df01:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    df05:	48 89 c2             	mov    %rax,%rdx
    df08:	48 c1 ea 03          	shr    $0x3,%rdx
    df0c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    df13:	0f b6 12             	movzbl (%rdx),%edx
    df16:	84 d2                	test   %dl,%dl
    df18:	74 08                	je     df22 <json_parse+0x277>
    df1a:	48 89 c7             	mov    %rax,%rdi
    df1d:	e8 9e 62 ff ff       	call   41c0 <__asan_report_load8@plt>
    df22:	48 8b 53 a0          	mov    -0x60(%rbx),%rdx
    df26:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    df2d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    df31:	48 89 c8             	mov    %rcx,%rax
    df34:	48 89 c2             	mov    %rax,%rdx
    df37:	48 c1 ea 03          	shr    $0x3,%rdx
    df3b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    df42:	0f b6 12             	movzbl (%rdx),%edx
    df45:	84 d2                	test   %dl,%dl
    df47:	40 0f 95 c6          	setne  %sil
    df4b:	48 89 c7             	mov    %rax,%rdi
    df4e:	83 e7 07             	and    $0x7,%edi
    df51:	40 38 d7             	cmp    %dl,%dil
    df54:	0f 9d c2             	setge  %dl
    df57:	21 f2                	and    %esi,%edx
    df59:	84 d2                	test   %dl,%dl
    df5b:	74 08                	je     df65 <json_parse+0x2ba>
    df5d:	48 89 c7             	mov    %rax,%rdi
    df60:	e8 2b 62 ff ff       	call   4190 <__asan_report_load1@plt>
    df65:	0f b6 01             	movzbl (%rcx),%eax
    df68:	3c 7b                	cmp    $0x7b,%al
    df6a:	0f 85 69 01 00 00    	jne    e0d9 <json_parse+0x42e>
    df70:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    df76:	83 c0 01             	add    $0x1,%eax
    df79:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%rbp)
    df7f:	73 40                	jae    dfc1 <json_parse+0x316>
    df81:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
    df87:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    df8d:	48 8d 0d 6c 6a 00 00 	lea    0x6a6c(%rip),%rcx        # 14a00 <_IO_stdin_used+0x1a00>
    df94:	89 c6                	mov    %eax,%esi
    df96:	48 89 cf             	mov    %rcx,%rdi
    df99:	b8 00 00 00 00       	mov    $0x0,%eax
    df9e:	e8 e9 e9 ff ff       	call   c98c <log_error>
    dfa3:	48 8d 05 16 6a 00 00 	lea    0x6a16(%rip),%rax        # 149c0 <_IO_stdin_used+0x19c0>
    dfaa:	48 89 c7             	mov    %rax,%rdi
    dfad:	b8 00 00 00 00       	mov    $0x0,%eax
    dfb2:	e8 d5 e9 ff ff       	call   c98c <log_error>
    dfb7:	b8 00 00 00 00       	mov    $0x0,%eax
    dfbc:	e9 fc 05 00 00       	jmp    e5bd <json_parse+0x912>
    dfc1:	48 8d 05 b8 6a 00 00 	lea    0x6ab8(%rip),%rax        # 14a80 <_IO_stdin_used+0x1a80>
    dfc8:	48 89 c7             	mov    %rax,%rdi
    dfcb:	b8 00 00 00 00       	mov    $0x0,%eax
    dfd0:	e8 33 f2 ff ff       	call   d208 <log_trace>
    dfd5:	48 8d 53 a0          	lea    -0x60(%rbx),%rdx
    dfd9:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    dfe0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    dfe7:	48 89 ce             	mov    %rcx,%rsi
    dfea:	48 89 c7             	mov    %rax,%rdi
    dfed:	e8 2e 08 00 00       	call   e820 <json_parse_object>
    dff2:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    dff9:	48 83 bd 58 ff ff ff 	cmpq   $0x0,-0xa8(%rbp)
    e000:	00 
    e001:	75 29                	jne    e02c <json_parse+0x381>
    e003:	48 8d 15 b6 64 00 00 	lea    0x64b6(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    e00a:	48 8d 35 cf 6a 00 00 	lea    0x6acf(%rip),%rsi        # 14ae0 <_IO_stdin_used+0x1ae0>
    e011:	48 8d 05 c8 62 00 00 	lea    0x62c8(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    e018:	b9 ae 00 00 00       	mov    $0xae,%ecx
    e01d:	48 89 c7             	mov    %rax,%rdi
    e020:	b8 00 00 00 00       	mov    $0x0,%eax
    e025:	e8 26 60 ff ff       	call   4050 <printf@plt>
    e02a:	0f 0b                	ud2
    e02c:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    e032:	48 89 d0             	mov    %rdx,%rax
    e035:	48 01 c0             	add    %rax,%rax
    e038:	48 01 d0             	add    %rdx,%rax
    e03b:	48 c1 e0 04          	shl    $0x4,%rax
    e03f:	48 89 c2             	mov    %rax,%rdx
    e042:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e049:	48 01 c2             	add    %rax,%rdx
    e04c:	48 89 d0             	mov    %rdx,%rax
    e04f:	48 89 c1             	mov    %rax,%rcx
    e052:	48 89 c8             	mov    %rcx,%rax
    e055:	48 c1 e8 03          	shr    $0x3,%rax
    e059:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    e05f:	0f b6 00             	movzbl (%rax),%eax
    e062:	84 c0                	test   %al,%al
    e064:	40 0f 95 c6          	setne  %sil
    e068:	3c 03                	cmp    $0x3,%al
    e06a:	0f 9e c0             	setle  %al
    e06d:	21 f0                	and    %esi,%eax
    e06f:	84 c0                	test   %al,%al
    e071:	74 08                	je     e07b <json_parse+0x3d0>
    e073:	48 89 cf             	mov    %rcx,%rdi
    e076:	e8 b5 5f ff ff       	call   4030 <__asan_report_store4@plt>
    e07b:	c7 02 00 00 00 00    	movl   $0x0,(%rdx)
    e081:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    e087:	48 89 d0             	mov    %rdx,%rax
    e08a:	48 01 c0             	add    %rax,%rax
    e08d:	48 01 d0             	add    %rdx,%rax
    e090:	48 c1 e0 04          	shl    $0x4,%rax
    e094:	48 89 c2             	mov    %rax,%rdx
    e097:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e09e:	48 01 d0             	add    %rdx,%rax
    e0a1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e0a5:	48 89 d1             	mov    %rdx,%rcx
    e0a8:	48 c1 e9 03          	shr    $0x3,%rcx
    e0ac:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    e0b3:	0f b6 09             	movzbl (%rcx),%ecx
    e0b6:	84 c9                	test   %cl,%cl
    e0b8:	74 08                	je     e0c2 <json_parse+0x417>
    e0ba:	48 89 d7             	mov    %rdx,%rdi
    e0bd:	e8 7e 60 ff ff       	call   4140 <__asan_report_store8@plt>
    e0c2:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    e0c9:	48 89 50 08          	mov    %rdx,0x8(%rax)
    e0cd:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
    e0d4:	e9 76 02 00 00       	jmp    e34f <json_parse+0x6a4>
    e0d9:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    e0dd:	48 89 c2             	mov    %rax,%rdx
    e0e0:	48 c1 ea 03          	shr    $0x3,%rdx
    e0e4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e0eb:	0f b6 12             	movzbl (%rdx),%edx
    e0ee:	84 d2                	test   %dl,%dl
    e0f0:	74 08                	je     e0fa <json_parse+0x44f>
    e0f2:	48 89 c7             	mov    %rax,%rdi
    e0f5:	e8 c6 60 ff ff       	call   41c0 <__asan_report_load8@plt>
    e0fa:	48 8b 53 a0          	mov    -0x60(%rbx),%rdx
    e0fe:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e105:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e109:	48 89 c8             	mov    %rcx,%rax
    e10c:	48 89 c2             	mov    %rax,%rdx
    e10f:	48 c1 ea 03          	shr    $0x3,%rdx
    e113:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e11a:	0f b6 12             	movzbl (%rdx),%edx
    e11d:	84 d2                	test   %dl,%dl
    e11f:	40 0f 95 c6          	setne  %sil
    e123:	48 89 c7             	mov    %rax,%rdi
    e126:	83 e7 07             	and    $0x7,%edi
    e129:	40 38 d7             	cmp    %dl,%dil
    e12c:	0f 9d c2             	setge  %dl
    e12f:	21 f2                	and    %esi,%edx
    e131:	84 d2                	test   %dl,%dl
    e133:	74 08                	je     e13d <json_parse+0x492>
    e135:	48 89 c7             	mov    %rax,%rdi
    e138:	e8 53 60 ff ff       	call   4190 <__asan_report_load1@plt>
    e13d:	0f b6 01             	movzbl (%rcx),%eax
    e140:	3c 5b                	cmp    $0x5b,%al
    e142:	0f 85 69 01 00 00    	jne    e2b1 <json_parse+0x606>
    e148:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    e14e:	83 c0 01             	add    $0x1,%eax
    e151:	39 85 14 ff ff ff    	cmp    %eax,-0xec(%rbp)
    e157:	73 40                	jae    e199 <json_parse+0x4ee>
    e159:	8b 95 14 ff ff ff    	mov    -0xec(%rbp),%edx
    e15f:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    e165:	48 8d 0d 94 68 00 00 	lea    0x6894(%rip),%rcx        # 14a00 <_IO_stdin_used+0x1a00>
    e16c:	89 c6                	mov    %eax,%esi
    e16e:	48 89 cf             	mov    %rcx,%rdi
    e171:	b8 00 00 00 00       	mov    $0x0,%eax
    e176:	e8 11 e8 ff ff       	call   c98c <log_error>
    e17b:	48 8d 05 3e 68 00 00 	lea    0x683e(%rip),%rax        # 149c0 <_IO_stdin_used+0x19c0>
    e182:	48 89 c7             	mov    %rax,%rdi
    e185:	b8 00 00 00 00       	mov    $0x0,%eax
    e18a:	e8 fd e7 ff ff       	call   c98c <log_error>
    e18f:	b8 00 00 00 00       	mov    $0x0,%eax
    e194:	e9 24 04 00 00       	jmp    e5bd <json_parse+0x912>
    e199:	48 8d 05 80 69 00 00 	lea    0x6980(%rip),%rax        # 14b20 <_IO_stdin_used+0x1b20>
    e1a0:	48 89 c7             	mov    %rax,%rdi
    e1a3:	b8 00 00 00 00       	mov    $0x0,%eax
    e1a8:	e8 5b f0 ff ff       	call   d208 <log_trace>
    e1ad:	48 8d 53 a0          	lea    -0x60(%rbx),%rdx
    e1b1:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    e1b8:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e1bf:	48 89 ce             	mov    %rcx,%rsi
    e1c2:	48 89 c7             	mov    %rax,%rdi
    e1c5:	e8 e9 0f 00 00       	call   f1b3 <json_parse_array>
    e1ca:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    e1d1:	48 83 bd 50 ff ff ff 	cmpq   $0x0,-0xb0(%rbp)
    e1d8:	00 
    e1d9:	75 29                	jne    e204 <json_parse+0x559>
    e1db:	48 8d 15 de 62 00 00 	lea    0x62de(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    e1e2:	48 8d 35 f7 68 00 00 	lea    0x68f7(%rip),%rsi        # 14ae0 <_IO_stdin_used+0x1ae0>
    e1e9:	48 8d 05 f0 60 00 00 	lea    0x60f0(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    e1f0:	b9 c1 00 00 00       	mov    $0xc1,%ecx
    e1f5:	48 89 c7             	mov    %rax,%rdi
    e1f8:	b8 00 00 00 00       	mov    $0x0,%eax
    e1fd:	e8 4e 5e ff ff       	call   4050 <printf@plt>
    e202:	0f 0b                	ud2
    e204:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    e20a:	48 89 d0             	mov    %rdx,%rax
    e20d:	48 01 c0             	add    %rax,%rax
    e210:	48 01 d0             	add    %rdx,%rax
    e213:	48 c1 e0 04          	shl    $0x4,%rax
    e217:	48 89 c2             	mov    %rax,%rdx
    e21a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e221:	48 01 c2             	add    %rax,%rdx
    e224:	48 89 d0             	mov    %rdx,%rax
    e227:	48 89 c1             	mov    %rax,%rcx
    e22a:	48 89 c8             	mov    %rcx,%rax
    e22d:	48 c1 e8 03          	shr    $0x3,%rax
    e231:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    e237:	0f b6 00             	movzbl (%rax),%eax
    e23a:	84 c0                	test   %al,%al
    e23c:	40 0f 95 c6          	setne  %sil
    e240:	3c 03                	cmp    $0x3,%al
    e242:	0f 9e c0             	setle  %al
    e245:	21 f0                	and    %esi,%eax
    e247:	84 c0                	test   %al,%al
    e249:	74 08                	je     e253 <json_parse+0x5a8>
    e24b:	48 89 cf             	mov    %rcx,%rdi
    e24e:	e8 dd 5d ff ff       	call   4030 <__asan_report_store4@plt>
    e253:	c7 02 01 00 00 00    	movl   $0x1,(%rdx)
    e259:	8b 95 38 ff ff ff    	mov    -0xc8(%rbp),%edx
    e25f:	48 89 d0             	mov    %rdx,%rax
    e262:	48 01 c0             	add    %rax,%rax
    e265:	48 01 d0             	add    %rdx,%rax
    e268:	48 c1 e0 04          	shl    $0x4,%rax
    e26c:	48 89 c2             	mov    %rax,%rdx
    e26f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e276:	48 01 d0             	add    %rdx,%rax
    e279:	48 8d 50 10          	lea    0x10(%rax),%rdx
    e27d:	48 89 d1             	mov    %rdx,%rcx
    e280:	48 c1 e9 03          	shr    $0x3,%rcx
    e284:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    e28b:	0f b6 09             	movzbl (%rcx),%ecx
    e28e:	84 c9                	test   %cl,%cl
    e290:	74 08                	je     e29a <json_parse+0x5ef>
    e292:	48 89 d7             	mov    %rdx,%rdi
    e295:	e8 a6 5e ff ff       	call   4140 <__asan_report_store8@plt>
    e29a:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    e2a1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e2a5:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
    e2ac:	e9 9e 00 00 00       	jmp    e34f <json_parse+0x6a4>
    e2b1:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    e2b5:	48 89 c2             	mov    %rax,%rdx
    e2b8:	48 c1 ea 03          	shr    $0x3,%rdx
    e2bc:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e2c3:	0f b6 12             	movzbl (%rdx),%edx
    e2c6:	84 d2                	test   %dl,%dl
    e2c8:	74 08                	je     e2d2 <json_parse+0x627>
    e2ca:	48 89 c7             	mov    %rax,%rdi
    e2cd:	e8 ee 5e ff ff       	call   41c0 <__asan_report_load8@plt>
    e2d2:	48 8b 53 a0          	mov    -0x60(%rbx),%rdx
    e2d6:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e2dd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e2e1:	48 89 c8             	mov    %rcx,%rax
    e2e4:	48 89 c2             	mov    %rax,%rdx
    e2e7:	48 c1 ea 03          	shr    $0x3,%rdx
    e2eb:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e2f2:	0f b6 12             	movzbl (%rdx),%edx
    e2f5:	84 d2                	test   %dl,%dl
    e2f7:	40 0f 95 c6          	setne  %sil
    e2fb:	48 89 c7             	mov    %rax,%rdi
    e2fe:	83 e7 07             	and    $0x7,%edi
    e301:	40 38 d7             	cmp    %dl,%dil
    e304:	0f 9d c2             	setge  %dl
    e307:	21 f2                	and    %esi,%edx
    e309:	84 d2                	test   %dl,%dl
    e30b:	74 08                	je     e315 <json_parse+0x66a>
    e30d:	48 89 c7             	mov    %rax,%rdi
    e310:	e8 7b 5e ff ff       	call   4190 <__asan_report_load1@plt>
    e315:	0f b6 01             	movzbl (%rcx),%eax
    e318:	0f be c0             	movsbl %al,%eax
    e31b:	48 8d 15 3e 68 00 00 	lea    0x683e(%rip),%rdx        # 14b60 <_IO_stdin_used+0x1b60>
    e322:	89 c6                	mov    %eax,%esi
    e324:	48 89 d7             	mov    %rdx,%rdi
    e327:	b8 00 00 00 00       	mov    $0x0,%eax
    e32c:	e8 5b e6 ff ff       	call   c98c <log_error>
    e331:	48 8d 05 88 66 00 00 	lea    0x6688(%rip),%rax        # 149c0 <_IO_stdin_used+0x19c0>
    e338:	48 89 c7             	mov    %rax,%rdi
    e33b:	b8 00 00 00 00       	mov    $0x0,%eax
    e340:	e8 47 e6 ff ff       	call   c98c <log_error>
    e345:	b8 00 00 00 00       	mov    $0x0,%eax
    e34a:	e9 6e 02 00 00       	jmp    e5bd <json_parse+0x912>
    e34f:	48 8d 53 a0          	lea    -0x60(%rbx),%rdx
    e353:	48 8b 8d 20 ff ff ff 	mov    -0xe0(%rbp),%rcx
    e35a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    e361:	48 89 ce             	mov    %rcx,%rsi
    e364:	48 89 c7             	mov    %rax,%rdi
    e367:	e8 c2 02 00 00       	call   e62e <json_parse_whitespace>
    e36c:	85 c0                	test   %eax,%eax
    e36e:	75 29                	jne    e399 <json_parse+0x6ee>
    e370:	48 8d 15 49 61 00 00 	lea    0x6149(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    e377:	48 8d 35 c2 55 00 00 	lea    0x55c2(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    e37e:	48 8d 05 5b 5f 00 00 	lea    0x5f5b(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    e385:	b9 d0 00 00 00       	mov    $0xd0,%ecx
    e38a:	48 89 c7             	mov    %rax,%rdi
    e38d:	b8 00 00 00 00       	mov    $0x0,%eax
    e392:	e8 b9 5c ff ff       	call   4050 <printf@plt>
    e397:	0f 0b                	ud2
    e399:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
    e39d:	48 89 c2             	mov    %rax,%rdx
    e3a0:	48 c1 ea 03          	shr    $0x3,%rdx
    e3a4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e3ab:	0f b6 12             	movzbl (%rdx),%edx
    e3ae:	84 d2                	test   %dl,%dl
    e3b0:	74 08                	je     e3ba <json_parse+0x70f>
    e3b2:	48 89 c7             	mov    %rax,%rdi
    e3b5:	e8 06 5e ff ff       	call   41c0 <__asan_report_load8@plt>
    e3ba:	48 8b 43 a0          	mov    -0x60(%rbx),%rax
    e3be:	48 3b 85 20 ff ff ff 	cmp    -0xe0(%rbp),%rax
    e3c5:	0f 82 36 fb ff ff    	jb     df01 <json_parse+0x256>
    e3cb:	48 8d 05 0e 68 00 00 	lea    0x680e(%rip),%rax        # 14be0 <_IO_stdin_used+0x1be0>
    e3d2:	48 89 c7             	mov    %rax,%rdi
    e3d5:	b8 00 00 00 00       	mov    $0x0,%eax
    e3da:	e8 eb e9 ff ff       	call   cdca <log_info>
    e3df:	b8 00 00 00 00       	mov    $0x0,%eax
    e3e4:	e8 bf ef ff ff       	call   d3a8 <read_cpu_timer>
    e3e9:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
    e3ef:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    e3f5:	2b 85 3c ff ff ff    	sub    -0xc4(%rbp),%eax
    e3fb:	48 8d 15 1e 68 00 00 	lea    0x681e(%rip),%rdx        # 14c20 <_IO_stdin_used+0x1c20>
    e402:	89 c6                	mov    %eax,%esi
    e404:	48 89 d7             	mov    %rdx,%rdi
    e407:	b8 00 00 00 00       	mov    $0x0,%eax
    e40c:	e8 b9 e9 ff ff       	call   cdca <log_info>
    e411:	b8 00 00 00 00       	mov    $0x0,%eax
    e416:	e8 8d ef ff ff       	call   d3a8 <read_cpu_timer>
    e41b:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%rbp)
    e421:	8b 43 c8             	mov    -0x38(%rbx),%eax
    e424:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    e42a:	48 8b 43 c0          	mov    -0x40(%rbx),%rax
    e42e:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    e434:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e43a:	48 89 d0             	mov    %rdx,%rax
    e43d:	48 01 c0             	add    %rax,%rax
    e440:	48 01 d0             	add    %rdx,%rax
    e443:	48 c1 e0 03          	shl    $0x3,%rax
    e447:	48 8d 50 10          	lea    0x10(%rax),%rdx
    e44b:	48 8d 05 6e ce 00 00 	lea    0xce6e(%rip),%rax        # 1b2c0 <global_profiler>
    e452:	48 01 d0             	add    %rdx,%rax
    e455:	48 89 c2             	mov    %rax,%rdx
    e458:	48 89 d0             	mov    %rdx,%rax
    e45b:	48 c1 e8 03          	shr    $0x3,%rax
    e45f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    e465:	0f b6 00             	movzbl (%rax),%eax
    e468:	84 c0                	test   %al,%al
    e46a:	0f 95 c1             	setne  %cl
    e46d:	3c 03                	cmp    $0x3,%al
    e46f:	0f 9e c0             	setle  %al
    e472:	21 c8                	and    %ecx,%eax
    e474:	84 c0                	test   %al,%al
    e476:	74 08                	je     e480 <json_parse+0x7d5>
    e478:	48 89 d7             	mov    %rdx,%rdi
    e47b:	e8 70 5c ff ff       	call   40f0 <__asan_report_load4@plt>
    e480:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e486:	48 89 d0             	mov    %rdx,%rax
    e489:	48 01 c0             	add    %rax,%rax
    e48c:	48 01 d0             	add    %rdx,%rax
    e48f:	48 c1 e0 03          	shl    $0x3,%rax
    e493:	48 89 c2             	mov    %rax,%rdx
    e496:	48 8d 05 33 ce 00 00 	lea    0xce33(%rip),%rax        # 1b2d0 <global_profiler+0x10>
    e49d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    e4a0:	8d 48 01             	lea    0x1(%rax),%ecx
    e4a3:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e4a9:	48 89 d0             	mov    %rdx,%rax
    e4ac:	48 01 c0             	add    %rax,%rax
    e4af:	48 01 d0             	add    %rdx,%rax
    e4b2:	48 c1 e0 03          	shl    $0x3,%rax
    e4b6:	48 89 c2             	mov    %rax,%rdx
    e4b9:	48 8d 05 10 ce 00 00 	lea    0xce10(%rip),%rax        # 1b2d0 <global_profiler+0x10>
    e4c0:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
    e4c3:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e4c9:	48 89 d0             	mov    %rdx,%rax
    e4cc:	48 01 c0             	add    %rax,%rax
    e4cf:	48 01 d0             	add    %rdx,%rax
    e4d2:	48 c1 e0 03          	shl    $0x3,%rax
    e4d6:	48 8d 15 e3 cd 00 00 	lea    0xcde3(%rip),%rdx        # 1b2c0 <global_profiler>
    e4dd:	48 01 d0             	add    %rdx,%rax
    e4e0:	48 89 c2             	mov    %rax,%rdx
    e4e3:	48 c1 ea 03          	shr    $0x3,%rdx
    e4e7:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e4ee:	0f b6 12             	movzbl (%rdx),%edx
    e4f1:	84 d2                	test   %dl,%dl
    e4f3:	74 08                	je     e4fd <json_parse+0x852>
    e4f5:	48 89 c7             	mov    %rax,%rdi
    e4f8:	e8 c3 5c ff ff       	call   41c0 <__asan_report_load8@plt>
    e4fd:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e503:	48 89 d0             	mov    %rdx,%rax
    e506:	48 01 c0             	add    %rax,%rax
    e509:	48 01 d0             	add    %rdx,%rax
    e50c:	48 c1 e0 03          	shl    $0x3,%rax
    e510:	48 89 c2             	mov    %rax,%rdx
    e513:	48 8d 05 a6 cd 00 00 	lea    0xcda6(%rip),%rax        # 1b2c0 <global_profiler>
    e51a:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
    e51e:	8b 85 44 ff ff ff    	mov    -0xbc(%rbp),%eax
    e524:	2b 85 4c ff ff ff    	sub    -0xb4(%rbp),%eax
    e52a:	89 c0                	mov    %eax,%eax
    e52c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e530:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e536:	48 89 d0             	mov    %rdx,%rax
    e539:	48 01 c0             	add    %rax,%rax
    e53c:	48 01 d0             	add    %rdx,%rax
    e53f:	48 c1 e0 03          	shl    $0x3,%rax
    e543:	48 89 c2             	mov    %rax,%rdx
    e546:	48 8d 05 73 cd 00 00 	lea    0xcd73(%rip),%rax        # 1b2c0 <global_profiler>
    e54d:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
    e551:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e557:	48 89 d0             	mov    %rdx,%rax
    e55a:	48 01 c0             	add    %rax,%rax
    e55d:	48 01 d0             	add    %rdx,%rax
    e560:	48 c1 e0 03          	shl    $0x3,%rax
    e564:	48 8d 15 55 cd 00 00 	lea    0xcd55(%rip),%rdx        # 1b2c0 <global_profiler>
    e56b:	48 01 d0             	add    %rdx,%rax
    e56e:	48 83 c0 08          	add    $0x8,%rax
    e572:	48 89 c2             	mov    %rax,%rdx
    e575:	48 c1 ea 03          	shr    $0x3,%rdx
    e579:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e580:	0f b6 12             	movzbl (%rdx),%edx
    e583:	84 d2                	test   %dl,%dl
    e585:	74 08                	je     e58f <json_parse+0x8e4>
    e587:	48 89 c7             	mov    %rax,%rdi
    e58a:	e8 b1 5b ff ff       	call   4140 <__asan_report_store8@plt>
    e58f:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    e595:	48 89 d0             	mov    %rdx,%rax
    e598:	48 01 c0             	add    %rax,%rax
    e59b:	48 01 d0             	add    %rdx,%rax
    e59e:	48 c1 e0 03          	shl    $0x3,%rax
    e5a2:	48 89 c1             	mov    %rax,%rcx
    e5a5:	48 8d 05 1c cd 00 00 	lea    0xcd1c(%rip),%rax        # 1b2c8 <global_profiler+0x8>
    e5ac:	48 8d 15 2d 7c 00 00 	lea    0x7c2d(%rip),%rdx        # 161e0 <__func__.2>
    e5b3:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
    e5b7:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    e5bd:	89 c2                	mov    %eax,%edx
    e5bf:	4d 39 e6             	cmp    %r12,%r14
    e5c2:	74 2e                	je     e5f2 <json_parse+0x947>
    e5c4:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
    e5cb:	45 
    e5cc:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
    e5d3:	f5 f5 f5 
    e5d6:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
    e5dd:	41 c7 85 08 80 ff 7f 	movl   $0xf5f5f5f5,0x7fff8008(%r13)
    e5e4:	f5 f5 f5 f5 
    e5e8:	49 8b 44 24 78       	mov    0x78(%r12),%rax
    e5ed:	c6 00 00             	movb   $0x0,(%rax)
    e5f0:	eb 16                	jmp    e608 <json_parse+0x95d>
    e5f2:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
    e5f9:	00 00 00 00 
    e5fd:	41 c7 85 08 80 ff 7f 	movl   $0x0,0x7fff8008(%r13)
    e604:	00 00 00 00 
    e608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e60c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    e613:	00 00 
    e615:	74 05                	je     e61c <json_parse+0x971>
    e617:	e8 44 5b ff ff       	call   4160 <__stack_chk_fail@plt>
    e61c:	89 d0                	mov    %edx,%eax
    e61e:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    e625:	5b                   	pop    %rbx
    e626:	41 5c                	pop    %r12
    e628:	41 5d                	pop    %r13
    e62a:	41 5e                	pop    %r14
    e62c:	5d                   	pop    %rbp
    e62d:	c3                   	ret

000000000000e62e <json_parse_whitespace>:
    e62e:	55                   	push   %rbp
    e62f:	48 89 e5             	mov    %rsp,%rbp
    e632:	48 83 ec 30          	sub    $0x30,%rsp
    e636:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e63a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e63e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    e642:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e646:	48 89 c2             	mov    %rax,%rdx
    e649:	48 c1 ea 03          	shr    $0x3,%rdx
    e64d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e654:	0f b6 12             	movzbl (%rdx),%edx
    e657:	84 d2                	test   %dl,%dl
    e659:	74 08                	je     e663 <json_parse_whitespace+0x35>
    e65b:	48 89 c7             	mov    %rax,%rdi
    e65e:	e8 5d 5b ff ff       	call   41c0 <__asan_report_load8@plt>
    e663:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e667:	48 8b 00             	mov    (%rax),%rax
    e66a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e66e:	72 0a                	jb     e67a <json_parse_whitespace+0x4c>
    e670:	b8 01 00 00 00       	mov    $0x1,%eax
    e675:	e9 a4 01 00 00       	jmp    e81e <json_parse_whitespace+0x1f0>
    e67a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e67e:	48 89 c2             	mov    %rax,%rdx
    e681:	48 c1 ea 03          	shr    $0x3,%rdx
    e685:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e68c:	0f b6 12             	movzbl (%rdx),%edx
    e68f:	84 d2                	test   %dl,%dl
    e691:	74 08                	je     e69b <json_parse_whitespace+0x6d>
    e693:	48 89 c7             	mov    %rax,%rdi
    e696:	e8 25 5b ff ff       	call   41c0 <__asan_report_load8@plt>
    e69b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e69f:	48 8b 10             	mov    (%rax),%rdx
    e6a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6a6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e6aa:	48 89 c8             	mov    %rcx,%rax
    e6ad:	48 89 c2             	mov    %rax,%rdx
    e6b0:	48 c1 ea 03          	shr    $0x3,%rdx
    e6b4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e6bb:	0f b6 12             	movzbl (%rdx),%edx
    e6be:	84 d2                	test   %dl,%dl
    e6c0:	40 0f 95 c6          	setne  %sil
    e6c4:	48 89 c7             	mov    %rax,%rdi
    e6c7:	83 e7 07             	and    $0x7,%edi
    e6ca:	40 38 d7             	cmp    %dl,%dil
    e6cd:	0f 9d c2             	setge  %dl
    e6d0:	21 f2                	and    %esi,%edx
    e6d2:	84 d2                	test   %dl,%dl
    e6d4:	74 08                	je     e6de <json_parse_whitespace+0xb0>
    e6d6:	48 89 c7             	mov    %rax,%rdi
    e6d9:	e8 b2 5a ff ff       	call   4190 <__asan_report_load1@plt>
    e6de:	0f b6 01             	movzbl (%rcx),%eax
    e6e1:	3c 20                	cmp    $0x20,%al
    e6e3:	0f 84 e2 00 00 00    	je     e7cb <json_parse_whitespace+0x19d>
    e6e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6ed:	48 8b 10             	mov    (%rax),%rdx
    e6f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6f4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e6f8:	48 89 c8             	mov    %rcx,%rax
    e6fb:	48 89 c2             	mov    %rax,%rdx
    e6fe:	48 c1 ea 03          	shr    $0x3,%rdx
    e702:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e709:	0f b6 12             	movzbl (%rdx),%edx
    e70c:	84 d2                	test   %dl,%dl
    e70e:	40 0f 95 c6          	setne  %sil
    e712:	48 89 c7             	mov    %rax,%rdi
    e715:	83 e7 07             	and    $0x7,%edi
    e718:	40 38 d7             	cmp    %dl,%dil
    e71b:	0f 9d c2             	setge  %dl
    e71e:	21 f2                	and    %esi,%edx
    e720:	84 d2                	test   %dl,%dl
    e722:	74 08                	je     e72c <json_parse_whitespace+0xfe>
    e724:	48 89 c7             	mov    %rax,%rdi
    e727:	e8 64 5a ff ff       	call   4190 <__asan_report_load1@plt>
    e72c:	0f b6 01             	movzbl (%rcx),%eax
    e72f:	3c 0a                	cmp    $0xa,%al
    e731:	0f 84 94 00 00 00    	je     e7cb <json_parse_whitespace+0x19d>
    e737:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e73b:	48 8b 10             	mov    (%rax),%rdx
    e73e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e742:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e746:	48 89 c8             	mov    %rcx,%rax
    e749:	48 89 c2             	mov    %rax,%rdx
    e74c:	48 c1 ea 03          	shr    $0x3,%rdx
    e750:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e757:	0f b6 12             	movzbl (%rdx),%edx
    e75a:	84 d2                	test   %dl,%dl
    e75c:	40 0f 95 c6          	setne  %sil
    e760:	48 89 c7             	mov    %rax,%rdi
    e763:	83 e7 07             	and    $0x7,%edi
    e766:	40 38 d7             	cmp    %dl,%dil
    e769:	0f 9d c2             	setge  %dl
    e76c:	21 f2                	and    %esi,%edx
    e76e:	84 d2                	test   %dl,%dl
    e770:	74 08                	je     e77a <json_parse_whitespace+0x14c>
    e772:	48 89 c7             	mov    %rax,%rdi
    e775:	e8 16 5a ff ff       	call   4190 <__asan_report_load1@plt>
    e77a:	0f b6 01             	movzbl (%rcx),%eax
    e77d:	3c 0d                	cmp    $0xd,%al
    e77f:	74 4a                	je     e7cb <json_parse_whitespace+0x19d>
    e781:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e785:	48 8b 10             	mov    (%rax),%rdx
    e788:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e78c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e790:	48 89 c8             	mov    %rcx,%rax
    e793:	48 89 c2             	mov    %rax,%rdx
    e796:	48 c1 ea 03          	shr    $0x3,%rdx
    e79a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e7a1:	0f b6 12             	movzbl (%rdx),%edx
    e7a4:	84 d2                	test   %dl,%dl
    e7a6:	40 0f 95 c6          	setne  %sil
    e7aa:	48 89 c7             	mov    %rax,%rdi
    e7ad:	83 e7 07             	and    $0x7,%edi
    e7b0:	40 38 d7             	cmp    %dl,%dil
    e7b3:	0f 9d c2             	setge  %dl
    e7b6:	21 f2                	and    %esi,%edx
    e7b8:	84 d2                	test   %dl,%dl
    e7ba:	74 08                	je     e7c4 <json_parse_whitespace+0x196>
    e7bc:	48 89 c7             	mov    %rax,%rdi
    e7bf:	e8 cc 59 ff ff       	call   4190 <__asan_report_load1@plt>
    e7c4:	0f b6 01             	movzbl (%rcx),%eax
    e7c7:	3c 09                	cmp    $0x9,%al
    e7c9:	75 07                	jne    e7d2 <json_parse_whitespace+0x1a4>
    e7cb:	b8 01 00 00 00       	mov    $0x1,%eax
    e7d0:	eb 05                	jmp    e7d7 <json_parse_whitespace+0x1a9>
    e7d2:	b8 00 00 00 00       	mov    $0x0,%eax
    e7d7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    e7da:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e7de:	74 38                	je     e818 <json_parse_whitespace+0x1ea>
    e7e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e7e4:	48 89 c2             	mov    %rax,%rdx
    e7e7:	48 c1 ea 03          	shr    $0x3,%rdx
    e7eb:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e7f2:	0f b6 12             	movzbl (%rdx),%edx
    e7f5:	84 d2                	test   %dl,%dl
    e7f7:	74 08                	je     e801 <json_parse_whitespace+0x1d3>
    e7f9:	48 89 c7             	mov    %rax,%rdi
    e7fc:	e8 bf 59 ff ff       	call   41c0 <__asan_report_load8@plt>
    e801:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e805:	48 8b 00             	mov    (%rax),%rax
    e808:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e80c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e810:	48 89 10             	mov    %rdx,(%rax)
    e813:	e9 2a fe ff ff       	jmp    e642 <json_parse_whitespace+0x14>
    e818:	90                   	nop
    e819:	b8 01 00 00 00       	mov    $0x1,%eax
    e81e:	c9                   	leave
    e81f:	c3                   	ret

000000000000e820 <json_parse_object>:
    e820:	55                   	push   %rbp
    e821:	48 89 e5             	mov    %rsp,%rbp
    e824:	53                   	push   %rbx
    e825:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    e82c:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    e830:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    e834:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    e838:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    e83f:	00 00 
    e841:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e845:	31 c0                	xor    %eax,%eax
    e847:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e84b:	48 89 c2             	mov    %rax,%rdx
    e84e:	48 c1 ea 03          	shr    $0x3,%rdx
    e852:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e859:	0f b6 12             	movzbl (%rdx),%edx
    e85c:	84 d2                	test   %dl,%dl
    e85e:	74 08                	je     e868 <json_parse_object+0x48>
    e860:	48 89 c7             	mov    %rax,%rdi
    e863:	e8 58 59 ff ff       	call   41c0 <__asan_report_load8@plt>
    e868:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    e86c:	48 8b 10             	mov    (%rax),%rdx
    e86f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e873:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e877:	48 89 c8             	mov    %rcx,%rax
    e87a:	48 89 c2             	mov    %rax,%rdx
    e87d:	48 c1 ea 03          	shr    $0x3,%rdx
    e881:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    e888:	0f b6 12             	movzbl (%rdx),%edx
    e88b:	84 d2                	test   %dl,%dl
    e88d:	40 0f 95 c6          	setne  %sil
    e891:	48 89 c7             	mov    %rax,%rdi
    e894:	83 e7 07             	and    $0x7,%edi
    e897:	40 38 d7             	cmp    %dl,%dil
    e89a:	0f 9d c2             	setge  %dl
    e89d:	21 f2                	and    %esi,%edx
    e89f:	84 d2                	test   %dl,%dl
    e8a1:	74 08                	je     e8ab <json_parse_object+0x8b>
    e8a3:	48 89 c7             	mov    %rax,%rdi
    e8a6:	e8 e5 58 ff ff       	call   4190 <__asan_report_load1@plt>
    e8ab:	0f b6 01             	movzbl (%rcx),%eax
    e8ae:	3c 7b                	cmp    $0x7b,%al
    e8b0:	74 29                	je     e8db <json_parse_object+0xbb>
    e8b2:	48 8d 15 07 5c 00 00 	lea    0x5c07(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    e8b9:	48 8d 35 a0 63 00 00 	lea    0x63a0(%rip),%rsi        # 14c60 <_IO_stdin_used+0x1c60>
    e8c0:	48 8d 05 19 5a 00 00 	lea    0x5a19(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    e8c7:	b9 f8 00 00 00       	mov    $0xf8,%ecx
    e8cc:	48 89 c7             	mov    %rax,%rdi
    e8cf:	b8 00 00 00 00       	mov    $0x0,%eax
    e8d4:	e8 77 57 ff ff       	call   4050 <printf@plt>
    e8d9:	0f 0b                	ud2
    e8db:	bf 18 00 00 00       	mov    $0x18,%edi
    e8e0:	e8 d6 f1 ff ff       	call   dabb <json_memory_allocate>
    e8e5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    e8e9:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e8ee:	75 29                	jne    e919 <json_parse_object+0xf9>
    e8f0:	48 8d 15 c9 5b 00 00 	lea    0x5bc9(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    e8f7:	48 8d 35 c2 63 00 00 	lea    0x63c2(%rip),%rsi        # 14cc0 <_IO_stdin_used+0x1cc0>
    e8fe:	48 8d 05 db 59 00 00 	lea    0x59db(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    e905:	b9 fa 00 00 00       	mov    $0xfa,%ecx
    e90a:	48 89 c7             	mov    %rax,%rdi
    e90d:	b8 00 00 00 00       	mov    $0x0,%eax
    e912:	e8 39 57 ff ff       	call   4050 <printf@plt>
    e917:	0f 0b                	ud2
    e919:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    e91d:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    e921:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e925:	48 89 ce             	mov    %rcx,%rsi
    e928:	48 89 c7             	mov    %rax,%rdi
    e92b:	e8 b1 1a 00 00       	call   103e1 <json_get_object_value_count>
    e930:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    e933:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e936:	48 c1 e0 04          	shl    $0x4,%rax
    e93a:	48 89 c7             	mov    %rax,%rdi
    e93d:	e8 79 f1 ff ff       	call   dabb <json_memory_allocate>
    e942:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e946:	48 89 d1             	mov    %rdx,%rcx
    e949:	48 c1 e9 03          	shr    $0x3,%rcx
    e94d:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    e954:	0f b6 09             	movzbl (%rcx),%ecx
    e957:	84 c9                	test   %cl,%cl
    e959:	74 08                	je     e963 <json_parse_object+0x143>
    e95b:	48 89 d7             	mov    %rdx,%rdi
    e95e:	e8 dd 57 ff ff       	call   4140 <__asan_report_store8@plt>
    e963:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e967:	48 89 02             	mov    %rax,(%rdx)
    e96a:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    e96d:	48 89 d0             	mov    %rdx,%rax
    e970:	48 01 c0             	add    %rax,%rax
    e973:	48 01 d0             	add    %rdx,%rax
    e976:	48 c1 e0 04          	shl    $0x4,%rax
    e97a:	48 89 c7             	mov    %rax,%rdi
    e97d:	e8 39 f1 ff ff       	call   dabb <json_memory_allocate>
    e982:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e986:	48 83 c2 08          	add    $0x8,%rdx
    e98a:	48 89 d1             	mov    %rdx,%rcx
    e98d:	48 c1 e9 03          	shr    $0x3,%rcx
    e991:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    e998:	0f b6 09             	movzbl (%rcx),%ecx
    e99b:	84 c9                	test   %cl,%cl
    e99d:	74 08                	je     e9a7 <json_parse_object+0x187>
    e99f:	48 89 d7             	mov    %rdx,%rdi
    e9a2:	e8 99 57 ff ff       	call   4140 <__asan_report_store8@plt>
    e9a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e9ab:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e9af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9b3:	48 83 c0 10          	add    $0x10,%rax
    e9b7:	48 89 c2             	mov    %rax,%rdx
    e9ba:	48 89 d0             	mov    %rdx,%rax
    e9bd:	48 c1 e8 03          	shr    $0x3,%rax
    e9c1:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    e9c7:	0f b6 00             	movzbl (%rax),%eax
    e9ca:	84 c0                	test   %al,%al
    e9cc:	0f 95 c1             	setne  %cl
    e9cf:	3c 03                	cmp    $0x3,%al
    e9d1:	0f 9e c0             	setle  %al
    e9d4:	21 c8                	and    %ecx,%eax
    e9d6:	84 c0                	test   %al,%al
    e9d8:	74 08                	je     e9e2 <json_parse_object+0x1c2>
    e9da:	48 89 d7             	mov    %rdx,%rdi
    e9dd:	e8 4e 56 ff ff       	call   4030 <__asan_report_store4@plt>
    e9e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9e6:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    e9e9:	89 50 10             	mov    %edx,0x10(%rax)
    e9ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    e9f4:	48 85 c0             	test   %rax,%rax
    e9f7:	75 29                	jne    ea22 <json_parse_object+0x202>
    e9f9:	48 8d 15 c0 5a 00 00 	lea    0x5ac0(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ea00:	48 8d 35 f9 62 00 00 	lea    0x62f9(%rip),%rsi        # 14d00 <_IO_stdin_used+0x1d00>
    ea07:	48 8d 05 d2 58 00 00 	lea    0x58d2(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ea0e:	b9 01 01 00 00       	mov    $0x101,%ecx
    ea13:	48 89 c7             	mov    %rax,%rdi
    ea16:	b8 00 00 00 00       	mov    $0x0,%eax
    ea1b:	e8 30 56 ff ff       	call   4050 <printf@plt>
    ea20:	0f 0b                	ud2
    ea22:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea26:	48 89 c2             	mov    %rax,%rdx
    ea29:	48 c1 ea 03          	shr    $0x3,%rdx
    ea2d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ea34:	0f b6 12             	movzbl (%rdx),%edx
    ea37:	84 d2                	test   %dl,%dl
    ea39:	74 08                	je     ea43 <json_parse_object+0x223>
    ea3b:	48 89 c7             	mov    %rax,%rdi
    ea3e:	e8 7d 57 ff ff       	call   41c0 <__asan_report_load8@plt>
    ea43:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea47:	48 8b 00             	mov    (%rax),%rax
    ea4a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    ea4e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea52:	48 89 10             	mov    %rdx,(%rax)
    ea55:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ea59:	48 8b 00             	mov    (%rax),%rax
    ea5c:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    ea60:	72 29                	jb     ea8b <json_parse_object+0x26b>
    ea62:	48 8d 15 57 5a 00 00 	lea    0x5a57(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ea69:	48 8d 35 d0 62 00 00 	lea    0x62d0(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    ea70:	48 8d 05 69 58 00 00 	lea    0x5869(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ea77:	b9 04 01 00 00       	mov    $0x104,%ecx
    ea7c:	48 89 c7             	mov    %rax,%rdi
    ea7f:	b8 00 00 00 00       	mov    $0x0,%eax
    ea84:	e8 c7 55 ff ff       	call   4050 <printf@plt>
    ea89:	0f 0b                	ud2
    ea8b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
    ea92:	e9 b1 05 00 00       	jmp    f048 <json_parse_object+0x828>
    ea97:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ea9b:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    ea9f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eaa3:	48 89 ce             	mov    %rcx,%rsi
    eaa6:	48 89 c7             	mov    %rax,%rdi
    eaa9:	e8 80 fb ff ff       	call   e62e <json_parse_whitespace>
    eaae:	85 c0                	test   %eax,%eax
    eab0:	75 29                	jne    eadb <json_parse_object+0x2bb>
    eab2:	48 8d 15 07 5a 00 00 	lea    0x5a07(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    eab9:	48 8d 35 80 4e 00 00 	lea    0x4e80(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    eac0:	48 8d 05 19 58 00 00 	lea    0x5819(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    eac7:	b9 0a 01 00 00       	mov    $0x10a,%ecx
    eacc:	48 89 c7             	mov    %rax,%rdi
    eacf:	b8 00 00 00 00       	mov    $0x0,%eax
    ead4:	e8 77 55 ff ff       	call   4050 <printf@plt>
    ead9:	0f 0b                	ud2
    eadb:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    eae2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eae6:	48 89 c2             	mov    %rax,%rdx
    eae9:	48 c1 ea 03          	shr    $0x3,%rdx
    eaed:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    eaf4:	0f b6 12             	movzbl (%rdx),%edx
    eaf7:	84 d2                	test   %dl,%dl
    eaf9:	74 08                	je     eb03 <json_parse_object+0x2e3>
    eafb:	48 89 c7             	mov    %rax,%rdi
    eafe:	e8 bd 56 ff ff       	call   41c0 <__asan_report_load8@plt>
    eb03:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb07:	48 8b 10             	mov    (%rax),%rdx
    eb0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb0e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    eb12:	48 89 c8             	mov    %rcx,%rax
    eb15:	48 89 c2             	mov    %rax,%rdx
    eb18:	48 c1 ea 03          	shr    $0x3,%rdx
    eb1c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    eb23:	0f b6 12             	movzbl (%rdx),%edx
    eb26:	84 d2                	test   %dl,%dl
    eb28:	40 0f 95 c6          	setne  %sil
    eb2c:	48 89 c7             	mov    %rax,%rdi
    eb2f:	83 e7 07             	and    $0x7,%edi
    eb32:	40 38 d7             	cmp    %dl,%dil
    eb35:	0f 9d c2             	setge  %dl
    eb38:	21 f2                	and    %esi,%edx
    eb3a:	84 d2                	test   %dl,%dl
    eb3c:	74 08                	je     eb46 <json_parse_object+0x326>
    eb3e:	48 89 c7             	mov    %rax,%rdi
    eb41:	e8 4a 56 ff ff       	call   4190 <__asan_report_load1@plt>
    eb46:	0f b6 01             	movzbl (%rcx),%eax
    eb49:	3c 22                	cmp    $0x22,%al
    eb4b:	74 29                	je     eb76 <json_parse_object+0x356>
    eb4d:	48 8d 15 6c 59 00 00 	lea    0x596c(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    eb54:	48 8d 35 45 62 00 00 	lea    0x6245(%rip),%rsi        # 14da0 <_IO_stdin_used+0x1da0>
    eb5b:	48 8d 05 7e 57 00 00 	lea    0x577e(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    eb62:	b9 0e 01 00 00       	mov    $0x10e,%ecx
    eb67:	48 89 c7             	mov    %rax,%rdi
    eb6a:	b8 00 00 00 00       	mov    $0x0,%eax
    eb6f:	e8 dc 54 ff ff       	call   4050 <printf@plt>
    eb74:	0f 0b                	ud2
    eb76:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb7a:	48 89 c2             	mov    %rax,%rdx
    eb7d:	48 c1 ea 03          	shr    $0x3,%rdx
    eb81:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    eb88:	0f b6 12             	movzbl (%rdx),%edx
    eb8b:	84 d2                	test   %dl,%dl
    eb8d:	74 08                	je     eb97 <json_parse_object+0x377>
    eb8f:	48 89 c7             	mov    %rax,%rdi
    eb92:	e8 29 56 ff ff       	call   41c0 <__asan_report_load8@plt>
    eb97:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eb9b:	48 8b 00             	mov    (%rax),%rax
    eb9e:	48 8d 50 01          	lea    0x1(%rax),%rdx
    eba2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    eba6:	48 89 10             	mov    %rdx,(%rax)
    eba9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ebad:	48 8b 00             	mov    (%rax),%rax
    ebb0:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    ebb4:	72 2d                	jb     ebe3 <json_parse_object+0x3c3>
    ebb6:	48 8d 15 03 59 00 00 	lea    0x5903(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ebbd:	48 8d 35 7c 61 00 00 	lea    0x617c(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    ebc4:	48 8d 05 15 57 00 00 	lea    0x5715(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ebcb:	b9 10 01 00 00       	mov    $0x110,%ecx
    ebd0:	48 89 c7             	mov    %rax,%rdi
    ebd3:	b8 00 00 00 00       	mov    $0x0,%eax
    ebd8:	e8 73 54 ff ff       	call   4050 <printf@plt>
    ebdd:	0f 0b                	ud2
    ebdf:	83 45 d0 01          	addl   $0x1,-0x30(%rbp)
    ebe3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ebe7:	48 89 c2             	mov    %rax,%rdx
    ebea:	48 c1 ea 03          	shr    $0x3,%rdx
    ebee:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ebf5:	0f b6 12             	movzbl (%rdx),%edx
    ebf8:	84 d2                	test   %dl,%dl
    ebfa:	74 08                	je     ec04 <json_parse_object+0x3e4>
    ebfc:	48 89 c7             	mov    %rax,%rdi
    ebff:	e8 bc 55 ff ff       	call   41c0 <__asan_report_load8@plt>
    ec04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ec08:	48 8b 10             	mov    (%rax),%rdx
    ec0b:	8b 45 d0             	mov    -0x30(%rbp),%eax
    ec0e:	48 01 c2             	add    %rax,%rdx
    ec11:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec15:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ec19:	48 89 c8             	mov    %rcx,%rax
    ec1c:	48 89 c2             	mov    %rax,%rdx
    ec1f:	48 c1 ea 03          	shr    $0x3,%rdx
    ec23:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ec2a:	0f b6 12             	movzbl (%rdx),%edx
    ec2d:	84 d2                	test   %dl,%dl
    ec2f:	40 0f 95 c6          	setne  %sil
    ec33:	48 89 c7             	mov    %rax,%rdi
    ec36:	83 e7 07             	and    $0x7,%edi
    ec39:	40 38 d7             	cmp    %dl,%dil
    ec3c:	0f 9d c2             	setge  %dl
    ec3f:	21 f2                	and    %esi,%edx
    ec41:	84 d2                	test   %dl,%dl
    ec43:	74 08                	je     ec4d <json_parse_object+0x42d>
    ec45:	48 89 c7             	mov    %rax,%rdi
    ec48:	e8 43 55 ff ff       	call   4190 <__asan_report_load1@plt>
    ec4d:	0f b6 01             	movzbl (%rcx),%eax
    ec50:	3c 22                	cmp    $0x22,%al
    ec52:	75 8b                	jne    ebdf <json_parse_object+0x3bf>
    ec54:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ec58:	48 8b 10             	mov    (%rax),%rdx
    ec5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec5f:	48 01 d0             	add    %rdx,%rax
    ec62:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ec66:	8b 55 d0             	mov    -0x30(%rbp),%edx
    ec69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec6d:	48 89 c1             	mov    %rax,%rcx
    ec70:	48 c1 e9 03          	shr    $0x3,%rcx
    ec74:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    ec7b:	0f b6 09             	movzbl (%rcx),%ecx
    ec7e:	84 c9                	test   %cl,%cl
    ec80:	74 08                	je     ec8a <json_parse_object+0x46a>
    ec82:	48 89 c7             	mov    %rax,%rdi
    ec85:	e8 36 55 ff ff       	call   41c0 <__asan_report_load8@plt>
    ec8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec8e:	48 8b 00             	mov    (%rax),%rax
    ec91:	8b 4d cc             	mov    -0x34(%rbp),%ecx
    ec94:	48 c1 e1 04          	shl    $0x4,%rcx
    ec98:	48 8d 1c 08          	lea    (%rax,%rcx,1),%rbx
    ec9c:	48 89 d8             	mov    %rbx,%rax
    ec9f:	48 89 c1             	mov    %rax,%rcx
    eca2:	48 c1 e9 03          	shr    $0x3,%rcx
    eca6:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    ecad:	0f b7 09             	movzwl (%rcx),%ecx
    ecb0:	66 85 c9             	test   %cx,%cx
    ecb3:	74 08                	je     ecbd <json_parse_object+0x49d>
    ecb5:	48 89 c7             	mov    %rax,%rdi
    ecb8:	e8 13 54 ff ff       	call   40d0 <__asan_report_store16@plt>
    ecbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecc1:	48 89 d6             	mov    %rdx,%rsi
    ecc4:	48 89 c7             	mov    %rax,%rdi
    ecc7:	e8 bc 58 ff ff       	call   4588 <jstring_create_temporary>
    eccc:	48 89 03             	mov    %rax,(%rbx)
    eccf:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ecd3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ecd7:	48 8b 00             	mov    (%rax),%rax
    ecda:	8b 55 d0             	mov    -0x30(%rbp),%edx
    ecdd:	83 c2 01             	add    $0x1,%edx
    ece0:	89 d2                	mov    %edx,%edx
    ece2:	48 01 c2             	add    %rax,%rdx
    ece5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ece9:	48 89 10             	mov    %rdx,(%rax)
    ecec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ecf0:	48 8b 00             	mov    (%rax),%rax
    ecf3:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    ecf7:	72 29                	jb     ed22 <json_parse_object+0x502>
    ecf9:	48 8d 15 c0 57 00 00 	lea    0x57c0(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ed00:	48 8d 35 39 60 00 00 	lea    0x6039(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    ed07:	48 8d 05 d2 55 00 00 	lea    0x55d2(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ed0e:	b9 1b 01 00 00       	mov    $0x11b,%ecx
    ed13:	48 89 c7             	mov    %rax,%rdi
    ed16:	b8 00 00 00 00       	mov    $0x0,%eax
    ed1b:	e8 30 53 ff ff       	call   4050 <printf@plt>
    ed20:	0f 0b                	ud2
    ed22:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ed26:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    ed2a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed2e:	48 89 ce             	mov    %rcx,%rsi
    ed31:	48 89 c7             	mov    %rax,%rdi
    ed34:	e8 f5 f8 ff ff       	call   e62e <json_parse_whitespace>
    ed39:	85 c0                	test   %eax,%eax
    ed3b:	75 29                	jne    ed66 <json_parse_object+0x546>
    ed3d:	48 8d 15 7c 57 00 00 	lea    0x577c(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ed44:	48 8d 35 f5 4b 00 00 	lea    0x4bf5(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    ed4b:	48 8d 05 8e 55 00 00 	lea    0x558e(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ed52:	b9 1f 01 00 00       	mov    $0x11f,%ecx
    ed57:	48 89 c7             	mov    %rax,%rdi
    ed5a:	b8 00 00 00 00       	mov    $0x0,%eax
    ed5f:	e8 ec 52 ff ff       	call   4050 <printf@plt>
    ed64:	0f 0b                	ud2
    ed66:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ed6a:	48 89 c2             	mov    %rax,%rdx
    ed6d:	48 c1 ea 03          	shr    $0x3,%rdx
    ed71:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ed78:	0f b6 12             	movzbl (%rdx),%edx
    ed7b:	84 d2                	test   %dl,%dl
    ed7d:	74 08                	je     ed87 <json_parse_object+0x567>
    ed7f:	48 89 c7             	mov    %rax,%rdi
    ed82:	e8 39 54 ff ff       	call   41c0 <__asan_report_load8@plt>
    ed87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ed8b:	48 8b 10             	mov    (%rax),%rdx
    ed8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed92:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ed96:	48 89 c8             	mov    %rcx,%rax
    ed99:	48 89 c2             	mov    %rax,%rdx
    ed9c:	48 c1 ea 03          	shr    $0x3,%rdx
    eda0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    eda7:	0f b6 12             	movzbl (%rdx),%edx
    edaa:	84 d2                	test   %dl,%dl
    edac:	40 0f 95 c6          	setne  %sil
    edb0:	48 89 c7             	mov    %rax,%rdi
    edb3:	83 e7 07             	and    $0x7,%edi
    edb6:	40 38 d7             	cmp    %dl,%dil
    edb9:	0f 9d c2             	setge  %dl
    edbc:	21 f2                	and    %esi,%edx
    edbe:	84 d2                	test   %dl,%dl
    edc0:	74 08                	je     edca <json_parse_object+0x5aa>
    edc2:	48 89 c7             	mov    %rax,%rdi
    edc5:	e8 c6 53 ff ff       	call   4190 <__asan_report_load1@plt>
    edca:	0f b6 01             	movzbl (%rcx),%eax
    edcd:	3c 3a                	cmp    $0x3a,%al
    edcf:	74 29                	je     edfa <json_parse_object+0x5da>
    edd1:	48 8d 15 e8 56 00 00 	lea    0x56e8(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    edd8:	48 8d 35 21 60 00 00 	lea    0x6021(%rip),%rsi        # 14e00 <_IO_stdin_used+0x1e00>
    eddf:	48 8d 05 fa 54 00 00 	lea    0x54fa(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ede6:	b9 22 01 00 00       	mov    $0x122,%ecx
    edeb:	48 89 c7             	mov    %rax,%rdi
    edee:	b8 00 00 00 00       	mov    $0x0,%eax
    edf3:	e8 58 52 ff ff       	call   4050 <printf@plt>
    edf8:	0f 0b                	ud2
    edfa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    edfe:	48 89 c2             	mov    %rax,%rdx
    ee01:	48 c1 ea 03          	shr    $0x3,%rdx
    ee05:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ee0c:	0f b6 12             	movzbl (%rdx),%edx
    ee0f:	84 d2                	test   %dl,%dl
    ee11:	74 08                	je     ee1b <json_parse_object+0x5fb>
    ee13:	48 89 c7             	mov    %rax,%rdi
    ee16:	e8 a5 53 ff ff       	call   41c0 <__asan_report_load8@plt>
    ee1b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee1f:	48 8b 00             	mov    (%rax),%rax
    ee22:	48 8d 50 01          	lea    0x1(%rax),%rdx
    ee26:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee2a:	48 89 10             	mov    %rdx,(%rax)
    ee2d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ee31:	48 8b 00             	mov    (%rax),%rax
    ee34:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    ee38:	72 29                	jb     ee63 <json_parse_object+0x643>
    ee3a:	48 8d 15 7f 56 00 00 	lea    0x567f(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ee41:	48 8d 35 f8 5e 00 00 	lea    0x5ef8(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    ee48:	48 8d 05 91 54 00 00 	lea    0x5491(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ee4f:	b9 24 01 00 00       	mov    $0x124,%ecx
    ee54:	48 89 c7             	mov    %rax,%rdi
    ee57:	b8 00 00 00 00       	mov    $0x0,%eax
    ee5c:	e8 ef 51 ff ff       	call   4050 <printf@plt>
    ee61:	0f 0b                	ud2
    ee63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee67:	48 83 c0 08          	add    $0x8,%rax
    ee6b:	48 89 c2             	mov    %rax,%rdx
    ee6e:	48 c1 ea 03          	shr    $0x3,%rdx
    ee72:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ee79:	0f b6 12             	movzbl (%rdx),%edx
    ee7c:	84 d2                	test   %dl,%dl
    ee7e:	74 08                	je     ee88 <json_parse_object+0x668>
    ee80:	48 89 c7             	mov    %rax,%rdi
    ee83:	e8 38 53 ff ff       	call   41c0 <__asan_report_load8@plt>
    ee88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee8c:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ee90:	8b 55 cc             	mov    -0x34(%rbp),%edx
    ee93:	48 89 d0             	mov    %rdx,%rax
    ee96:	48 01 c0             	add    %rax,%rax
    ee99:	48 01 d0             	add    %rdx,%rax
    ee9c:	48 c1 e0 04          	shl    $0x4,%rax
    eea0:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
    eea4:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    eeab:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    eeaf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    eeb3:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    eeb7:	48 89 c7             	mov    %rax,%rdi
    eeba:	e8 b1 08 00 00       	call   f770 <json_parse_value>
    eebf:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    eec6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    eecd:	48 89 03             	mov    %rax,(%rbx)
    eed0:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    eed4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    eed8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    eedc:	48 89 43 10          	mov    %rax,0x10(%rbx)
    eee0:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    eee4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    eee8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    eeec:	48 89 43 20          	mov    %rax,0x20(%rbx)
    eef0:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    eef4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    eef8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    eefc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef00:	48 89 ce             	mov    %rcx,%rsi
    ef03:	48 89 c7             	mov    %rax,%rdi
    ef06:	e8 23 f7 ff ff       	call   e62e <json_parse_whitespace>
    ef0b:	85 c0                	test   %eax,%eax
    ef0d:	75 29                	jne    ef38 <json_parse_object+0x718>
    ef0f:	48 8d 15 aa 55 00 00 	lea    0x55aa(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    ef16:	48 8d 35 23 4a 00 00 	lea    0x4a23(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    ef1d:	48 8d 05 bc 53 00 00 	lea    0x53bc(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    ef24:	b9 2d 01 00 00       	mov    $0x12d,%ecx
    ef29:	48 89 c7             	mov    %rax,%rdi
    ef2c:	b8 00 00 00 00       	mov    $0x0,%eax
    ef31:	e8 1a 51 ff ff       	call   4050 <printf@plt>
    ef36:	0f 0b                	ud2
    ef38:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ef3b:	83 e8 01             	sub    $0x1,%eax
    ef3e:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    ef41:	0f 84 fd 00 00 00    	je     f044 <json_parse_object+0x824>
    ef47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef4b:	48 89 c2             	mov    %rax,%rdx
    ef4e:	48 c1 ea 03          	shr    $0x3,%rdx
    ef52:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ef59:	0f b6 12             	movzbl (%rdx),%edx
    ef5c:	84 d2                	test   %dl,%dl
    ef5e:	74 08                	je     ef68 <json_parse_object+0x748>
    ef60:	48 89 c7             	mov    %rax,%rdi
    ef63:	e8 58 52 ff ff       	call   41c0 <__asan_report_load8@plt>
    ef68:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ef6c:	48 8b 10             	mov    (%rax),%rdx
    ef6f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ef73:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ef77:	48 89 c8             	mov    %rcx,%rax
    ef7a:	48 89 c2             	mov    %rax,%rdx
    ef7d:	48 c1 ea 03          	shr    $0x3,%rdx
    ef81:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ef88:	0f b6 12             	movzbl (%rdx),%edx
    ef8b:	84 d2                	test   %dl,%dl
    ef8d:	40 0f 95 c6          	setne  %sil
    ef91:	48 89 c7             	mov    %rax,%rdi
    ef94:	83 e7 07             	and    $0x7,%edi
    ef97:	40 38 d7             	cmp    %dl,%dil
    ef9a:	0f 9d c2             	setge  %dl
    ef9d:	21 f2                	and    %esi,%edx
    ef9f:	84 d2                	test   %dl,%dl
    efa1:	74 08                	je     efab <json_parse_object+0x78b>
    efa3:	48 89 c7             	mov    %rax,%rdi
    efa6:	e8 e5 51 ff ff       	call   4190 <__asan_report_load1@plt>
    efab:	0f b6 01             	movzbl (%rcx),%eax
    efae:	3c 2c                	cmp    $0x2c,%al
    efb0:	74 29                	je     efdb <json_parse_object+0x7bb>
    efb2:	48 8d 15 07 55 00 00 	lea    0x5507(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    efb9:	48 8d 35 a0 5e 00 00 	lea    0x5ea0(%rip),%rsi        # 14e60 <_IO_stdin_used+0x1e60>
    efc0:	48 8d 05 19 53 00 00 	lea    0x5319(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    efc7:	b9 33 01 00 00       	mov    $0x133,%ecx
    efcc:	48 89 c7             	mov    %rax,%rdi
    efcf:	b8 00 00 00 00       	mov    $0x0,%eax
    efd4:	e8 77 50 ff ff       	call   4050 <printf@plt>
    efd9:	0f 0b                	ud2
    efdb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    efdf:	48 89 c2             	mov    %rax,%rdx
    efe2:	48 c1 ea 03          	shr    $0x3,%rdx
    efe6:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    efed:	0f b6 12             	movzbl (%rdx),%edx
    eff0:	84 d2                	test   %dl,%dl
    eff2:	74 08                	je     effc <json_parse_object+0x7dc>
    eff4:	48 89 c7             	mov    %rax,%rdi
    eff7:	e8 c4 51 ff ff       	call   41c0 <__asan_report_load8@plt>
    effc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f000:	48 8b 00             	mov    (%rax),%rax
    f003:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f007:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f00b:	48 89 10             	mov    %rdx,(%rax)
    f00e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f012:	48 8b 00             	mov    (%rax),%rax
    f015:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    f019:	72 29                	jb     f044 <json_parse_object+0x824>
    f01b:	48 8d 15 9e 54 00 00 	lea    0x549e(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f022:	48 8d 35 17 5d 00 00 	lea    0x5d17(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    f029:	48 8d 05 b0 52 00 00 	lea    0x52b0(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f030:	b9 35 01 00 00       	mov    $0x135,%ecx
    f035:	48 89 c7             	mov    %rax,%rdi
    f038:	b8 00 00 00 00       	mov    $0x0,%eax
    f03d:	e8 0e 50 ff ff       	call   4050 <printf@plt>
    f042:	0f 0b                	ud2
    f044:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
    f048:	8b 45 cc             	mov    -0x34(%rbp),%eax
    f04b:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    f04e:	0f 82 43 fa ff ff    	jb     ea97 <json_parse_object+0x277>
    f054:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f058:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    f05c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f060:	48 89 ce             	mov    %rcx,%rsi
    f063:	48 89 c7             	mov    %rax,%rdi
    f066:	e8 c3 f5 ff ff       	call   e62e <json_parse_whitespace>
    f06b:	85 c0                	test   %eax,%eax
    f06d:	75 29                	jne    f098 <json_parse_object+0x878>
    f06f:	48 8d 15 4a 54 00 00 	lea    0x544a(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f076:	48 8d 35 c3 48 00 00 	lea    0x48c3(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    f07d:	48 8d 05 5c 52 00 00 	lea    0x525c(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f084:	b9 3b 01 00 00       	mov    $0x13b,%ecx
    f089:	48 89 c7             	mov    %rax,%rdi
    f08c:	b8 00 00 00 00       	mov    $0x0,%eax
    f091:	e8 ba 4f ff ff       	call   4050 <printf@plt>
    f096:	0f 0b                	ud2
    f098:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f09c:	48 89 c2             	mov    %rax,%rdx
    f09f:	48 c1 ea 03          	shr    $0x3,%rdx
    f0a3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f0aa:	0f b6 12             	movzbl (%rdx),%edx
    f0ad:	84 d2                	test   %dl,%dl
    f0af:	74 08                	je     f0b9 <json_parse_object+0x899>
    f0b1:	48 89 c7             	mov    %rax,%rdi
    f0b4:	e8 07 51 ff ff       	call   41c0 <__asan_report_load8@plt>
    f0b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f0bd:	48 8b 10             	mov    (%rax),%rdx
    f0c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f0c4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f0c8:	48 89 c8             	mov    %rcx,%rax
    f0cb:	48 89 c2             	mov    %rax,%rdx
    f0ce:	48 c1 ea 03          	shr    $0x3,%rdx
    f0d2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f0d9:	0f b6 12             	movzbl (%rdx),%edx
    f0dc:	84 d2                	test   %dl,%dl
    f0de:	40 0f 95 c6          	setne  %sil
    f0e2:	48 89 c7             	mov    %rax,%rdi
    f0e5:	83 e7 07             	and    $0x7,%edi
    f0e8:	40 38 d7             	cmp    %dl,%dil
    f0eb:	0f 9d c2             	setge  %dl
    f0ee:	21 f2                	and    %esi,%edx
    f0f0:	84 d2                	test   %dl,%dl
    f0f2:	74 08                	je     f0fc <json_parse_object+0x8dc>
    f0f4:	48 89 c7             	mov    %rax,%rdi
    f0f7:	e8 94 50 ff ff       	call   4190 <__asan_report_load1@plt>
    f0fc:	0f b6 01             	movzbl (%rcx),%eax
    f0ff:	3c 7d                	cmp    $0x7d,%al
    f101:	74 29                	je     f12c <json_parse_object+0x90c>
    f103:	48 8d 15 b6 53 00 00 	lea    0x53b6(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f10a:	48 8d 35 af 5d 00 00 	lea    0x5daf(%rip),%rsi        # 14ec0 <_IO_stdin_used+0x1ec0>
    f111:	48 8d 05 c8 51 00 00 	lea    0x51c8(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f118:	b9 3e 01 00 00       	mov    $0x13e,%ecx
    f11d:	48 89 c7             	mov    %rax,%rdi
    f120:	b8 00 00 00 00       	mov    $0x0,%eax
    f125:	e8 26 4f ff ff       	call   4050 <printf@plt>
    f12a:	0f 0b                	ud2
    f12c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f130:	48 89 c2             	mov    %rax,%rdx
    f133:	48 c1 ea 03          	shr    $0x3,%rdx
    f137:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f13e:	0f b6 12             	movzbl (%rdx),%edx
    f141:	84 d2                	test   %dl,%dl
    f143:	74 08                	je     f14d <json_parse_object+0x92d>
    f145:	48 89 c7             	mov    %rax,%rdi
    f148:	e8 73 50 ff ff       	call   41c0 <__asan_report_load8@plt>
    f14d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f151:	48 8b 00             	mov    (%rax),%rax
    f154:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f158:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f15c:	48 89 10             	mov    %rdx,(%rax)
    f15f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f163:	48 8b 00             	mov    (%rax),%rax
    f166:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    f16a:	72 29                	jb     f195 <json_parse_object+0x975>
    f16c:	48 8d 15 4d 53 00 00 	lea    0x534d(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f173:	48 8d 35 c6 5b 00 00 	lea    0x5bc6(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    f17a:	48 8d 05 5f 51 00 00 	lea    0x515f(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f181:	b9 40 01 00 00       	mov    $0x140,%ecx
    f186:	48 89 c7             	mov    %rax,%rdi
    f189:	b8 00 00 00 00       	mov    $0x0,%eax
    f18e:	e8 bd 4e ff ff       	call   4050 <printf@plt>
    f193:	0f 0b                	ud2
    f195:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f199:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f19d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f1a4:	00 00 
    f1a6:	74 05                	je     f1ad <json_parse_object+0x98d>
    f1a8:	e8 b3 4f ff ff       	call   4160 <__stack_chk_fail@plt>
    f1ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f1b1:	c9                   	leave
    f1b2:	c3                   	ret

000000000000f1b3 <json_parse_array>:
    f1b3:	55                   	push   %rbp
    f1b4:	48 89 e5             	mov    %rsp,%rbp
    f1b7:	53                   	push   %rbx
    f1b8:	48 83 ec 78          	sub    $0x78,%rsp
    f1bc:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f1c0:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    f1c4:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    f1c8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    f1cf:	00 00 
    f1d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f1d5:	31 c0                	xor    %eax,%eax
    f1d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1db:	48 89 c2             	mov    %rax,%rdx
    f1de:	48 c1 ea 03          	shr    $0x3,%rdx
    f1e2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f1e9:	0f b6 12             	movzbl (%rdx),%edx
    f1ec:	84 d2                	test   %dl,%dl
    f1ee:	74 08                	je     f1f8 <json_parse_array+0x45>
    f1f0:	48 89 c7             	mov    %rax,%rdi
    f1f3:	e8 c8 4f ff ff       	call   41c0 <__asan_report_load8@plt>
    f1f8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f1fc:	48 8b 10             	mov    (%rax),%rdx
    f1ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f203:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f207:	48 89 c8             	mov    %rcx,%rax
    f20a:	48 89 c2             	mov    %rax,%rdx
    f20d:	48 c1 ea 03          	shr    $0x3,%rdx
    f211:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f218:	0f b6 12             	movzbl (%rdx),%edx
    f21b:	84 d2                	test   %dl,%dl
    f21d:	40 0f 95 c6          	setne  %sil
    f221:	48 89 c7             	mov    %rax,%rdi
    f224:	83 e7 07             	and    $0x7,%edi
    f227:	40 38 d7             	cmp    %dl,%dil
    f22a:	0f 9d c2             	setge  %dl
    f22d:	21 f2                	and    %esi,%edx
    f22f:	84 d2                	test   %dl,%dl
    f231:	74 08                	je     f23b <json_parse_array+0x88>
    f233:	48 89 c7             	mov    %rax,%rdi
    f236:	e8 55 4f ff ff       	call   4190 <__asan_report_load1@plt>
    f23b:	0f b6 01             	movzbl (%rcx),%eax
    f23e:	3c 5b                	cmp    $0x5b,%al
    f240:	74 29                	je     f26b <json_parse_array+0xb8>
    f242:	48 8d 15 77 52 00 00 	lea    0x5277(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f249:	48 8d 35 d0 5c 00 00 	lea    0x5cd0(%rip),%rsi        # 14f20 <_IO_stdin_used+0x1f20>
    f250:	48 8d 05 89 50 00 00 	lea    0x5089(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f257:	b9 47 01 00 00       	mov    $0x147,%ecx
    f25c:	48 89 c7             	mov    %rax,%rdi
    f25f:	b8 00 00 00 00       	mov    $0x0,%eax
    f264:	e8 e7 4d ff ff       	call   4050 <printf@plt>
    f269:	0f 0b                	ud2
    f26b:	bf 10 00 00 00       	mov    $0x10,%edi
    f270:	e8 46 e8 ff ff       	call   dabb <json_memory_allocate>
    f275:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    f279:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f27e:	75 29                	jne    f2a9 <json_parse_array+0xf6>
    f280:	48 8d 15 39 52 00 00 	lea    0x5239(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f287:	48 8d 35 32 5a 00 00 	lea    0x5a32(%rip),%rsi        # 14cc0 <_IO_stdin_used+0x1cc0>
    f28e:	48 8d 05 4b 50 00 00 	lea    0x504b(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f295:	b9 49 01 00 00       	mov    $0x149,%ecx
    f29a:	48 89 c7             	mov    %rax,%rdi
    f29d:	b8 00 00 00 00       	mov    $0x0,%eax
    f2a2:	e8 a9 4d ff ff       	call   4050 <printf@plt>
    f2a7:	0f 0b                	ud2
    f2a9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f2ad:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f2b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2b5:	48 89 ce             	mov    %rcx,%rsi
    f2b8:	48 89 c7             	mov    %rax,%rdi
    f2bb:	e8 a0 0e 00 00       	call   10160 <json_get_array_value_count>
    f2c0:	89 45 dc             	mov    %eax,-0x24(%rbp)
    f2c3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    f2c6:	48 89 d0             	mov    %rdx,%rax
    f2c9:	48 01 c0             	add    %rax,%rax
    f2cc:	48 01 d0             	add    %rdx,%rax
    f2cf:	48 c1 e0 04          	shl    $0x4,%rax
    f2d3:	48 89 c7             	mov    %rax,%rdi
    f2d6:	e8 e0 e7 ff ff       	call   dabb <json_memory_allocate>
    f2db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f2df:	48 89 d1             	mov    %rdx,%rcx
    f2e2:	48 c1 e9 03          	shr    $0x3,%rcx
    f2e6:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
    f2ed:	0f b6 09             	movzbl (%rcx),%ecx
    f2f0:	84 c9                	test   %cl,%cl
    f2f2:	74 08                	je     f2fc <json_parse_array+0x149>
    f2f4:	48 89 d7             	mov    %rdx,%rdi
    f2f7:	e8 44 4e ff ff       	call   4140 <__asan_report_store8@plt>
    f2fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f300:	48 89 02             	mov    %rax,(%rdx)
    f303:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f307:	48 83 c0 08          	add    $0x8,%rax
    f30b:	48 89 c2             	mov    %rax,%rdx
    f30e:	48 89 d0             	mov    %rdx,%rax
    f311:	48 c1 e8 03          	shr    $0x3,%rax
    f315:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
    f31b:	0f b6 00             	movzbl (%rax),%eax
    f31e:	84 c0                	test   %al,%al
    f320:	0f 95 c1             	setne  %cl
    f323:	3c 03                	cmp    $0x3,%al
    f325:	0f 9e c0             	setle  %al
    f328:	21 c8                	and    %ecx,%eax
    f32a:	84 c0                	test   %al,%al
    f32c:	74 08                	je     f336 <json_parse_array+0x183>
    f32e:	48 89 d7             	mov    %rdx,%rdi
    f331:	e8 fa 4c ff ff       	call   4030 <__asan_report_store4@plt>
    f336:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f33a:	8b 55 dc             	mov    -0x24(%rbp),%edx
    f33d:	89 50 08             	mov    %edx,0x8(%rax)
    f340:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f344:	48 8b 00             	mov    (%rax),%rax
    f347:	48 85 c0             	test   %rax,%rax
    f34a:	75 29                	jne    f375 <json_parse_array+0x1c2>
    f34c:	48 8d 15 6d 51 00 00 	lea    0x516d(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f353:	48 8d 35 a6 59 00 00 	lea    0x59a6(%rip),%rsi        # 14d00 <_IO_stdin_used+0x1d00>
    f35a:	48 8d 05 7f 4f 00 00 	lea    0x4f7f(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f361:	b9 4f 01 00 00       	mov    $0x14f,%ecx
    f366:	48 89 c7             	mov    %rax,%rdi
    f369:	b8 00 00 00 00       	mov    $0x0,%eax
    f36e:	e8 dd 4c ff ff       	call   4050 <printf@plt>
    f373:	0f 0b                	ud2
    f375:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f379:	48 89 c2             	mov    %rax,%rdx
    f37c:	48 c1 ea 03          	shr    $0x3,%rdx
    f380:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f387:	0f b6 12             	movzbl (%rdx),%edx
    f38a:	84 d2                	test   %dl,%dl
    f38c:	74 08                	je     f396 <json_parse_array+0x1e3>
    f38e:	48 89 c7             	mov    %rax,%rdi
    f391:	e8 2a 4e ff ff       	call   41c0 <__asan_report_load8@plt>
    f396:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f39a:	48 8b 00             	mov    (%rax),%rax
    f39d:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f3a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3a5:	48 89 10             	mov    %rdx,(%rax)
    f3a8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f3ac:	48 8b 00             	mov    (%rax),%rax
    f3af:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f3b3:	72 29                	jb     f3de <json_parse_array+0x22b>
    f3b5:	48 8d 15 04 51 00 00 	lea    0x5104(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f3bc:	48 8d 35 7d 59 00 00 	lea    0x597d(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    f3c3:	48 8d 05 16 4f 00 00 	lea    0x4f16(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f3ca:	b9 52 01 00 00       	mov    $0x152,%ecx
    f3cf:	48 89 c7             	mov    %rax,%rdi
    f3d2:	b8 00 00 00 00       	mov    $0x0,%eax
    f3d7:	e8 74 4c ff ff       	call   4050 <printf@plt>
    f3dc:	0f 0b                	ud2
    f3de:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    f3e5:	e9 1b 02 00 00       	jmp    f605 <json_parse_array+0x452>
    f3ea:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f3ee:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f3f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3f6:	48 89 ce             	mov    %rcx,%rsi
    f3f9:	48 89 c7             	mov    %rax,%rdi
    f3fc:	e8 2d f2 ff ff       	call   e62e <json_parse_whitespace>
    f401:	85 c0                	test   %eax,%eax
    f403:	75 29                	jne    f42e <json_parse_array+0x27b>
    f405:	48 8d 15 b4 50 00 00 	lea    0x50b4(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f40c:	48 8d 35 2d 45 00 00 	lea    0x452d(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    f413:	48 8d 05 c6 4e 00 00 	lea    0x4ec6(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f41a:	b9 58 01 00 00       	mov    $0x158,%ecx
    f41f:	48 89 c7             	mov    %rax,%rdi
    f422:	b8 00 00 00 00       	mov    $0x0,%eax
    f427:	e8 24 4c ff ff       	call   4050 <printf@plt>
    f42c:	0f 0b                	ud2
    f42e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f432:	48 89 c2             	mov    %rax,%rdx
    f435:	48 c1 ea 03          	shr    $0x3,%rdx
    f439:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f440:	0f b6 12             	movzbl (%rdx),%edx
    f443:	84 d2                	test   %dl,%dl
    f445:	74 08                	je     f44f <json_parse_array+0x29c>
    f447:	48 89 c7             	mov    %rax,%rdi
    f44a:	e8 71 4d ff ff       	call   41c0 <__asan_report_load8@plt>
    f44f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f453:	48 8b 08             	mov    (%rax),%rcx
    f456:	8b 55 d8             	mov    -0x28(%rbp),%edx
    f459:	48 89 d0             	mov    %rdx,%rax
    f45c:	48 01 c0             	add    %rax,%rax
    f45f:	48 01 d0             	add    %rdx,%rax
    f462:	48 c1 e0 04          	shl    $0x4,%rax
    f466:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
    f46a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f46e:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    f472:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f476:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    f47a:	48 89 c7             	mov    %rax,%rdi
    f47d:	e8 ee 02 00 00       	call   f770 <json_parse_value>
    f482:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f486:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    f48a:	48 89 03             	mov    %rax,(%rbx)
    f48d:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    f491:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f495:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    f499:	48 89 43 10          	mov    %rax,0x10(%rbx)
    f49d:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    f4a1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f4a5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    f4a9:	48 89 43 20          	mov    %rax,0x20(%rbx)
    f4ad:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f4b1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f4b5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f4b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f4bd:	48 89 ce             	mov    %rcx,%rsi
    f4c0:	48 89 c7             	mov    %rax,%rdi
    f4c3:	e8 66 f1 ff ff       	call   e62e <json_parse_whitespace>
    f4c8:	85 c0                	test   %eax,%eax
    f4ca:	75 29                	jne    f4f5 <json_parse_array+0x342>
    f4cc:	48 8d 15 ed 4f 00 00 	lea    0x4fed(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f4d3:	48 8d 35 66 44 00 00 	lea    0x4466(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    f4da:	48 8d 05 ff 4d 00 00 	lea    0x4dff(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f4e1:	b9 62 01 00 00       	mov    $0x162,%ecx
    f4e6:	48 89 c7             	mov    %rax,%rdi
    f4e9:	b8 00 00 00 00       	mov    $0x0,%eax
    f4ee:	e8 5d 4b ff ff       	call   4050 <printf@plt>
    f4f3:	0f 0b                	ud2
    f4f5:	8b 45 dc             	mov    -0x24(%rbp),%eax
    f4f8:	83 e8 01             	sub    $0x1,%eax
    f4fb:	39 45 d8             	cmp    %eax,-0x28(%rbp)
    f4fe:	0f 84 fd 00 00 00    	je     f601 <json_parse_array+0x44e>
    f504:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f508:	48 89 c2             	mov    %rax,%rdx
    f50b:	48 c1 ea 03          	shr    $0x3,%rdx
    f50f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f516:	0f b6 12             	movzbl (%rdx),%edx
    f519:	84 d2                	test   %dl,%dl
    f51b:	74 08                	je     f525 <json_parse_array+0x372>
    f51d:	48 89 c7             	mov    %rax,%rdi
    f520:	e8 9b 4c ff ff       	call   41c0 <__asan_report_load8@plt>
    f525:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f529:	48 8b 10             	mov    (%rax),%rdx
    f52c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f530:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f534:	48 89 c8             	mov    %rcx,%rax
    f537:	48 89 c2             	mov    %rax,%rdx
    f53a:	48 c1 ea 03          	shr    $0x3,%rdx
    f53e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f545:	0f b6 12             	movzbl (%rdx),%edx
    f548:	84 d2                	test   %dl,%dl
    f54a:	40 0f 95 c6          	setne  %sil
    f54e:	48 89 c7             	mov    %rax,%rdi
    f551:	83 e7 07             	and    $0x7,%edi
    f554:	40 38 d7             	cmp    %dl,%dil
    f557:	0f 9d c2             	setge  %dl
    f55a:	21 f2                	and    %esi,%edx
    f55c:	84 d2                	test   %dl,%dl
    f55e:	74 08                	je     f568 <json_parse_array+0x3b5>
    f560:	48 89 c7             	mov    %rax,%rdi
    f563:	e8 28 4c ff ff       	call   4190 <__asan_report_load1@plt>
    f568:	0f b6 01             	movzbl (%rcx),%eax
    f56b:	3c 2c                	cmp    $0x2c,%al
    f56d:	74 29                	je     f598 <json_parse_array+0x3e5>
    f56f:	48 8d 15 4a 4f 00 00 	lea    0x4f4a(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f576:	48 8d 35 e3 58 00 00 	lea    0x58e3(%rip),%rsi        # 14e60 <_IO_stdin_used+0x1e60>
    f57d:	48 8d 05 5c 4d 00 00 	lea    0x4d5c(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f584:	b9 68 01 00 00       	mov    $0x168,%ecx
    f589:	48 89 c7             	mov    %rax,%rdi
    f58c:	b8 00 00 00 00       	mov    $0x0,%eax
    f591:	e8 ba 4a ff ff       	call   4050 <printf@plt>
    f596:	0f 0b                	ud2
    f598:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f59c:	48 89 c2             	mov    %rax,%rdx
    f59f:	48 c1 ea 03          	shr    $0x3,%rdx
    f5a3:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f5aa:	0f b6 12             	movzbl (%rdx),%edx
    f5ad:	84 d2                	test   %dl,%dl
    f5af:	74 08                	je     f5b9 <json_parse_array+0x406>
    f5b1:	48 89 c7             	mov    %rax,%rdi
    f5b4:	e8 07 4c ff ff       	call   41c0 <__asan_report_load8@plt>
    f5b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5bd:	48 8b 00             	mov    (%rax),%rax
    f5c0:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f5c4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5c8:	48 89 10             	mov    %rdx,(%rax)
    f5cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f5cf:	48 8b 00             	mov    (%rax),%rax
    f5d2:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f5d6:	72 29                	jb     f601 <json_parse_array+0x44e>
    f5d8:	48 8d 15 e1 4e 00 00 	lea    0x4ee1(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f5df:	48 8d 35 5a 57 00 00 	lea    0x575a(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    f5e6:	48 8d 05 f3 4c 00 00 	lea    0x4cf3(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f5ed:	b9 6a 01 00 00       	mov    $0x16a,%ecx
    f5f2:	48 89 c7             	mov    %rax,%rdi
    f5f5:	b8 00 00 00 00       	mov    $0x0,%eax
    f5fa:	e8 51 4a ff ff       	call   4050 <printf@plt>
    f5ff:	0f 0b                	ud2
    f601:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)
    f605:	8b 45 d8             	mov    -0x28(%rbp),%eax
    f608:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    f60b:	0f 82 d9 fd ff ff    	jb     f3ea <json_parse_array+0x237>
    f611:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f615:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f619:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f61d:	48 89 ce             	mov    %rcx,%rsi
    f620:	48 89 c7             	mov    %rax,%rdi
    f623:	e8 06 f0 ff ff       	call   e62e <json_parse_whitespace>
    f628:	85 c0                	test   %eax,%eax
    f62a:	75 29                	jne    f655 <json_parse_array+0x4a2>
    f62c:	48 8d 15 8d 4e 00 00 	lea    0x4e8d(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f633:	48 8d 35 06 43 00 00 	lea    0x4306(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    f63a:	48 8d 05 9f 4c 00 00 	lea    0x4c9f(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f641:	b9 70 01 00 00       	mov    $0x170,%ecx
    f646:	48 89 c7             	mov    %rax,%rdi
    f649:	b8 00 00 00 00       	mov    $0x0,%eax
    f64e:	e8 fd 49 ff ff       	call   4050 <printf@plt>
    f653:	0f 0b                	ud2
    f655:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f659:	48 89 c2             	mov    %rax,%rdx
    f65c:	48 c1 ea 03          	shr    $0x3,%rdx
    f660:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f667:	0f b6 12             	movzbl (%rdx),%edx
    f66a:	84 d2                	test   %dl,%dl
    f66c:	74 08                	je     f676 <json_parse_array+0x4c3>
    f66e:	48 89 c7             	mov    %rax,%rdi
    f671:	e8 4a 4b ff ff       	call   41c0 <__asan_report_load8@plt>
    f676:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f67a:	48 8b 10             	mov    (%rax),%rdx
    f67d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f681:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f685:	48 89 c8             	mov    %rcx,%rax
    f688:	48 89 c2             	mov    %rax,%rdx
    f68b:	48 c1 ea 03          	shr    $0x3,%rdx
    f68f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f696:	0f b6 12             	movzbl (%rdx),%edx
    f699:	84 d2                	test   %dl,%dl
    f69b:	40 0f 95 c6          	setne  %sil
    f69f:	48 89 c7             	mov    %rax,%rdi
    f6a2:	83 e7 07             	and    $0x7,%edi
    f6a5:	40 38 d7             	cmp    %dl,%dil
    f6a8:	0f 9d c2             	setge  %dl
    f6ab:	21 f2                	and    %esi,%edx
    f6ad:	84 d2                	test   %dl,%dl
    f6af:	74 08                	je     f6b9 <json_parse_array+0x506>
    f6b1:	48 89 c7             	mov    %rax,%rdi
    f6b4:	e8 d7 4a ff ff       	call   4190 <__asan_report_load1@plt>
    f6b9:	0f b6 01             	movzbl (%rcx),%eax
    f6bc:	3c 5d                	cmp    $0x5d,%al
    f6be:	74 29                	je     f6e9 <json_parse_array+0x536>
    f6c0:	48 8d 15 f9 4d 00 00 	lea    0x4df9(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f6c7:	48 8d 35 b2 58 00 00 	lea    0x58b2(%rip),%rsi        # 14f80 <_IO_stdin_used+0x1f80>
    f6ce:	48 8d 05 0b 4c 00 00 	lea    0x4c0b(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f6d5:	b9 73 01 00 00       	mov    $0x173,%ecx
    f6da:	48 89 c7             	mov    %rax,%rdi
    f6dd:	b8 00 00 00 00       	mov    $0x0,%eax
    f6e2:	e8 69 49 ff ff       	call   4050 <printf@plt>
    f6e7:	0f 0b                	ud2
    f6e9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6ed:	48 89 c2             	mov    %rax,%rdx
    f6f0:	48 c1 ea 03          	shr    $0x3,%rdx
    f6f4:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f6fb:	0f b6 12             	movzbl (%rdx),%edx
    f6fe:	84 d2                	test   %dl,%dl
    f700:	74 08                	je     f70a <json_parse_array+0x557>
    f702:	48 89 c7             	mov    %rax,%rdi
    f705:	e8 b6 4a ff ff       	call   41c0 <__asan_report_load8@plt>
    f70a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f70e:	48 8b 00             	mov    (%rax),%rax
    f711:	48 8d 50 01          	lea    0x1(%rax),%rdx
    f715:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f719:	48 89 10             	mov    %rdx,(%rax)
    f71c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f720:	48 8b 00             	mov    (%rax),%rax
    f723:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f727:	72 29                	jb     f752 <json_parse_array+0x59f>
    f729:	48 8d 15 90 4d 00 00 	lea    0x4d90(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    f730:	48 8d 35 09 56 00 00 	lea    0x5609(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    f737:	48 8d 05 a2 4b 00 00 	lea    0x4ba2(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    f73e:	b9 75 01 00 00       	mov    $0x175,%ecx
    f743:	48 89 c7             	mov    %rax,%rdi
    f746:	b8 00 00 00 00       	mov    $0x0,%eax
    f74b:	e8 00 49 ff ff       	call   4050 <printf@plt>
    f750:	0f 0b                	ud2
    f752:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f756:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f75a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    f761:	00 00 
    f763:	74 05                	je     f76a <json_parse_array+0x5b7>
    f765:	e8 f6 49 ff ff       	call   4160 <__stack_chk_fail@plt>
    f76a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f76e:	c9                   	leave
    f76f:	c3                   	ret

000000000000f770 <json_parse_value>:
    f770:	55                   	push   %rbp
    f771:	48 89 e5             	mov    %rsp,%rbp
    f774:	41 56                	push   %r14
    f776:	41 55                	push   %r13
    f778:	41 54                	push   %r12
    f77a:	53                   	push   %rbx
    f77b:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    f782:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    f789:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    f790:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    f797:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
    f79e:	4c 8d a5 60 ff ff ff 	lea    -0xa0(%rbp),%r12
    f7a5:	4d 89 e6             	mov    %r12,%r14
    f7a8:	83 3d b1 ba 00 00 00 	cmpl   $0x0,0xbab1(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
    f7af:	74 12                	je     f7c3 <json_parse_value+0x53>
    f7b1:	bf 80 00 00 00       	mov    $0x80,%edi
    f7b6:	e8 25 49 ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
    f7bb:	48 85 c0             	test   %rax,%rax
    f7be:	74 03                	je     f7c3 <json_parse_value+0x53>
    f7c0:	49 89 c4             	mov    %rax,%r12
    f7c3:	49 8d 84 24 80 00 00 	lea    0x80(%r12),%rax
    f7ca:	00 
    f7cb:	48 89 c3             	mov    %rax,%rbx
    f7ce:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
    f7d5:	41 
    f7d6:	48 8d 05 03 58 00 00 	lea    0x5803(%rip),%rax        # 14fe0 <_IO_stdin_used+0x1fe0>
    f7dd:	49 89 44 24 08       	mov    %rax,0x8(%r12)
    f7e2:	48 8d 05 87 ff ff ff 	lea    -0x79(%rip),%rax        # f770 <json_parse_value>
    f7e9:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    f7ee:	4d 89 e5             	mov    %r12,%r13
    f7f1:	49 c1 ed 03          	shr    $0x3,%r13
    f7f5:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
    f7fc:	f1 f1 f1 f1 
    f800:	41 c7 85 04 80 ff 7f 	movl   $0xf1f1,0x7fff8004(%r13)
    f807:	f1 f1 00 00 
    f80b:	41 c7 85 0c 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff800c(%r13)
    f812:	f3 f3 f3 f3 
    f816:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    f81d:	48 89 c2             	mov    %rax,%rdx
    f820:	48 c1 ea 03          	shr    $0x3,%rdx
    f824:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f82b:	0f b6 12             	movzbl (%rdx),%edx
    f82e:	84 d2                	test   %dl,%dl
    f830:	74 08                	je     f83a <json_parse_value+0xca>
    f832:	48 89 c7             	mov    %rax,%rdi
    f835:	e8 86 49 ff ff       	call   41c0 <__asan_report_load8@plt>
    f83a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    f841:	48 8b 10             	mov    (%rax),%rdx
    f844:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    f84b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f84f:	48 89 c8             	mov    %rcx,%rax
    f852:	48 89 c2             	mov    %rax,%rdx
    f855:	48 c1 ea 03          	shr    $0x3,%rdx
    f859:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f860:	0f b6 12             	movzbl (%rdx),%edx
    f863:	84 d2                	test   %dl,%dl
    f865:	40 0f 95 c6          	setne  %sil
    f869:	48 89 c7             	mov    %rax,%rdi
    f86c:	83 e7 07             	and    $0x7,%edi
    f86f:	40 38 d7             	cmp    %dl,%dil
    f872:	0f 9d c2             	setge  %dl
    f875:	21 f2                	and    %esi,%edx
    f877:	84 d2                	test   %dl,%dl
    f879:	74 08                	je     f883 <json_parse_value+0x113>
    f87b:	48 89 c7             	mov    %rax,%rdi
    f87e:	e8 0d 49 ff ff       	call   4190 <__asan_report_load1@plt>
    f883:	0f b6 01             	movzbl (%rcx),%eax
    f886:	0f be c0             	movsbl %al,%eax
    f889:	83 f8 7b             	cmp    $0x7b,%eax
    f88c:	74 76                	je     f904 <json_parse_value+0x194>
    f88e:	83 f8 7b             	cmp    $0x7b,%eax
    f891:	0f 8f 83 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f897:	83 f8 74             	cmp    $0x74,%eax
    f89a:	0f 84 a1 02 00 00    	je     fb41 <json_parse_value+0x3d1>
    f8a0:	83 f8 74             	cmp    $0x74,%eax
    f8a3:	0f 8f 71 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f8a9:	83 f8 6e             	cmp    $0x6e,%eax
    f8ac:	0f 84 09 03 00 00    	je     fbbb <json_parse_value+0x44b>
    f8b2:	83 f8 6e             	cmp    $0x6e,%eax
    f8b5:	0f 8f 5f 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f8bb:	83 f8 66             	cmp    $0x66,%eax
    f8be:	0f 84 ba 02 00 00    	je     fb7e <json_parse_value+0x40e>
    f8c4:	83 f8 66             	cmp    $0x66,%eax
    f8c7:	0f 8f 4d 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f8cd:	83 f8 5b             	cmp    $0x5b,%eax
    f8d0:	74 76                	je     f948 <json_parse_value+0x1d8>
    f8d2:	83 f8 5b             	cmp    $0x5b,%eax
    f8d5:	0f 8f 3f 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f8db:	83 f8 39             	cmp    $0x39,%eax
    f8de:	0f 8f 36 07 00 00    	jg     1001a <json_parse_value+0x8aa>
    f8e4:	83 f8 30             	cmp    $0x30,%eax
    f8e7:	0f 8d 0b 03 00 00    	jge    fbf8 <json_parse_value+0x488>
    f8ed:	83 f8 22             	cmp    $0x22,%eax
    f8f0:	0f 84 96 00 00 00    	je     f98c <json_parse_value+0x21c>
    f8f6:	83 f8 2d             	cmp    $0x2d,%eax
    f8f9:	0f 84 f9 02 00 00    	je     fbf8 <json_parse_value+0x488>
    f8ff:	e9 16 07 00 00       	jmp    1001a <json_parse_value+0x8aa>
    f904:	48 8d 05 f5 56 00 00 	lea    0x56f5(%rip),%rax        # 15000 <_IO_stdin_used+0x2000>
    f90b:	48 89 c7             	mov    %rax,%rdi
    f90e:	b8 00 00 00 00       	mov    $0x0,%eax
    f913:	e8 f0 d8 ff ff       	call   d208 <log_trace>
    f918:	c7 43 b0 00 00 00 00 	movl   $0x0,-0x50(%rbx)
    f91f:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    f926:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
    f92d:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    f934:	48 89 ce             	mov    %rcx,%rsi
    f937:	48 89 c7             	mov    %rax,%rdi
    f93a:	e8 e1 ee ff ff       	call   e820 <json_parse_object>
    f93f:	48 89 43 b8          	mov    %rax,-0x48(%rbx)
    f943:	e9 88 07 00 00       	jmp    100d0 <json_parse_value+0x960>
    f948:	48 8d 05 11 57 00 00 	lea    0x5711(%rip),%rax        # 15060 <_IO_stdin_used+0x2060>
    f94f:	48 89 c7             	mov    %rax,%rdi
    f952:	b8 00 00 00 00       	mov    $0x0,%eax
    f957:	e8 ac d8 ff ff       	call   d208 <log_trace>
    f95c:	c7 43 b0 01 00 00 00 	movl   $0x1,-0x50(%rbx)
    f963:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
    f96a:	48 8b 8d 28 ff ff ff 	mov    -0xd8(%rbp),%rcx
    f971:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    f978:	48 89 ce             	mov    %rcx,%rsi
    f97b:	48 89 c7             	mov    %rax,%rdi
    f97e:	e8 30 f8 ff ff       	call   f1b3 <json_parse_array>
    f983:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
    f987:	e9 44 07 00 00       	jmp    100d0 <json_parse_value+0x960>
    f98c:	48 8d 05 2d 57 00 00 	lea    0x572d(%rip),%rax        # 150c0 <_IO_stdin_used+0x20c0>
    f993:	48 89 c7             	mov    %rax,%rdi
    f996:	b8 00 00 00 00       	mov    $0x0,%eax
    f99b:	e8 68 d8 ff ff       	call   d208 <log_trace>
    f9a0:	c7 43 b0 02 00 00 00 	movl   $0x2,-0x50(%rbx)
    f9a7:	c7 85 48 ff ff ff 00 	movl   $0x0,-0xb8(%rbp)
    f9ae:	00 00 00 
    f9b1:	eb 70                	jmp    fa23 <json_parse_value+0x2b3>
    f9b3:	83 85 48 ff ff ff 01 	addl   $0x1,-0xb8(%rbp)
    f9ba:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    f9c1:	48 89 c2             	mov    %rax,%rdx
    f9c4:	48 c1 ea 03          	shr    $0x3,%rdx
    f9c8:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    f9cf:	0f b6 12             	movzbl (%rdx),%edx
    f9d2:	84 d2                	test   %dl,%dl
    f9d4:	74 08                	je     f9de <json_parse_value+0x26e>
    f9d6:	48 89 c7             	mov    %rax,%rdi
    f9d9:	e8 e2 47 ff ff       	call   41c0 <__asan_report_load8@plt>
    f9de:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    f9e5:	48 8b 10             	mov    (%rax),%rdx
    f9e8:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    f9ee:	48 01 d0             	add    %rdx,%rax
    f9f1:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    f9f8:	72 29                	jb     fa23 <json_parse_value+0x2b3>
    f9fa:	48 8d 15 bf 4a 00 00 	lea    0x4abf(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fa01:	48 8d 35 18 57 00 00 	lea    0x5718(%rip),%rsi        # 15120 <_IO_stdin_used+0x2120>
    fa08:	48 8d 05 d1 48 00 00 	lea    0x48d1(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fa0f:	b9 9b 01 00 00       	mov    $0x19b,%ecx
    fa14:	48 89 c7             	mov    %rax,%rdi
    fa17:	b8 00 00 00 00       	mov    $0x0,%eax
    fa1c:	e8 2f 46 ff ff       	call   4050 <printf@plt>
    fa21:	0f 0b                	ud2
    fa23:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fa2a:	48 89 c2             	mov    %rax,%rdx
    fa2d:	48 c1 ea 03          	shr    $0x3,%rdx
    fa31:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fa38:	0f b6 12             	movzbl (%rdx),%edx
    fa3b:	84 d2                	test   %dl,%dl
    fa3d:	74 08                	je     fa47 <json_parse_value+0x2d7>
    fa3f:	48 89 c7             	mov    %rax,%rdi
    fa42:	e8 79 47 ff ff       	call   41c0 <__asan_report_load8@plt>
    fa47:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fa4e:	48 8b 10             	mov    (%rax),%rdx
    fa51:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    fa57:	48 01 c2             	add    %rax,%rdx
    fa5a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fa61:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fa65:	48 89 c8             	mov    %rcx,%rax
    fa68:	48 89 c2             	mov    %rax,%rdx
    fa6b:	48 c1 ea 03          	shr    $0x3,%rdx
    fa6f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fa76:	0f b6 12             	movzbl (%rdx),%edx
    fa79:	84 d2                	test   %dl,%dl
    fa7b:	40 0f 95 c6          	setne  %sil
    fa7f:	48 89 c7             	mov    %rax,%rdi
    fa82:	83 e7 07             	and    $0x7,%edi
    fa85:	40 38 d7             	cmp    %dl,%dil
    fa88:	0f 9d c2             	setge  %dl
    fa8b:	21 f2                	and    %esi,%edx
    fa8d:	84 d2                	test   %dl,%dl
    fa8f:	74 08                	je     fa99 <json_parse_value+0x329>
    fa91:	48 89 c7             	mov    %rax,%rdi
    fa94:	e8 f7 46 ff ff       	call   4190 <__asan_report_load1@plt>
    fa99:	0f b6 01             	movzbl (%rcx),%eax
    fa9c:	3c 22                	cmp    $0x22,%al
    fa9e:	0f 85 0f ff ff ff    	jne    f9b3 <json_parse_value+0x243>
    faa4:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    faab:	48 8b 10             	mov    (%rax),%rdx
    faae:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fab5:	48 01 d0             	add    %rdx,%rax
    fab8:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    fabf:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    fac5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    facc:	48 89 d6             	mov    %rdx,%rsi
    facf:	48 89 c7             	mov    %rax,%rdi
    fad2:	e8 b1 4a ff ff       	call   4588 <jstring_create_temporary>
    fad7:	48 89 43 c8          	mov    %rax,-0x38(%rbx)
    fadb:	48 89 53 d0          	mov    %rdx,-0x30(%rbx)
    fadf:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fae6:	48 8b 00             	mov    (%rax),%rax
    fae9:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    faef:	83 c2 01             	add    $0x1,%edx
    faf2:	89 d2                	mov    %edx,%edx
    faf4:	48 01 c2             	add    %rax,%rdx
    faf7:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fafe:	48 89 10             	mov    %rdx,(%rax)
    fb01:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fb08:	48 8b 00             	mov    (%rax),%rax
    fb0b:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    fb12:	0f 82 b4 05 00 00    	jb     100cc <json_parse_value+0x95c>
    fb18:	48 8d 15 a1 49 00 00 	lea    0x49a1(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fb1f:	48 8d 35 1a 52 00 00 	lea    0x521a(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    fb26:	48 8d 05 b3 47 00 00 	lea    0x47b3(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fb2d:	b9 a2 01 00 00       	mov    $0x1a2,%ecx
    fb32:	48 89 c7             	mov    %rax,%rdi
    fb35:	b8 00 00 00 00       	mov    $0x0,%eax
    fb3a:	e8 11 45 ff ff       	call   4050 <printf@plt>
    fb3f:	0f 0b                	ud2
    fb41:	48 8d 05 38 56 00 00 	lea    0x5638(%rip),%rax        # 15180 <_IO_stdin_used+0x2180>
    fb48:	48 89 c7             	mov    %rax,%rdi
    fb4b:	b8 00 00 00 00       	mov    $0x0,%eax
    fb50:	e8 37 ce ff ff       	call   c98c <log_error>
    fb55:	48 8d 15 64 49 00 00 	lea    0x4964(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fb5c:	48 8d 35 dd 3d 00 00 	lea    0x3ddd(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    fb63:	48 8d 05 76 47 00 00 	lea    0x4776(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fb6a:	b9 aa 01 00 00       	mov    $0x1aa,%ecx
    fb6f:	48 89 c7             	mov    %rax,%rdi
    fb72:	b8 00 00 00 00       	mov    $0x0,%eax
    fb77:	e8 d4 44 ff ff       	call   4050 <printf@plt>
    fb7c:	0f 0b                	ud2
    fb7e:	48 8d 05 3b 56 00 00 	lea    0x563b(%rip),%rax        # 151c0 <_IO_stdin_used+0x21c0>
    fb85:	48 89 c7             	mov    %rax,%rdi
    fb88:	b8 00 00 00 00       	mov    $0x0,%eax
    fb8d:	e8 fa cd ff ff       	call   c98c <log_error>
    fb92:	48 8d 15 27 49 00 00 	lea    0x4927(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fb99:	48 8d 35 a0 3d 00 00 	lea    0x3da0(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    fba0:	48 8d 05 39 47 00 00 	lea    0x4739(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fba7:	b9 b1 01 00 00       	mov    $0x1b1,%ecx
    fbac:	48 89 c7             	mov    %rax,%rdi
    fbaf:	b8 00 00 00 00       	mov    $0x0,%eax
    fbb4:	e8 97 44 ff ff       	call   4050 <printf@plt>
    fbb9:	0f 0b                	ud2
    fbbb:	48 8d 05 3e 56 00 00 	lea    0x563e(%rip),%rax        # 15200 <_IO_stdin_used+0x2200>
    fbc2:	48 89 c7             	mov    %rax,%rdi
    fbc5:	b8 00 00 00 00       	mov    $0x0,%eax
    fbca:	e8 bd cd ff ff       	call   c98c <log_error>
    fbcf:	48 8d 15 ea 48 00 00 	lea    0x48ea(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fbd6:	48 8d 35 63 3d 00 00 	lea    0x3d63(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
    fbdd:	48 8d 05 fc 46 00 00 	lea    0x46fc(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fbe4:	b9 b8 01 00 00       	mov    $0x1b8,%ecx
    fbe9:	48 89 c7             	mov    %rax,%rdi
    fbec:	b8 00 00 00 00       	mov    $0x0,%eax
    fbf1:	e8 5a 44 ff ff       	call   4050 <printf@plt>
    fbf6:	0f 0b                	ud2
    fbf8:	48 8d 05 41 56 00 00 	lea    0x5641(%rip),%rax        # 15240 <_IO_stdin_used+0x2240>
    fbff:	48 89 c7             	mov    %rax,%rdi
    fc02:	b8 00 00 00 00       	mov    $0x0,%eax
    fc07:	e8 fc d5 ff ff       	call   d208 <log_trace>
    fc0c:	c7 43 b0 03 00 00 00 	movl   $0x3,-0x50(%rbx)
    fc13:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
    fc1a:	00 00 00 
    fc1d:	eb 70                	jmp    fc8f <json_parse_value+0x51f>
    fc1f:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)
    fc26:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fc2d:	48 89 c2             	mov    %rax,%rdx
    fc30:	48 c1 ea 03          	shr    $0x3,%rdx
    fc34:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fc3b:	0f b6 12             	movzbl (%rdx),%edx
    fc3e:	84 d2                	test   %dl,%dl
    fc40:	74 08                	je     fc4a <json_parse_value+0x4da>
    fc42:	48 89 c7             	mov    %rax,%rdi
    fc45:	e8 76 45 ff ff       	call   41c0 <__asan_report_load8@plt>
    fc4a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fc51:	48 8b 10             	mov    (%rax),%rdx
    fc54:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fc5a:	48 01 d0             	add    %rdx,%rax
    fc5d:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    fc64:	72 29                	jb     fc8f <json_parse_value+0x51f>
    fc66:	48 8d 15 53 48 00 00 	lea    0x4853(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fc6d:	48 8d 35 ac 54 00 00 	lea    0x54ac(%rip),%rsi        # 15120 <_IO_stdin_used+0x2120>
    fc74:	48 8d 05 65 46 00 00 	lea    0x4665(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
    fc7b:	b9 d4 01 00 00       	mov    $0x1d4,%ecx
    fc80:	48 89 c7             	mov    %rax,%rdi
    fc83:	b8 00 00 00 00       	mov    $0x0,%eax
    fc88:	e8 c3 43 ff ff       	call   4050 <printf@plt>
    fc8d:	0f 0b                	ud2
    fc8f:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fc96:	48 89 c2             	mov    %rax,%rdx
    fc99:	48 c1 ea 03          	shr    $0x3,%rdx
    fc9d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fca4:	0f b6 12             	movzbl (%rdx),%edx
    fca7:	84 d2                	test   %dl,%dl
    fca9:	74 08                	je     fcb3 <json_parse_value+0x543>
    fcab:	48 89 c7             	mov    %rax,%rdi
    fcae:	e8 0d 45 ff ff       	call   41c0 <__asan_report_load8@plt>
    fcb3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fcba:	48 8b 10             	mov    (%rax),%rdx
    fcbd:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fcc3:	48 01 c2             	add    %rax,%rdx
    fcc6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fccd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fcd1:	48 89 c8             	mov    %rcx,%rax
    fcd4:	48 89 c2             	mov    %rax,%rdx
    fcd7:	48 c1 ea 03          	shr    $0x3,%rdx
    fcdb:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fce2:	0f b6 12             	movzbl (%rdx),%edx
    fce5:	84 d2                	test   %dl,%dl
    fce7:	40 0f 95 c6          	setne  %sil
    fceb:	48 89 c7             	mov    %rax,%rdi
    fcee:	83 e7 07             	and    $0x7,%edi
    fcf1:	40 38 d7             	cmp    %dl,%dil
    fcf4:	0f 9d c2             	setge  %dl
    fcf7:	21 f2                	and    %esi,%edx
    fcf9:	84 d2                	test   %dl,%dl
    fcfb:	74 08                	je     fd05 <json_parse_value+0x595>
    fcfd:	48 89 c7             	mov    %rax,%rdi
    fd00:	e8 8b 44 ff ff       	call   4190 <__asan_report_load1@plt>
    fd05:	0f b6 01             	movzbl (%rcx),%eax
    fd08:	3c 2c                	cmp    $0x2c,%al
    fd0a:	0f 84 2a 02 00 00    	je     ff3a <json_parse_value+0x7ca>
    fd10:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fd17:	48 8b 10             	mov    (%rax),%rdx
    fd1a:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fd20:	48 01 c2             	add    %rax,%rdx
    fd23:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fd2a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fd2e:	48 89 c8             	mov    %rcx,%rax
    fd31:	48 89 c2             	mov    %rax,%rdx
    fd34:	48 c1 ea 03          	shr    $0x3,%rdx
    fd38:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fd3f:	0f b6 12             	movzbl (%rdx),%edx
    fd42:	84 d2                	test   %dl,%dl
    fd44:	40 0f 95 c6          	setne  %sil
    fd48:	48 89 c7             	mov    %rax,%rdi
    fd4b:	83 e7 07             	and    $0x7,%edi
    fd4e:	40 38 d7             	cmp    %dl,%dil
    fd51:	0f 9d c2             	setge  %dl
    fd54:	21 f2                	and    %esi,%edx
    fd56:	84 d2                	test   %dl,%dl
    fd58:	74 08                	je     fd62 <json_parse_value+0x5f2>
    fd5a:	48 89 c7             	mov    %rax,%rdi
    fd5d:	e8 2e 44 ff ff       	call   4190 <__asan_report_load1@plt>
    fd62:	0f b6 01             	movzbl (%rcx),%eax
    fd65:	3c 0a                	cmp    $0xa,%al
    fd67:	0f 84 cd 01 00 00    	je     ff3a <json_parse_value+0x7ca>
    fd6d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fd74:	48 8b 10             	mov    (%rax),%rdx
    fd77:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fd7d:	48 01 c2             	add    %rax,%rdx
    fd80:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fd87:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fd8b:	48 89 c8             	mov    %rcx,%rax
    fd8e:	48 89 c2             	mov    %rax,%rdx
    fd91:	48 c1 ea 03          	shr    $0x3,%rdx
    fd95:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fd9c:	0f b6 12             	movzbl (%rdx),%edx
    fd9f:	84 d2                	test   %dl,%dl
    fda1:	40 0f 95 c6          	setne  %sil
    fda5:	48 89 c7             	mov    %rax,%rdi
    fda8:	83 e7 07             	and    $0x7,%edi
    fdab:	40 38 d7             	cmp    %dl,%dil
    fdae:	0f 9d c2             	setge  %dl
    fdb1:	21 f2                	and    %esi,%edx
    fdb3:	84 d2                	test   %dl,%dl
    fdb5:	74 08                	je     fdbf <json_parse_value+0x64f>
    fdb7:	48 89 c7             	mov    %rax,%rdi
    fdba:	e8 d1 43 ff ff       	call   4190 <__asan_report_load1@plt>
    fdbf:	0f b6 01             	movzbl (%rcx),%eax
    fdc2:	3c 09                	cmp    $0x9,%al
    fdc4:	0f 84 70 01 00 00    	je     ff3a <json_parse_value+0x7ca>
    fdca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fdd1:	48 8b 10             	mov    (%rax),%rdx
    fdd4:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fdda:	48 01 c2             	add    %rax,%rdx
    fddd:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fde4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fde8:	48 89 c8             	mov    %rcx,%rax
    fdeb:	48 89 c2             	mov    %rax,%rdx
    fdee:	48 c1 ea 03          	shr    $0x3,%rdx
    fdf2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fdf9:	0f b6 12             	movzbl (%rdx),%edx
    fdfc:	84 d2                	test   %dl,%dl
    fdfe:	40 0f 95 c6          	setne  %sil
    fe02:	48 89 c7             	mov    %rax,%rdi
    fe05:	83 e7 07             	and    $0x7,%edi
    fe08:	40 38 d7             	cmp    %dl,%dil
    fe0b:	0f 9d c2             	setge  %dl
    fe0e:	21 f2                	and    %esi,%edx
    fe10:	84 d2                	test   %dl,%dl
    fe12:	74 08                	je     fe1c <json_parse_value+0x6ac>
    fe14:	48 89 c7             	mov    %rax,%rdi
    fe17:	e8 74 43 ff ff       	call   4190 <__asan_report_load1@plt>
    fe1c:	0f b6 01             	movzbl (%rcx),%eax
    fe1f:	3c 0d                	cmp    $0xd,%al
    fe21:	0f 84 13 01 00 00    	je     ff3a <json_parse_value+0x7ca>
    fe27:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fe2e:	48 8b 10             	mov    (%rax),%rdx
    fe31:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fe37:	48 01 c2             	add    %rax,%rdx
    fe3a:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fe41:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fe45:	48 89 c8             	mov    %rcx,%rax
    fe48:	48 89 c2             	mov    %rax,%rdx
    fe4b:	48 c1 ea 03          	shr    $0x3,%rdx
    fe4f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    fe56:	0f b6 12             	movzbl (%rdx),%edx
    fe59:	84 d2                	test   %dl,%dl
    fe5b:	40 0f 95 c6          	setne  %sil
    fe5f:	48 89 c7             	mov    %rax,%rdi
    fe62:	83 e7 07             	and    $0x7,%edi
    fe65:	40 38 d7             	cmp    %dl,%dil
    fe68:	0f 9d c2             	setge  %dl
    fe6b:	21 f2                	and    %esi,%edx
    fe6d:	84 d2                	test   %dl,%dl
    fe6f:	74 08                	je     fe79 <json_parse_value+0x709>
    fe71:	48 89 c7             	mov    %rax,%rdi
    fe74:	e8 17 43 ff ff       	call   4190 <__asan_report_load1@plt>
    fe79:	0f b6 01             	movzbl (%rcx),%eax
    fe7c:	3c 7d                	cmp    $0x7d,%al
    fe7e:	0f 84 b6 00 00 00    	je     ff3a <json_parse_value+0x7ca>
    fe84:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fe8b:	48 8b 10             	mov    (%rax),%rdx
    fe8e:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    fe94:	48 01 c2             	add    %rax,%rdx
    fe97:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fe9e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fea2:	48 89 c8             	mov    %rcx,%rax
    fea5:	48 89 c2             	mov    %rax,%rdx
    fea8:	48 c1 ea 03          	shr    $0x3,%rdx
    feac:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    feb3:	0f b6 12             	movzbl (%rdx),%edx
    feb6:	84 d2                	test   %dl,%dl
    feb8:	40 0f 95 c6          	setne  %sil
    febc:	48 89 c7             	mov    %rax,%rdi
    febf:	83 e7 07             	and    $0x7,%edi
    fec2:	40 38 d7             	cmp    %dl,%dil
    fec5:	0f 9d c2             	setge  %dl
    fec8:	21 f2                	and    %esi,%edx
    feca:	84 d2                	test   %dl,%dl
    fecc:	74 08                	je     fed6 <json_parse_value+0x766>
    fece:	48 89 c7             	mov    %rax,%rdi
    fed1:	e8 ba 42 ff ff       	call   4190 <__asan_report_load1@plt>
    fed6:	0f b6 01             	movzbl (%rcx),%eax
    fed9:	3c 5d                	cmp    $0x5d,%al
    fedb:	74 5d                	je     ff3a <json_parse_value+0x7ca>
    fedd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fee4:	48 8b 10             	mov    (%rax),%rdx
    fee7:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    feed:	48 01 c2             	add    %rax,%rdx
    fef0:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    fef7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    fefb:	48 89 c8             	mov    %rcx,%rax
    fefe:	48 89 c2             	mov    %rax,%rdx
    ff01:	48 c1 ea 03          	shr    $0x3,%rdx
    ff05:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ff0c:	0f b6 12             	movzbl (%rdx),%edx
    ff0f:	84 d2                	test   %dl,%dl
    ff11:	40 0f 95 c6          	setne  %sil
    ff15:	48 89 c7             	mov    %rax,%rdi
    ff18:	83 e7 07             	and    $0x7,%edi
    ff1b:	40 38 d7             	cmp    %dl,%dil
    ff1e:	0f 9d c2             	setge  %dl
    ff21:	21 f2                	and    %esi,%edx
    ff23:	84 d2                	test   %dl,%dl
    ff25:	74 08                	je     ff2f <json_parse_value+0x7bf>
    ff27:	48 89 c7             	mov    %rax,%rdi
    ff2a:	e8 61 42 ff ff       	call   4190 <__asan_report_load1@plt>
    ff2f:	0f b6 01             	movzbl (%rcx),%eax
    ff32:	3c 20                	cmp    $0x20,%al
    ff34:	0f 85 e5 fc ff ff    	jne    fc1f <json_parse_value+0x4af>
    ff3a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ff41:	48 89 c2             	mov    %rax,%rdx
    ff44:	48 c1 ea 03          	shr    $0x3,%rdx
    ff48:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ff4f:	0f b6 12             	movzbl (%rdx),%edx
    ff52:	84 d2                	test   %dl,%dl
    ff54:	74 08                	je     ff5e <json_parse_value+0x7ee>
    ff56:	48 89 c7             	mov    %rax,%rdi
    ff59:	e8 62 42 ff ff       	call   41c0 <__asan_report_load8@plt>
    ff5e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ff65:	48 8b 10             	mov    (%rax),%rdx
    ff68:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    ff6f:	48 01 d0             	add    %rdx,%rax
    ff72:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ff79:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx
    ff7f:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ff86:	89 d6                	mov    %edx,%esi
    ff88:	48 89 c7             	mov    %rax,%rdi
    ff8b:	e8 bf 7e ff ff       	call   7e4f <jstring_chars_to_double>
    ff90:	66 48 0f 7e c0       	movq   %xmm0,%rax
    ff95:	48 89 43 d8          	mov    %rax,-0x28(%rbx)
    ff99:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ffa0:	48 89 c2             	mov    %rax,%rdx
    ffa3:	48 c1 ea 03          	shr    $0x3,%rdx
    ffa7:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
    ffae:	0f b6 12             	movzbl (%rdx),%edx
    ffb1:	84 d2                	test   %dl,%dl
    ffb3:	74 08                	je     ffbd <json_parse_value+0x84d>
    ffb5:	48 89 c7             	mov    %rax,%rdi
    ffb8:	e8 03 42 ff ff       	call   41c0 <__asan_report_load8@plt>
    ffbd:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ffc4:	48 8b 10             	mov    (%rax),%rdx
    ffc7:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    ffcd:	48 01 c2             	add    %rax,%rdx
    ffd0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ffd7:	48 89 10             	mov    %rdx,(%rax)
    ffda:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    ffe1:	48 8b 00             	mov    (%rax),%rax
    ffe4:	48 3b 85 28 ff ff ff 	cmp    -0xd8(%rbp),%rax
    ffeb:	0f 82 de 00 00 00    	jb     100cf <json_parse_value+0x95f>
    fff1:	48 8d 15 c8 44 00 00 	lea    0x44c8(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
    fff8:	48 8d 35 41 4d 00 00 	lea    0x4d41(%rip),%rsi        # 14d40 <_IO_stdin_used+0x1d40>
    ffff:	48 8d 05 da 42 00 00 	lea    0x42da(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   10006:	b9 da 01 00 00       	mov    $0x1da,%ecx
   1000b:	48 89 c7             	mov    %rax,%rdi
   1000e:	b8 00 00 00 00       	mov    $0x0,%eax
   10013:	e8 38 40 ff ff       	call   4050 <printf@plt>
   10018:	0f 0b                	ud2
   1001a:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10021:	48 89 c2             	mov    %rax,%rdx
   10024:	48 c1 ea 03          	shr    $0x3,%rdx
   10028:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1002f:	0f b6 12             	movzbl (%rdx),%edx
   10032:	84 d2                	test   %dl,%dl
   10034:	74 08                	je     1003e <json_parse_value+0x8ce>
   10036:	48 89 c7             	mov    %rax,%rdi
   10039:	e8 82 41 ff ff       	call   41c0 <__asan_report_load8@plt>
   1003e:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   10045:	48 8b 10             	mov    (%rax),%rdx
   10048:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1004f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10053:	48 89 c8             	mov    %rcx,%rax
   10056:	48 89 c2             	mov    %rax,%rdx
   10059:	48 c1 ea 03          	shr    $0x3,%rdx
   1005d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10064:	0f b6 12             	movzbl (%rdx),%edx
   10067:	84 d2                	test   %dl,%dl
   10069:	40 0f 95 c6          	setne  %sil
   1006d:	48 89 c7             	mov    %rax,%rdi
   10070:	83 e7 07             	and    $0x7,%edi
   10073:	40 38 d7             	cmp    %dl,%dil
   10076:	0f 9d c2             	setge  %dl
   10079:	21 f2                	and    %esi,%edx
   1007b:	84 d2                	test   %dl,%dl
   1007d:	74 08                	je     10087 <json_parse_value+0x917>
   1007f:	48 89 c7             	mov    %rax,%rdi
   10082:	e8 09 41 ff ff       	call   4190 <__asan_report_load1@plt>
   10087:	0f b6 01             	movzbl (%rcx),%eax
   1008a:	0f be c0             	movsbl %al,%eax
   1008d:	48 8d 15 0c 52 00 00 	lea    0x520c(%rip),%rdx        # 152a0 <_IO_stdin_used+0x22a0>
   10094:	89 c6                	mov    %eax,%esi
   10096:	48 89 d7             	mov    %rdx,%rdi
   10099:	b8 00 00 00 00       	mov    $0x0,%eax
   1009e:	e8 e9 c8 ff ff       	call   c98c <log_error>
   100a3:	48 8d 15 16 44 00 00 	lea    0x4416(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
   100aa:	48 8d 35 8f 38 00 00 	lea    0x388f(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
   100b1:	48 8d 05 28 42 00 00 	lea    0x4228(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   100b8:	b9 e0 01 00 00       	mov    $0x1e0,%ecx
   100bd:	48 89 c7             	mov    %rax,%rdi
   100c0:	b8 00 00 00 00       	mov    $0x0,%eax
   100c5:	e8 86 3f ff ff       	call   4050 <printf@plt>
   100ca:	0f 0b                	ud2
   100cc:	90                   	nop
   100cd:	eb 01                	jmp    100d0 <json_parse_value+0x960>
   100cf:	90                   	nop
   100d0:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   100d7:	48 8b 73 b0          	mov    -0x50(%rbx),%rsi
   100db:	48 8b 7b b8          	mov    -0x48(%rbx),%rdi
   100df:	48 89 30             	mov    %rsi,(%rax)
   100e2:	48 89 78 08          	mov    %rdi,0x8(%rax)
   100e6:	48 8b 73 c0          	mov    -0x40(%rbx),%rsi
   100ea:	48 8b 7b c8          	mov    -0x38(%rbx),%rdi
   100ee:	48 89 70 10          	mov    %rsi,0x10(%rax)
   100f2:	48 89 78 18          	mov    %rdi,0x18(%rax)
   100f6:	48 8b 4b d0          	mov    -0x30(%rbx),%rcx
   100fa:	48 8b 5b d8          	mov    -0x28(%rbx),%rbx
   100fe:	48 89 48 20          	mov    %rcx,0x20(%rax)
   10102:	48 89 58 28          	mov    %rbx,0x28(%rax)
   10106:	4d 39 e6             	cmp    %r12,%r14
   10109:	74 28                	je     10133 <json_parse_value+0x9c3>
   1010b:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
   10112:	45 
   10113:	b8 f5 f5 f5 f5       	mov    $0xf5f5f5f5,%eax
   10118:	66 0f 6e c8          	movd   %eax,%xmm1
   1011c:	66 0f 70 c1 00       	pshufd $0x0,%xmm1,%xmm0
   10121:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
   10128:	7f 
   10129:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   1012e:	c6 00 00             	movb   $0x0,(%rax)
   10131:	eb 16                	jmp    10149 <json_parse_value+0x9d9>
   10133:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
   1013a:	00 00 00 00 
   1013e:	41 c7 85 0c 80 ff 7f 	movl   $0x0,0x7fff800c(%r13)
   10145:	00 00 00 00 
   10149:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   10150:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   10157:	5b                   	pop    %rbx
   10158:	41 5c                	pop    %r12
   1015a:	41 5d                	pop    %r13
   1015c:	41 5e                	pop    %r14
   1015e:	5d                   	pop    %rbp
   1015f:	c3                   	ret

0000000000010160 <json_get_array_value_count>:
   10160:	55                   	push   %rbp
   10161:	48 89 e5             	mov    %rsp,%rbp
   10164:	48 83 ec 40          	sub    $0x40,%rsp
   10168:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1016c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10170:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10174:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
   1017b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   10182:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10186:	48 89 c2             	mov    %rax,%rdx
   10189:	48 c1 ea 03          	shr    $0x3,%rdx
   1018d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10194:	0f b6 12             	movzbl (%rdx),%edx
   10197:	84 d2                	test   %dl,%dl
   10199:	74 08                	je     101a3 <json_get_array_value_count+0x43>
   1019b:	48 89 c7             	mov    %rax,%rdi
   1019e:	e8 1d 40 ff ff       	call   41c0 <__asan_report_load8@plt>
   101a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   101a7:	48 8b 00             	mov    (%rax),%rax
   101aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   101ae:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   101b5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   101bc:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   101c3:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   101c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101cc:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   101d0:	0f 82 fc 01 00 00    	jb     103d2 <json_get_array_value_count+0x272>
   101d6:	48 8d 15 e3 42 00 00 	lea    0x42e3(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
   101dd:	48 8d 35 1c 51 00 00 	lea    0x511c(%rip),%rsi        # 15300 <_IO_stdin_used+0x2300>
   101e4:	48 8d 05 f5 40 00 00 	lea    0x40f5(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   101eb:	b9 fb 01 00 00       	mov    $0x1fb,%ecx
   101f0:	48 89 c7             	mov    %rax,%rdi
   101f3:	b8 00 00 00 00       	mov    $0x0,%eax
   101f8:	e8 53 3e ff ff       	call   4050 <printf@plt>
   101fd:	0f 0b                	ud2
   101ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10203:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10207:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1020b:	48 89 c8             	mov    %rcx,%rax
   1020e:	48 89 c2             	mov    %rax,%rdx
   10211:	48 c1 ea 03          	shr    $0x3,%rdx
   10215:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1021c:	0f b6 12             	movzbl (%rdx),%edx
   1021f:	84 d2                	test   %dl,%dl
   10221:	40 0f 95 c6          	setne  %sil
   10225:	48 89 c7             	mov    %rax,%rdi
   10228:	83 e7 07             	and    $0x7,%edi
   1022b:	40 38 d7             	cmp    %dl,%dil
   1022e:	0f 9d c2             	setge  %dl
   10231:	21 f2                	and    %esi,%edx
   10233:	84 d2                	test   %dl,%dl
   10235:	74 08                	je     1023f <json_get_array_value_count+0xdf>
   10237:	48 89 c7             	mov    %rax,%rdi
   1023a:	e8 51 3f ff ff       	call   4190 <__asan_report_load1@plt>
   1023f:	0f b6 01             	movzbl (%rcx),%eax
   10242:	0f be c0             	movsbl %al,%eax
   10245:	83 f8 7d             	cmp    $0x7d,%eax
   10248:	0f 84 ca 00 00 00    	je     10318 <json_get_array_value_count+0x1b8>
   1024e:	83 f8 7d             	cmp    $0x7d,%eax
   10251:	0f 8f 30 01 00 00    	jg     10387 <json_get_array_value_count+0x227>
   10257:	83 f8 7b             	cmp    $0x7b,%eax
   1025a:	0f 84 97 00 00 00    	je     102f7 <json_get_array_value_count+0x197>
   10260:	83 f8 7b             	cmp    $0x7b,%eax
   10263:	0f 8f 1e 01 00 00    	jg     10387 <json_get_array_value_count+0x227>
   10269:	83 f8 5d             	cmp    $0x5d,%eax
   1026c:	0f 84 de 00 00 00    	je     10350 <json_get_array_value_count+0x1f0>
   10272:	83 f8 5d             	cmp    $0x5d,%eax
   10275:	0f 8f 0c 01 00 00    	jg     10387 <json_get_array_value_count+0x227>
   1027b:	83 f8 5b             	cmp    $0x5b,%eax
   1027e:	0f 84 b3 00 00 00    	je     10337 <json_get_array_value_count+0x1d7>
   10284:	83 f8 5b             	cmp    $0x5b,%eax
   10287:	0f 8f fa 00 00 00    	jg     10387 <json_get_array_value_count+0x227>
   1028d:	83 f8 2c             	cmp    $0x2c,%eax
   10290:	74 48                	je     102da <json_get_array_value_count+0x17a>
   10292:	83 f8 2c             	cmp    $0x2c,%eax
   10295:	0f 8f ec 00 00 00    	jg     10387 <json_get_array_value_count+0x227>
   1029b:	83 f8 22             	cmp    $0x22,%eax
   1029e:	0f 84 cb 00 00 00    	je     1036f <json_get_array_value_count+0x20f>
   102a4:	83 f8 22             	cmp    $0x22,%eax
   102a7:	0f 8f da 00 00 00    	jg     10387 <json_get_array_value_count+0x227>
   102ad:	83 f8 20             	cmp    $0x20,%eax
   102b0:	0f 84 d4 00 00 00    	je     1038a <json_get_array_value_count+0x22a>
   102b6:	83 f8 20             	cmp    $0x20,%eax
   102b9:	0f 8f c8 00 00 00    	jg     10387 <json_get_array_value_count+0x227>
   102bf:	83 f8 0a             	cmp    $0xa,%eax
   102c2:	7f 0e                	jg     102d2 <json_get_array_value_count+0x172>
   102c4:	83 f8 09             	cmp    $0x9,%eax
   102c7:	0f 8d bd 00 00 00    	jge    1038a <json_get_array_value_count+0x22a>
   102cd:	e9 b5 00 00 00       	jmp    10387 <json_get_array_value_count+0x227>
   102d2:	83 f8 0d             	cmp    $0xd,%eax
   102d5:	e9 ad 00 00 00       	jmp    10387 <json_get_array_value_count+0x227>
   102da:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   102de:	0f 85 a9 00 00 00    	jne    1038d <json_get_array_value_count+0x22d>
   102e4:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   102e8:	0f 85 9f 00 00 00    	jne    1038d <json_get_array_value_count+0x22d>
   102ee:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   102f2:	e9 96 00 00 00       	jmp    1038d <json_get_array_value_count+0x22d>
   102f7:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   102fb:	0f 85 8f 00 00 00    	jne    10390 <json_get_array_value_count+0x230>
   10301:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   10305:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   10309:	0f 85 81 00 00 00    	jne    10390 <json_get_array_value_count+0x230>
   1030f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   10316:	eb 78                	jmp    10390 <json_get_array_value_count+0x230>
   10318:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   1031c:	75 75                	jne    10393 <json_get_array_value_count+0x233>
   1031e:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
   10322:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   10326:	75 6b                	jne    10393 <json_get_array_value_count+0x233>
   10328:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
   1032c:	75 65                	jne    10393 <json_get_array_value_count+0x233>
   1032e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10335:	eb 5c                	jmp    10393 <json_get_array_value_count+0x233>
   10337:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   1033b:	75 59                	jne    10396 <json_get_array_value_count+0x236>
   1033d:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   10341:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   10345:	75 4f                	jne    10396 <json_get_array_value_count+0x236>
   10347:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   1034e:	eb 46                	jmp    10396 <json_get_array_value_count+0x236>
   10350:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   10354:	75 43                	jne    10399 <json_get_array_value_count+0x239>
   10356:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
   1035a:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   1035e:	75 39                	jne    10399 <json_get_array_value_count+0x239>
   10360:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
   10364:	75 33                	jne    10399 <json_get_array_value_count+0x239>
   10366:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   1036d:	eb 2a                	jmp    10399 <json_get_array_value_count+0x239>
   1036f:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   10373:	74 09                	je     1037e <json_get_array_value_count+0x21e>
   10375:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   1037c:	eb 1c                	jmp    1039a <json_get_array_value_count+0x23a>
   1037e:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
   10385:	eb 13                	jmp    1039a <json_get_array_value_count+0x23a>
   10387:	90                   	nop
   10388:	eb 10                	jmp    1039a <json_get_array_value_count+0x23a>
   1038a:	90                   	nop
   1038b:	eb 0d                	jmp    1039a <json_get_array_value_count+0x23a>
   1038d:	90                   	nop
   1038e:	eb 0a                	jmp    1039a <json_get_array_value_count+0x23a>
   10390:	90                   	nop
   10391:	eb 07                	jmp    1039a <json_get_array_value_count+0x23a>
   10393:	90                   	nop
   10394:	eb 04                	jmp    1039a <json_get_array_value_count+0x23a>
   10396:	90                   	nop
   10397:	eb 01                	jmp    1039a <json_get_array_value_count+0x23a>
   10399:	90                   	nop
   1039a:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   1039f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103a3:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   103a7:	72 29                	jb     103d2 <json_get_array_value_count+0x272>
   103a9:	48 8d 15 10 41 00 00 	lea    0x4110(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
   103b0:	48 8d 35 49 4f 00 00 	lea    0x4f49(%rip),%rsi        # 15300 <_IO_stdin_used+0x2300>
   103b7:	48 8d 05 22 3f 00 00 	lea    0x3f22(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   103be:	b9 58 02 00 00       	mov    $0x258,%ecx
   103c3:	48 89 c7             	mov    %rax,%rdi
   103c6:	b8 00 00 00 00       	mov    $0x0,%eax
   103cb:	e8 80 3c ff ff       	call   4050 <printf@plt>
   103d0:	0f 0b                	ud2
   103d2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   103d6:	0f 85 23 fe ff ff    	jne    101ff <json_get_array_value_count+0x9f>
   103dc:	8b 45 f4             	mov    -0xc(%rbp),%eax
   103df:	c9                   	leave
   103e0:	c3                   	ret

00000000000103e1 <json_get_object_value_count>:
   103e1:	55                   	push   %rbp
   103e2:	48 89 e5             	mov    %rsp,%rbp
   103e5:	48 83 ec 40          	sub    $0x40,%rsp
   103e9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   103ed:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   103f1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   103f5:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
   103fc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
   10403:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10407:	48 89 c2             	mov    %rax,%rdx
   1040a:	48 c1 ea 03          	shr    $0x3,%rdx
   1040e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10415:	0f b6 12             	movzbl (%rdx),%edx
   10418:	84 d2                	test   %dl,%dl
   1041a:	74 08                	je     10424 <json_get_object_value_count+0x43>
   1041c:	48 89 c7             	mov    %rax,%rdi
   1041f:	e8 9c 3d ff ff       	call   41c0 <__asan_report_load8@plt>
   10424:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10428:	48 8b 00             	mov    (%rax),%rax
   1042b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1042f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10436:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   1043d:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   10444:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   10449:	e9 d3 01 00 00       	jmp    10621 <json_get_object_value_count+0x240>
   1044e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10456:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1045a:	48 89 c8             	mov    %rcx,%rax
   1045d:	48 89 c2             	mov    %rax,%rdx
   10460:	48 c1 ea 03          	shr    $0x3,%rdx
   10464:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1046b:	0f b6 12             	movzbl (%rdx),%edx
   1046e:	84 d2                	test   %dl,%dl
   10470:	40 0f 95 c6          	setne  %sil
   10474:	48 89 c7             	mov    %rax,%rdi
   10477:	83 e7 07             	and    $0x7,%edi
   1047a:	40 38 d7             	cmp    %dl,%dil
   1047d:	0f 9d c2             	setge  %dl
   10480:	21 f2                	and    %esi,%edx
   10482:	84 d2                	test   %dl,%dl
   10484:	74 08                	je     1048e <json_get_object_value_count+0xad>
   10486:	48 89 c7             	mov    %rax,%rdi
   10489:	e8 02 3d ff ff       	call   4190 <__asan_report_load1@plt>
   1048e:	0f b6 01             	movzbl (%rcx),%eax
   10491:	0f be c0             	movsbl %al,%eax
   10494:	83 f8 7d             	cmp    $0x7d,%eax
   10497:	0f 84 ca 00 00 00    	je     10567 <json_get_object_value_count+0x186>
   1049d:	83 f8 7d             	cmp    $0x7d,%eax
   104a0:	0f 8f 30 01 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104a6:	83 f8 7b             	cmp    $0x7b,%eax
   104a9:	0f 84 97 00 00 00    	je     10546 <json_get_object_value_count+0x165>
   104af:	83 f8 7b             	cmp    $0x7b,%eax
   104b2:	0f 8f 1e 01 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104b8:	83 f8 5d             	cmp    $0x5d,%eax
   104bb:	0f 84 de 00 00 00    	je     1059f <json_get_object_value_count+0x1be>
   104c1:	83 f8 5d             	cmp    $0x5d,%eax
   104c4:	0f 8f 0c 01 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104ca:	83 f8 5b             	cmp    $0x5b,%eax
   104cd:	0f 84 b3 00 00 00    	je     10586 <json_get_object_value_count+0x1a5>
   104d3:	83 f8 5b             	cmp    $0x5b,%eax
   104d6:	0f 8f fa 00 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104dc:	83 f8 2c             	cmp    $0x2c,%eax
   104df:	74 48                	je     10529 <json_get_object_value_count+0x148>
   104e1:	83 f8 2c             	cmp    $0x2c,%eax
   104e4:	0f 8f ec 00 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104ea:	83 f8 22             	cmp    $0x22,%eax
   104ed:	0f 84 cb 00 00 00    	je     105be <json_get_object_value_count+0x1dd>
   104f3:	83 f8 22             	cmp    $0x22,%eax
   104f6:	0f 8f da 00 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   104fc:	83 f8 20             	cmp    $0x20,%eax
   104ff:	0f 84 d4 00 00 00    	je     105d9 <json_get_object_value_count+0x1f8>
   10505:	83 f8 20             	cmp    $0x20,%eax
   10508:	0f 8f c8 00 00 00    	jg     105d6 <json_get_object_value_count+0x1f5>
   1050e:	83 f8 0a             	cmp    $0xa,%eax
   10511:	7f 0e                	jg     10521 <json_get_object_value_count+0x140>
   10513:	83 f8 09             	cmp    $0x9,%eax
   10516:	0f 8d bd 00 00 00    	jge    105d9 <json_get_object_value_count+0x1f8>
   1051c:	e9 b5 00 00 00       	jmp    105d6 <json_get_object_value_count+0x1f5>
   10521:	83 f8 0d             	cmp    $0xd,%eax
   10524:	e9 ad 00 00 00       	jmp    105d6 <json_get_object_value_count+0x1f5>
   10529:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   1052d:	0f 85 a9 00 00 00    	jne    105dc <json_get_object_value_count+0x1fb>
   10533:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   10537:	0f 85 9f 00 00 00    	jne    105dc <json_get_object_value_count+0x1fb>
   1053d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   10541:	e9 96 00 00 00       	jmp    105dc <json_get_object_value_count+0x1fb>
   10546:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   1054a:	0f 85 8f 00 00 00    	jne    105df <json_get_object_value_count+0x1fe>
   10550:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   10554:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   10558:	0f 85 81 00 00 00    	jne    105df <json_get_object_value_count+0x1fe>
   1055e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   10565:	eb 78                	jmp    105df <json_get_object_value_count+0x1fe>
   10567:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   1056b:	75 75                	jne    105e2 <json_get_object_value_count+0x201>
   1056d:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)
   10571:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
   10575:	75 6b                	jne    105e2 <json_get_object_value_count+0x201>
   10577:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   1057b:	75 65                	jne    105e2 <json_get_object_value_count+0x201>
   1057d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   10584:	eb 5c                	jmp    105e2 <json_get_object_value_count+0x201>
   10586:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   1058a:	75 59                	jne    105e5 <json_get_object_value_count+0x204>
   1058c:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
   10590:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   10594:	75 4f                	jne    105e5 <json_get_object_value_count+0x204>
   10596:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
   1059d:	eb 46                	jmp    105e5 <json_get_object_value_count+0x204>
   1059f:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   105a3:	75 43                	jne    105e8 <json_get_object_value_count+0x207>
   105a5:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
   105a9:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)
   105ad:	75 39                	jne    105e8 <json_get_object_value_count+0x207>
   105af:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   105b3:	75 33                	jne    105e8 <json_get_object_value_count+0x207>
   105b5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
   105bc:	eb 2a                	jmp    105e8 <json_get_object_value_count+0x207>
   105be:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   105c2:	74 09                	je     105cd <json_get_object_value_count+0x1ec>
   105c4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   105cb:	eb 1c                	jmp    105e9 <json_get_object_value_count+0x208>
   105cd:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
   105d4:	eb 13                	jmp    105e9 <json_get_object_value_count+0x208>
   105d6:	90                   	nop
   105d7:	eb 10                	jmp    105e9 <json_get_object_value_count+0x208>
   105d9:	90                   	nop
   105da:	eb 0d                	jmp    105e9 <json_get_object_value_count+0x208>
   105dc:	90                   	nop
   105dd:	eb 0a                	jmp    105e9 <json_get_object_value_count+0x208>
   105df:	90                   	nop
   105e0:	eb 07                	jmp    105e9 <json_get_object_value_count+0x208>
   105e2:	90                   	nop
   105e3:	eb 04                	jmp    105e9 <json_get_object_value_count+0x208>
   105e5:	90                   	nop
   105e6:	eb 01                	jmp    105e9 <json_get_object_value_count+0x208>
   105e8:	90                   	nop
   105e9:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   105ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105f2:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   105f6:	72 29                	jb     10621 <json_get_object_value_count+0x240>
   105f8:	48 8d 15 c1 3e 00 00 	lea    0x3ec1(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
   105ff:	48 8d 35 fa 4c 00 00 	lea    0x4cfa(%rip),%rsi        # 15300 <_IO_stdin_used+0x2300>
   10606:	48 8d 05 d3 3c 00 00 	lea    0x3cd3(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   1060d:	b9 ce 02 00 00       	mov    $0x2ce,%ecx
   10612:	48 89 c7             	mov    %rax,%rdi
   10615:	b8 00 00 00 00       	mov    $0x0,%eax
   1061a:	e8 31 3a ff ff       	call   4050 <printf@plt>
   1061f:	0f 0b                	ud2
   10621:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   10625:	0f 85 23 fe ff ff    	jne    1044e <json_get_object_value_count+0x6d>
   1062b:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1062e:	c9                   	leave
   1062f:	c3                   	ret

0000000000010630 <debug_print_json_value>:
   10630:	55                   	push   %rbp
   10631:	48 89 e5             	mov    %rsp,%rbp
   10634:	41 56                	push   %r14
   10636:	41 55                	push   %r13
   10638:	41 54                	push   %r12
   1063a:	53                   	push   %rbx
   1063b:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   10642:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
   10649:	48 8d 9d 60 ff ff ff 	lea    -0xa0(%rbp),%rbx
   10650:	49 89 de             	mov    %rbx,%r14
   10653:	83 3d 06 ac 00 00 00 	cmpl   $0x0,0xac06(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
   1065a:	74 12                	je     1066e <debug_print_json_value+0x3e>
   1065c:	bf 80 00 00 00       	mov    $0x80,%edi
   10661:	e8 7a 3a ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
   10666:	48 85 c0             	test   %rax,%rax
   10669:	74 03                	je     1066e <debug_print_json_value+0x3e>
   1066b:	48 89 c3             	mov    %rax,%rbx
   1066e:	48 8d 83 80 00 00 00 	lea    0x80(%rbx),%rax
   10675:	49 89 c4             	mov    %rax,%r12
   10678:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
   1067f:	48 8d 05 da 4c 00 00 	lea    0x4cda(%rip),%rax        # 15360 <_IO_stdin_used+0x2360>
   10686:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1068a:	48 8d 05 9f ff ff ff 	lea    -0x61(%rip),%rax        # 10630 <debug_print_json_value>
   10691:	48 89 43 10          	mov    %rax,0x10(%rbx)
   10695:	49 89 dd             	mov    %rbx,%r13
   10698:	49 c1 ed 03          	shr    $0x3,%r13
   1069c:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
   106a3:	f1 f1 f1 f1 
   106a7:	41 c7 85 04 80 ff 7f 	movl   $0xf2f20000,0x7fff8004(%r13)
   106ae:	00 00 f2 f2 
   106b2:	41 c7 85 08 80 ff 7f 	movl   $0xf3000000,0x7fff8008(%r13)
   106b9:	00 00 00 f3 
   106bd:	41 c7 85 0c 80 ff 7f 	movl   $0xf3f3f3f3,0x7fff800c(%r13)
   106c4:	f3 f3 f3 f3 
   106c8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   106cf:	48 89 c2             	mov    %rax,%rdx
   106d2:	48 89 d0             	mov    %rdx,%rax
   106d5:	48 c1 e8 03          	shr    $0x3,%rax
   106d9:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   106df:	0f b6 00             	movzbl (%rax),%eax
   106e2:	84 c0                	test   %al,%al
   106e4:	0f 95 c1             	setne  %cl
   106e7:	3c 03                	cmp    $0x3,%al
   106e9:	0f 9e c0             	setle  %al
   106ec:	21 c8                	and    %ecx,%eax
   106ee:	84 c0                	test   %al,%al
   106f0:	74 08                	je     106fa <debug_print_json_value+0xca>
   106f2:	48 89 d7             	mov    %rdx,%rdi
   106f5:	e8 f6 39 ff ff       	call   40f0 <__asan_report_load4@plt>
   106fa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10701:	8b 00                	mov    (%rax),%eax
   10703:	83 f8 06             	cmp    $0x6,%eax
   10706:	0f 84 ad 03 00 00    	je     10ab9 <debug_print_json_value+0x489>
   1070c:	83 f8 06             	cmp    $0x6,%eax
   1070f:	0f 87 ba 03 00 00    	ja     10acf <debug_print_json_value+0x49f>
   10715:	83 f8 05             	cmp    $0x5,%eax
   10718:	0f 84 85 03 00 00    	je     10aa3 <debug_print_json_value+0x473>
   1071e:	83 f8 05             	cmp    $0x5,%eax
   10721:	0f 87 a8 03 00 00    	ja     10acf <debug_print_json_value+0x49f>
   10727:	83 f8 04             	cmp    $0x4,%eax
   1072a:	0f 84 5d 03 00 00    	je     10a8d <debug_print_json_value+0x45d>
   10730:	83 f8 04             	cmp    $0x4,%eax
   10733:	0f 87 96 03 00 00    	ja     10acf <debug_print_json_value+0x49f>
   10739:	83 f8 03             	cmp    $0x3,%eax
   1073c:	0f 84 fd 02 00 00    	je     10a3f <debug_print_json_value+0x40f>
   10742:	83 f8 03             	cmp    $0x3,%eax
   10745:	0f 87 84 03 00 00    	ja     10acf <debug_print_json_value+0x49f>
   1074b:	83 f8 02             	cmp    $0x2,%eax
   1074e:	0f 84 9c 02 00 00    	je     109f0 <debug_print_json_value+0x3c0>
   10754:	83 f8 02             	cmp    $0x2,%eax
   10757:	0f 87 72 03 00 00    	ja     10acf <debug_print_json_value+0x49f>
   1075d:	85 c0                	test   %eax,%eax
   1075f:	74 0e                	je     1076f <debug_print_json_value+0x13f>
   10761:	83 f8 01             	cmp    $0x1,%eax
   10764:	0f 84 97 01 00 00    	je     10901 <debug_print_json_value+0x2d1>
   1076a:	e9 60 03 00 00       	jmp    10acf <debug_print_json_value+0x49f>
   1076f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10776:	48 83 c0 08          	add    $0x8,%rax
   1077a:	48 89 c2             	mov    %rax,%rdx
   1077d:	48 c1 ea 03          	shr    $0x3,%rdx
   10781:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10788:	0f b6 12             	movzbl (%rdx),%edx
   1078b:	84 d2                	test   %dl,%dl
   1078d:	74 08                	je     10797 <debug_print_json_value+0x167>
   1078f:	48 89 c7             	mov    %rax,%rdi
   10792:	e8 29 3a ff ff       	call   41c0 <__asan_report_load8@plt>
   10797:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   1079e:	48 8b 40 08          	mov    0x8(%rax),%rax
   107a2:	48 89 c2             	mov    %rax,%rdx
   107a5:	48 89 d1             	mov    %rdx,%rcx
   107a8:	48 c1 e9 03          	shr    $0x3,%rcx
   107ac:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   107b3:	0f b6 09             	movzbl (%rcx),%ecx
   107b6:	84 c9                	test   %cl,%cl
   107b8:	40 0f 95 c6          	setne  %sil
   107bc:	84 c9                	test   %cl,%cl
   107be:	0f 9e c1             	setle  %cl
   107c1:	21 ce                	and    %ecx,%esi
   107c3:	89 f7                	mov    %esi,%edi
   107c5:	b9 18 00 00 00       	mov    $0x18,%ecx
   107ca:	48 83 e9 01          	sub    $0x1,%rcx
   107ce:	48 8d 34 0a          	lea    (%rdx,%rcx,1),%rsi
   107d2:	48 89 f1             	mov    %rsi,%rcx
   107d5:	48 c1 e9 03          	shr    $0x3,%rcx
   107d9:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   107e0:	0f b6 09             	movzbl (%rcx),%ecx
   107e3:	84 c9                	test   %cl,%cl
   107e5:	41 0f 95 c0          	setne  %r8b
   107e9:	83 e6 07             	and    $0x7,%esi
   107ec:	40 38 ce             	cmp    %cl,%sil
   107ef:	0f 9d c1             	setge  %cl
   107f2:	44 21 c1             	and    %r8d,%ecx
   107f5:	09 f9                	or     %edi,%ecx
   107f7:	84 c9                	test   %cl,%cl
   107f9:	74 0d                	je     10808 <debug_print_json_value+0x1d8>
   107fb:	be 18 00 00 00       	mov    $0x18,%esi
   10800:	48 89 d7             	mov    %rdx,%rdi
   10803:	e8 88 38 ff ff       	call   4090 <__asan_report_load_n@plt>
   10808:	48 8b 30             	mov    (%rax),%rsi
   1080b:	48 8b 78 08          	mov    0x8(%rax),%rdi
   1080f:	49 89 74 24 c0       	mov    %rsi,-0x40(%r12)
   10814:	49 89 7c 24 c8       	mov    %rdi,-0x38(%r12)
   10819:	48 8b 40 10          	mov    0x10(%rax),%rax
   1081d:	49 89 44 24 d0       	mov    %rax,-0x30(%r12)
   10822:	48 8d 05 77 4b 00 00 	lea    0x4b77(%rip),%rax        # 153a0 <_IO_stdin_used+0x23a0>
   10829:	48 89 c7             	mov    %rax,%rdi
   1082c:	e8 7f 38 ff ff       	call   40b0 <puts@plt>
   10831:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
   10838:	00 00 00 
   1083b:	e9 9c 00 00 00       	jmp    108dc <debug_print_json_value+0x2ac>
   10840:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
   10845:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   1084b:	48 c1 e2 04          	shl    $0x4,%rdx
   1084f:	48 01 d0             	add    %rdx,%rax
   10852:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10856:	48 89 d1             	mov    %rdx,%rcx
   10859:	48 c1 e9 03          	shr    $0x3,%rcx
   1085d:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   10864:	0f b6 09             	movzbl (%rcx),%ecx
   10867:	84 c9                	test   %cl,%cl
   10869:	74 08                	je     10873 <debug_print_json_value+0x243>
   1086b:	48 89 d7             	mov    %rdx,%rdi
   1086e:	e8 4d 39 ff ff       	call   41c0 <__asan_report_load8@plt>
   10873:	48 8b 40 08          	mov    0x8(%rax),%rax
   10877:	48 8d 15 62 4b 00 00 	lea    0x4b62(%rip),%rdx        # 153e0 <_IO_stdin_used+0x23e0>
   1087e:	48 89 c6             	mov    %rax,%rsi
   10881:	48 89 d7             	mov    %rdx,%rdi
   10884:	b8 00 00 00 00       	mov    $0x0,%eax
   10889:	e8 c2 37 ff ff       	call   4050 <printf@plt>
   1088e:	49 8b 4c 24 c8       	mov    -0x38(%r12),%rcx
   10893:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
   10899:	48 89 d0             	mov    %rdx,%rax
   1089c:	48 01 c0             	add    %rax,%rax
   1089f:	48 01 d0             	add    %rdx,%rax
   108a2:	48 c1 e0 04          	shl    $0x4,%rax
   108a6:	48 01 c8             	add    %rcx,%rax
   108a9:	48 89 c7             	mov    %rax,%rdi
   108ac:	e8 7f fd ff ff       	call   10630 <debug_print_json_value>
   108b1:	41 8b 44 24 d0       	mov    -0x30(%r12),%eax
   108b6:	83 e8 01             	sub    $0x1,%eax
   108b9:	39 85 58 ff ff ff    	cmp    %eax,-0xa8(%rbp)
   108bf:	74 14                	je     108d5 <debug_print_json_value+0x2a5>
   108c1:	48 8d 05 58 4b 00 00 	lea    0x4b58(%rip),%rax        # 15420 <_IO_stdin_used+0x2420>
   108c8:	48 89 c7             	mov    %rax,%rdi
   108cb:	b8 00 00 00 00       	mov    $0x0,%eax
   108d0:	e8 7b 37 ff ff       	call   4050 <printf@plt>
   108d5:	83 85 58 ff ff ff 01 	addl   $0x1,-0xa8(%rbp)
   108dc:	41 8b 44 24 d0       	mov    -0x30(%r12),%eax
   108e1:	39 85 58 ff ff ff    	cmp    %eax,-0xa8(%rbp)
   108e7:	0f 82 53 ff ff ff    	jb     10840 <debug_print_json_value+0x210>
   108ed:	48 8d 05 6c 4b 00 00 	lea    0x4b6c(%rip),%rax        # 15460 <_IO_stdin_used+0x2460>
   108f4:	48 89 c7             	mov    %rax,%rdi
   108f7:	e8 b4 37 ff ff       	call   40b0 <puts@plt>
   108fc:	e9 f7 01 00 00       	jmp    10af8 <debug_print_json_value+0x4c8>
   10901:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10908:	48 83 c0 10          	add    $0x10,%rax
   1090c:	48 89 c2             	mov    %rax,%rdx
   1090f:	48 c1 ea 03          	shr    $0x3,%rdx
   10913:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1091a:	0f b6 12             	movzbl (%rdx),%edx
   1091d:	84 d2                	test   %dl,%dl
   1091f:	74 08                	je     10929 <debug_print_json_value+0x2f9>
   10921:	48 89 c7             	mov    %rax,%rdi
   10924:	e8 97 38 ff ff       	call   41c0 <__asan_report_load8@plt>
   10929:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10930:	48 8b 40 10          	mov    0x10(%rax),%rax
   10934:	48 89 c2             	mov    %rax,%rdx
   10937:	48 89 d1             	mov    %rdx,%rcx
   1093a:	48 c1 e9 03          	shr    $0x3,%rcx
   1093e:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   10945:	0f b7 09             	movzwl (%rcx),%ecx
   10948:	66 85 c9             	test   %cx,%cx
   1094b:	74 08                	je     10955 <debug_print_json_value+0x325>
   1094d:	48 89 d7             	mov    %rdx,%rdi
   10950:	e8 4b 38 ff ff       	call   41a0 <__asan_report_load16@plt>
   10955:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10959:	48 8b 00             	mov    (%rax),%rax
   1095c:	49 89 44 24 a0       	mov    %rax,-0x60(%r12)
   10961:	49 89 54 24 a8       	mov    %rdx,-0x58(%r12)
   10966:	48 8d 05 33 4b 00 00 	lea    0x4b33(%rip),%rax        # 154a0 <_IO_stdin_used+0x24a0>
   1096d:	48 89 c7             	mov    %rax,%rdi
   10970:	e8 3b 37 ff ff       	call   40b0 <puts@plt>
   10975:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   1097c:	00 00 00 
   1097f:	eb 4e                	jmp    109cf <debug_print_json_value+0x39f>
   10981:	49 8b 4c 24 a0       	mov    -0x60(%r12),%rcx
   10986:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   1098c:	48 89 d0             	mov    %rdx,%rax
   1098f:	48 01 c0             	add    %rax,%rax
   10992:	48 01 d0             	add    %rdx,%rax
   10995:	48 c1 e0 04          	shl    $0x4,%rax
   10999:	48 01 c8             	add    %rcx,%rax
   1099c:	48 89 c7             	mov    %rax,%rdi
   1099f:	e8 8c fc ff ff       	call   10630 <debug_print_json_value>
   109a4:	41 8b 44 24 a8       	mov    -0x58(%r12),%eax
   109a9:	83 e8 01             	sub    $0x1,%eax
   109ac:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%rbp)
   109b2:	74 14                	je     109c8 <debug_print_json_value+0x398>
   109b4:	48 8d 05 65 4a 00 00 	lea    0x4a65(%rip),%rax        # 15420 <_IO_stdin_used+0x2420>
   109bb:	48 89 c7             	mov    %rax,%rdi
   109be:	b8 00 00 00 00       	mov    $0x0,%eax
   109c3:	e8 88 36 ff ff       	call   4050 <printf@plt>
   109c8:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   109cf:	41 8b 44 24 a8       	mov    -0x58(%r12),%eax
   109d4:	39 85 5c ff ff ff    	cmp    %eax,-0xa4(%rbp)
   109da:	72 a5                	jb     10981 <debug_print_json_value+0x351>
   109dc:	48 8d 05 fd 4a 00 00 	lea    0x4afd(%rip),%rax        # 154e0 <_IO_stdin_used+0x24e0>
   109e3:	48 89 c7             	mov    %rax,%rdi
   109e6:	e8 c5 36 ff ff       	call   40b0 <puts@plt>
   109eb:	e9 08 01 00 00       	jmp    10af8 <debug_print_json_value+0x4c8>
   109f0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   109f7:	48 83 c0 20          	add    $0x20,%rax
   109fb:	48 89 c2             	mov    %rax,%rdx
   109fe:	48 c1 ea 03          	shr    $0x3,%rdx
   10a02:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10a09:	0f b6 12             	movzbl (%rdx),%edx
   10a0c:	84 d2                	test   %dl,%dl
   10a0e:	74 08                	je     10a18 <debug_print_json_value+0x3e8>
   10a10:	48 89 c7             	mov    %rax,%rdi
   10a13:	e8 a8 37 ff ff       	call   41c0 <__asan_report_load8@plt>
   10a18:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10a1f:	48 8b 40 20          	mov    0x20(%rax),%rax
   10a23:	48 8d 15 f6 4a 00 00 	lea    0x4af6(%rip),%rdx        # 15520 <_IO_stdin_used+0x2520>
   10a2a:	48 89 c6             	mov    %rax,%rsi
   10a2d:	48 89 d7             	mov    %rdx,%rdi
   10a30:	b8 00 00 00 00       	mov    $0x0,%eax
   10a35:	e8 16 36 ff ff       	call   4050 <printf@plt>
   10a3a:	e9 b9 00 00 00       	jmp    10af8 <debug_print_json_value+0x4c8>
   10a3f:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10a46:	48 83 c0 28          	add    $0x28,%rax
   10a4a:	48 89 c2             	mov    %rax,%rdx
   10a4d:	48 c1 ea 03          	shr    $0x3,%rdx
   10a51:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10a58:	0f b6 12             	movzbl (%rdx),%edx
   10a5b:	84 d2                	test   %dl,%dl
   10a5d:	74 08                	je     10a67 <debug_print_json_value+0x437>
   10a5f:	48 89 c7             	mov    %rax,%rdi
   10a62:	e8 59 37 ff ff       	call   41c0 <__asan_report_load8@plt>
   10a67:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
   10a6e:	48 8b 40 28          	mov    0x28(%rax),%rax
   10a72:	48 8d 15 e7 4a 00 00 	lea    0x4ae7(%rip),%rdx        # 15560 <_IO_stdin_used+0x2560>
   10a79:	66 48 0f 6e c0       	movq   %rax,%xmm0
   10a7e:	48 89 d7             	mov    %rdx,%rdi
   10a81:	b8 01 00 00 00       	mov    $0x1,%eax
   10a86:	e8 c5 35 ff ff       	call   4050 <printf@plt>
   10a8b:	eb 6b                	jmp    10af8 <debug_print_json_value+0x4c8>
   10a8d:	48 8d 05 0c 4b 00 00 	lea    0x4b0c(%rip),%rax        # 155a0 <_IO_stdin_used+0x25a0>
   10a94:	48 89 c7             	mov    %rax,%rdi
   10a97:	b8 00 00 00 00       	mov    $0x0,%eax
   10a9c:	e8 af 35 ff ff       	call   4050 <printf@plt>
   10aa1:	eb 55                	jmp    10af8 <debug_print_json_value+0x4c8>
   10aa3:	48 8d 05 36 4b 00 00 	lea    0x4b36(%rip),%rax        # 155e0 <_IO_stdin_used+0x25e0>
   10aaa:	48 89 c7             	mov    %rax,%rdi
   10aad:	b8 00 00 00 00       	mov    $0x0,%eax
   10ab2:	e8 99 35 ff ff       	call   4050 <printf@plt>
   10ab7:	eb 3f                	jmp    10af8 <debug_print_json_value+0x4c8>
   10ab9:	48 8d 05 60 4b 00 00 	lea    0x4b60(%rip),%rax        # 15620 <_IO_stdin_used+0x2620>
   10ac0:	48 89 c7             	mov    %rax,%rdi
   10ac3:	b8 00 00 00 00       	mov    $0x0,%eax
   10ac8:	e8 83 35 ff ff       	call   4050 <printf@plt>
   10acd:	eb 29                	jmp    10af8 <debug_print_json_value+0x4c8>
   10acf:	48 8d 15 ea 39 00 00 	lea    0x39ea(%rip),%rdx        # 144c0 <_IO_stdin_used+0x14c0>
   10ad6:	48 8d 35 63 2e 00 00 	lea    0x2e63(%rip),%rsi        # 13940 <_IO_stdin_used+0x940>
   10add:	48 8d 05 fc 37 00 00 	lea    0x37fc(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   10ae4:	b9 0d 03 00 00       	mov    $0x30d,%ecx
   10ae9:	48 89 c7             	mov    %rax,%rdi
   10aec:	b8 00 00 00 00       	mov    $0x0,%eax
   10af1:	e8 5a 35 ff ff       	call   4050 <printf@plt>
   10af6:	0f 0b                	ud2
   10af8:	90                   	nop
   10af9:	49 39 de             	cmp    %rbx,%r14
   10afc:	74 26                	je     10b24 <debug_print_json_value+0x4f4>
   10afe:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
   10b05:	b8 f5 f5 f5 f5       	mov    $0xf5f5f5f5,%eax
   10b0a:	66 0f 6e c8          	movd   %eax,%xmm1
   10b0e:	66 0f 70 c1 00       	pshufd $0x0,%xmm1,%xmm0
   10b13:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
   10b1a:	7f 
   10b1b:	48 8b 43 78          	mov    0x78(%rbx),%rax
   10b1f:	c6 00 00             	movb   $0x0,(%rax)
   10b22:	eb 0c                	jmp    10b30 <debug_print_json_value+0x500>
   10b24:	66 0f ef c0          	pxor   %xmm0,%xmm0
   10b28:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
   10b2f:	7f 
   10b30:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
   10b37:	5b                   	pop    %rbx
   10b38:	41 5c                	pop    %r12
   10b3a:	41 5d                	pop    %r13
   10b3c:	41 5e                	pop    %r14
   10b3e:	5d                   	pop    %rbp
   10b3f:	c3                   	ret

0000000000010b40 <read_file>:
   10b40:	55                   	push   %rbp
   10b41:	48 89 e5             	mov    %rsp,%rbp
   10b44:	41 56                	push   %r14
   10b46:	41 55                	push   %r13
   10b48:	41 54                	push   %r12
   10b4a:	53                   	push   %rbx
   10b4b:	48 81 ec 70 01 00 00 	sub    $0x170,%rsp
   10b52:	48 89 bd 78 fe ff ff 	mov    %rdi,-0x188(%rbp)
   10b59:	48 89 b5 70 fe ff ff 	mov    %rsi,-0x190(%rbp)
   10b60:	4c 8d ad a0 fe ff ff 	lea    -0x160(%rbp),%r13
   10b67:	4d 89 ee             	mov    %r13,%r14
   10b6a:	83 3d ef a6 00 00 00 	cmpl   $0x0,0xa6ef(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
   10b71:	74 12                	je     10b85 <read_file+0x45>
   10b73:	bf 20 01 00 00       	mov    $0x120,%edi
   10b78:	e8 c3 36 ff ff       	call   4240 <__asan_stack_malloc_3@plt>
   10b7d:	48 85 c0             	test   %rax,%rax
   10b80:	74 03                	je     10b85 <read_file+0x45>
   10b82:	49 89 c5             	mov    %rax,%r13
   10b85:	49 8d 85 40 01 00 00 	lea    0x140(%r13),%rax
   10b8c:	49 89 c4             	mov    %rax,%r12
   10b8f:	49 c7 45 00 b3 8a b5 	movq   $0x41b58ab3,0x0(%r13)
   10b96:	41 
   10b97:	48 8d 05 c2 4a 00 00 	lea    0x4ac2(%rip),%rax        # 15660 <_IO_stdin_used+0x2660>
   10b9e:	49 89 45 08          	mov    %rax,0x8(%r13)
   10ba2:	48 8d 05 97 ff ff ff 	lea    -0x69(%rip),%rax        # 10b40 <read_file>
   10ba9:	49 89 45 10          	mov    %rax,0x10(%r13)
   10bad:	4c 89 eb             	mov    %r13,%rbx
   10bb0:	48 c1 eb 03          	shr    $0x3,%rbx
   10bb4:	c7 83 00 80 ff 7f f1 	movl   $0xf1f1f1f1,0x7fff8000(%rbx)
   10bbb:	f1 f1 f1 
   10bbe:	c7 83 04 80 ff 7f f1 	movl   $0xf1f1,0x7fff8004(%rbx)
   10bc5:	f1 00 00 
   10bc8:	c7 83 08 80 ff 7f f2 	movl   $0xf2f2,0x7fff8008(%rbx)
   10bcf:	f2 00 00 
   10bd2:	c7 83 1c 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff801c(%rbx)
   10bd9:	f3 f3 f3 
   10bdc:	c7 83 20 80 ff 7f f3 	movl   $0xf3f3f3f3,0x7fff8020(%rbx)
   10be3:	f3 f3 f3 
   10be6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   10bed:	00 00 
   10bef:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   10bf3:	31 c0                	xor    %eax,%eax
   10bf5:	b8 00 00 00 00       	mov    $0x0,%eax
   10bfa:	e8 a9 c7 ff ff       	call   d3a8 <read_cpu_timer>
   10bff:	49 89 84 24 f0 fe ff 	mov    %rax,-0x110(%r12)
   10c06:	ff 
   10c07:	41 c7 84 24 f8 fe ff 	movl   $0x1,-0x108(%r12)
   10c0e:	ff 01 00 00 00 
   10c13:	b8 00 00 00 00       	mov    $0x0,%eax
   10c18:	e8 8b c7 ff ff       	call   d3a8 <read_cpu_timer>
   10c1d:	89 85 80 fe ff ff    	mov    %eax,-0x180(%rbp)
   10c23:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   10c2a:	be 00 00 00 00       	mov    $0x0,%esi
   10c2f:	48 89 c7             	mov    %rax,%rdi
   10c32:	b8 00 00 00 00       	mov    $0x0,%eax
   10c37:	e8 d4 34 ff ff       	call   4110 <open@plt>
   10c3c:	89 85 84 fe ff ff    	mov    %eax,-0x17c(%rbp)
   10c42:	83 bd 84 fe ff ff ff 	cmpl   $0xffffffff,-0x17c(%rbp)
   10c49:	75 69                	jne    10cb4 <read_file+0x174>
   10c4b:	e8 f0 33 ff ff       	call   4040 <__errno_location@plt>
   10c50:	48 89 c1             	mov    %rax,%rcx
   10c53:	48 89 c8             	mov    %rcx,%rax
   10c56:	48 89 c2             	mov    %rax,%rdx
   10c59:	48 c1 ea 03          	shr    $0x3,%rdx
   10c5d:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10c64:	0f b6 12             	movzbl (%rdx),%edx
   10c67:	84 d2                	test   %dl,%dl
   10c69:	40 0f 95 c7          	setne  %dil
   10c6d:	48 89 c6             	mov    %rax,%rsi
   10c70:	83 e6 07             	and    $0x7,%esi
   10c73:	83 c6 03             	add    $0x3,%esi
   10c76:	40 38 d6             	cmp    %dl,%sil
   10c79:	0f 9d c2             	setge  %dl
   10c7c:	21 fa                	and    %edi,%edx
   10c7e:	84 d2                	test   %dl,%dl
   10c80:	74 08                	je     10c8a <read_file+0x14a>
   10c82:	48 89 c7             	mov    %rax,%rdi
   10c85:	e8 66 34 ff ff       	call   40f0 <__asan_report_load4@plt>
   10c8a:	8b 11                	mov    (%rcx),%edx
   10c8c:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   10c93:	48 8d 0d 06 4a 00 00 	lea    0x4a06(%rip),%rcx        # 156a0 <_IO_stdin_used+0x26a0>
   10c9a:	48 89 c6             	mov    %rax,%rsi
   10c9d:	48 89 cf             	mov    %rcx,%rdi
   10ca0:	b8 00 00 00 00       	mov    $0x0,%eax
   10ca5:	e8 e2 bc ff ff       	call   c98c <log_error>
   10caa:	b8 00 00 00 00       	mov    $0x0,%eax
   10caf:	e9 97 04 00 00       	jmp    1114b <read_file+0x60b>
   10cb4:	49 8d 94 24 10 ff ff 	lea    -0xf0(%r12),%rdx
   10cbb:	ff 
   10cbc:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   10cc3:	48 89 d6             	mov    %rdx,%rsi
   10cc6:	48 89 c7             	mov    %rax,%rdi
   10cc9:	e8 22 35 ff ff       	call   41f0 <stat@plt>
   10cce:	83 f8 ff             	cmp    $0xffffffff,%eax
   10cd1:	75 69                	jne    10d3c <read_file+0x1fc>
   10cd3:	e8 68 33 ff ff       	call   4040 <__errno_location@plt>
   10cd8:	48 89 c1             	mov    %rax,%rcx
   10cdb:	48 89 c8             	mov    %rcx,%rax
   10cde:	48 89 c2             	mov    %rax,%rdx
   10ce1:	48 c1 ea 03          	shr    $0x3,%rdx
   10ce5:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10cec:	0f b6 12             	movzbl (%rdx),%edx
   10cef:	84 d2                	test   %dl,%dl
   10cf1:	40 0f 95 c7          	setne  %dil
   10cf5:	48 89 c6             	mov    %rax,%rsi
   10cf8:	83 e6 07             	and    $0x7,%esi
   10cfb:	83 c6 03             	add    $0x3,%esi
   10cfe:	40 38 d6             	cmp    %dl,%sil
   10d01:	0f 9d c2             	setge  %dl
   10d04:	21 fa                	and    %edi,%edx
   10d06:	84 d2                	test   %dl,%dl
   10d08:	74 08                	je     10d12 <read_file+0x1d2>
   10d0a:	48 89 c7             	mov    %rax,%rdi
   10d0d:	e8 de 33 ff ff       	call   40f0 <__asan_report_load4@plt>
   10d12:	8b 11                	mov    (%rcx),%edx
   10d14:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   10d1b:	48 8d 0d de 49 00 00 	lea    0x49de(%rip),%rcx        # 15700 <_IO_stdin_used+0x2700>
   10d22:	48 89 c6             	mov    %rax,%rsi
   10d25:	48 89 cf             	mov    %rcx,%rdi
   10d28:	b8 00 00 00 00       	mov    $0x0,%eax
   10d2d:	e8 5a bc ff ff       	call   c98c <log_error>
   10d32:	b8 00 00 00 00       	mov    $0x0,%eax
   10d37:	e9 0f 04 00 00       	jmp    1114b <read_file+0x60b>
   10d3c:	49 8d 84 24 10 ff ff 	lea    -0xf0(%r12),%rax
   10d43:	ff 
   10d44:	48 83 c0 30          	add    $0x30,%rax
   10d48:	48 89 c2             	mov    %rax,%rdx
   10d4b:	48 c1 ea 03          	shr    $0x3,%rdx
   10d4f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10d56:	0f b6 12             	movzbl (%rdx),%edx
   10d59:	84 d2                	test   %dl,%dl
   10d5b:	74 08                	je     10d65 <read_file+0x225>
   10d5d:	48 89 c7             	mov    %rax,%rdi
   10d60:	e8 5b 34 ff ff       	call   41c0 <__asan_report_load8@plt>
   10d65:	49 8b 84 24 40 ff ff 	mov    -0xc0(%r12),%rax
   10d6c:	ff 
   10d6d:	48 85 c0             	test   %rax,%rax
   10d70:	79 29                	jns    10d9b <read_file+0x25b>
   10d72:	48 8d 15 e7 49 00 00 	lea    0x49e7(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   10d79:	48 8d 35 20 4a 00 00 	lea    0x4a20(%rip),%rsi        # 157a0 <_IO_stdin_used+0x27a0>
   10d80:	48 8d 05 59 35 00 00 	lea    0x3559(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   10d87:	b9 34 00 00 00       	mov    $0x34,%ecx
   10d8c:	48 89 c7             	mov    %rax,%rdi
   10d8f:	b8 00 00 00 00       	mov    $0x0,%eax
   10d94:	e8 b7 32 ff ff       	call   4050 <printf@plt>
   10d99:	0f 0b                	ud2
   10d9b:	49 8d 84 24 10 ff ff 	lea    -0xf0(%r12),%rax
   10da2:	ff 
   10da3:	48 83 c0 30          	add    $0x30,%rax
   10da7:	48 89 c2             	mov    %rax,%rdx
   10daa:	48 c1 ea 03          	shr    $0x3,%rdx
   10dae:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10db5:	0f b6 12             	movzbl (%rdx),%edx
   10db8:	84 d2                	test   %dl,%dl
   10dba:	74 08                	je     10dc4 <read_file+0x284>
   10dbc:	48 89 c7             	mov    %rax,%rdi
   10dbf:	e8 fc 33 ff ff       	call   41c0 <__asan_report_load8@plt>
   10dc4:	49 8b 84 24 40 ff ff 	mov    -0xc0(%r12),%rax
   10dcb:	ff 
   10dcc:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
   10dd3:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   10dda:	48 8d 15 ff 49 00 00 	lea    0x49ff(%rip),%rdx        # 157e0 <_IO_stdin_used+0x27e0>
   10de1:	48 89 c6             	mov    %rax,%rsi
   10de4:	48 89 d7             	mov    %rdx,%rdi
   10de7:	b8 00 00 00 00       	mov    $0x0,%eax
   10dec:	e8 f8 c1 ff ff       	call   cfe9 <log_debug>
   10df1:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   10df8:	48 83 c0 01          	add    $0x1,%rax
   10dfc:	48 89 c7             	mov    %rax,%rdi
   10dff:	e8 7c 33 ff ff       	call   4180 <malloc@plt>
   10e04:	48 89 c1             	mov    %rax,%rcx
   10e07:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10e0e:	48 89 c2             	mov    %rax,%rdx
   10e11:	48 c1 ea 03          	shr    $0x3,%rdx
   10e15:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10e1c:	0f b6 12             	movzbl (%rdx),%edx
   10e1f:	84 d2                	test   %dl,%dl
   10e21:	74 08                	je     10e2b <read_file+0x2eb>
   10e23:	48 89 c7             	mov    %rax,%rdi
   10e26:	e8 15 33 ff ff       	call   4140 <__asan_report_store8@plt>
   10e2b:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10e32:	48 89 08             	mov    %rcx,(%rax)
   10e35:	49 8d 84 24 10 ff ff 	lea    -0xf0(%r12),%rax
   10e3c:	ff 
   10e3d:	48 83 c0 30          	add    $0x30,%rax
   10e41:	48 89 c2             	mov    %rax,%rdx
   10e44:	48 c1 ea 03          	shr    $0x3,%rdx
   10e48:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10e4f:	0f b6 12             	movzbl (%rdx),%edx
   10e52:	84 d2                	test   %dl,%dl
   10e54:	74 08                	je     10e5e <read_file+0x31e>
   10e56:	48 89 c7             	mov    %rax,%rdi
   10e59:	e8 62 33 ff ff       	call   41c0 <__asan_report_load8@plt>
   10e5e:	49 8b 94 24 40 ff ff 	mov    -0xc0(%r12),%rdx
   10e65:	ff 
   10e66:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10e6d:	48 8b 08             	mov    (%rax),%rcx
   10e70:	8b 85 84 fe ff ff    	mov    -0x17c(%rbp),%eax
   10e76:	48 89 ce             	mov    %rcx,%rsi
   10e79:	89 c7                	mov    %eax,%edi
   10e7b:	b8 00 00 00 00       	mov    $0x0,%eax
   10e80:	e8 ab 32 ff ff       	call   4130 <read@plt>
   10e85:	83 f8 ff             	cmp    $0xffffffff,%eax
   10e88:	75 69                	jne    10ef3 <read_file+0x3b3>
   10e8a:	e8 b1 31 ff ff       	call   4040 <__errno_location@plt>
   10e8f:	48 89 c1             	mov    %rax,%rcx
   10e92:	48 89 c8             	mov    %rcx,%rax
   10e95:	48 89 c2             	mov    %rax,%rdx
   10e98:	48 c1 ea 03          	shr    $0x3,%rdx
   10e9c:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10ea3:	0f b6 12             	movzbl (%rdx),%edx
   10ea6:	84 d2                	test   %dl,%dl
   10ea8:	40 0f 95 c7          	setne  %dil
   10eac:	48 89 c6             	mov    %rax,%rsi
   10eaf:	83 e6 07             	and    $0x7,%esi
   10eb2:	83 c6 03             	add    $0x3,%esi
   10eb5:	40 38 d6             	cmp    %dl,%sil
   10eb8:	0f 9d c2             	setge  %dl
   10ebb:	21 fa                	and    %edi,%edx
   10ebd:	84 d2                	test   %dl,%dl
   10ebf:	74 08                	je     10ec9 <read_file+0x389>
   10ec1:	48 89 c7             	mov    %rax,%rdi
   10ec4:	e8 27 32 ff ff       	call   40f0 <__asan_report_load4@plt>
   10ec9:	8b 11                	mov    (%rcx),%edx
   10ecb:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
   10ed2:	48 8d 0d 47 49 00 00 	lea    0x4947(%rip),%rcx        # 15820 <_IO_stdin_used+0x2820>
   10ed9:	48 89 c6             	mov    %rax,%rsi
   10edc:	48 89 cf             	mov    %rcx,%rdi
   10edf:	b8 00 00 00 00       	mov    $0x0,%eax
   10ee4:	e8 a3 ba ff ff       	call   c98c <log_error>
   10ee9:	b8 00 00 00 00       	mov    $0x0,%eax
   10eee:	e9 58 02 00 00       	jmp    1114b <read_file+0x60b>
   10ef3:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10efa:	48 89 c2             	mov    %rax,%rdx
   10efd:	48 c1 ea 03          	shr    $0x3,%rdx
   10f01:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10f08:	0f b6 12             	movzbl (%rdx),%edx
   10f0b:	84 d2                	test   %dl,%dl
   10f0d:	74 08                	je     10f17 <read_file+0x3d7>
   10f0f:	48 89 c7             	mov    %rax,%rdi
   10f12:	e8 a9 32 ff ff       	call   41c0 <__asan_report_load8@plt>
   10f17:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
   10f1e:	48 8b 10             	mov    (%rax),%rdx
   10f21:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   10f28:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10f2c:	48 89 c8             	mov    %rcx,%rax
   10f2f:	48 89 c2             	mov    %rax,%rdx
   10f32:	48 c1 ea 03          	shr    $0x3,%rdx
   10f36:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   10f3d:	0f b6 12             	movzbl (%rdx),%edx
   10f40:	84 d2                	test   %dl,%dl
   10f42:	40 0f 95 c6          	setne  %sil
   10f46:	48 89 c7             	mov    %rax,%rdi
   10f49:	83 e7 07             	and    $0x7,%edi
   10f4c:	40 38 d7             	cmp    %dl,%dil
   10f4f:	0f 9d c2             	setge  %dl
   10f52:	21 f2                	and    %esi,%edx
   10f54:	84 d2                	test   %dl,%dl
   10f56:	74 08                	je     10f60 <read_file+0x420>
   10f58:	48 89 c7             	mov    %rax,%rdi
   10f5b:	e8 50 32 ff ff       	call   41b0 <__asan_report_store1@plt>
   10f60:	c6 01 00             	movb   $0x0,(%rcx)
   10f63:	b8 00 00 00 00       	mov    $0x0,%eax
   10f68:	e8 3b c4 ff ff       	call   d3a8 <read_cpu_timer>
   10f6d:	89 85 88 fe ff ff    	mov    %eax,-0x178(%rbp)
   10f73:	8b 85 88 fe ff ff    	mov    -0x178(%rbp),%eax
   10f79:	2b 85 80 fe ff ff    	sub    -0x180(%rbp),%eax
   10f7f:	48 8d 15 fa 48 00 00 	lea    0x48fa(%rip),%rdx        # 15880 <_IO_stdin_used+0x2880>
   10f86:	89 c6                	mov    %eax,%esi
   10f88:	48 89 d7             	mov    %rdx,%rdi
   10f8b:	b8 00 00 00 00       	mov    $0x0,%eax
   10f90:	e8 35 be ff ff       	call   cdca <log_info>
   10f95:	b8 00 00 00 00       	mov    $0x0,%eax
   10f9a:	e8 09 c4 ff ff       	call   d3a8 <read_cpu_timer>
   10f9f:	89 85 8c fe ff ff    	mov    %eax,-0x174(%rbp)
   10fa5:	41 8b 84 24 f8 fe ff 	mov    -0x108(%r12),%eax
   10fac:	ff 
   10fad:	89 85 90 fe ff ff    	mov    %eax,-0x170(%rbp)
   10fb3:	49 8b 84 24 f0 fe ff 	mov    -0x110(%r12),%rax
   10fba:	ff 
   10fbb:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%rbp)
   10fc1:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   10fc7:	48 89 d0             	mov    %rdx,%rax
   10fca:	48 01 c0             	add    %rax,%rax
   10fcd:	48 01 d0             	add    %rdx,%rax
   10fd0:	48 c1 e0 03          	shl    $0x3,%rax
   10fd4:	48 8d 50 10          	lea    0x10(%rax),%rdx
   10fd8:	48 8d 05 e1 a2 00 00 	lea    0xa2e1(%rip),%rax        # 1b2c0 <global_profiler>
   10fdf:	48 01 d0             	add    %rdx,%rax
   10fe2:	48 89 c2             	mov    %rax,%rdx
   10fe5:	48 89 d0             	mov    %rdx,%rax
   10fe8:	48 c1 e8 03          	shr    $0x3,%rax
   10fec:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   10ff2:	0f b6 00             	movzbl (%rax),%eax
   10ff5:	84 c0                	test   %al,%al
   10ff7:	0f 95 c1             	setne  %cl
   10ffa:	3c 03                	cmp    $0x3,%al
   10ffc:	0f 9e c0             	setle  %al
   10fff:	21 c8                	and    %ecx,%eax
   11001:	84 c0                	test   %al,%al
   11003:	74 08                	je     1100d <read_file+0x4cd>
   11005:	48 89 d7             	mov    %rdx,%rdi
   11008:	e8 e3 30 ff ff       	call   40f0 <__asan_report_load4@plt>
   1100d:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   11013:	48 89 d0             	mov    %rdx,%rax
   11016:	48 01 c0             	add    %rax,%rax
   11019:	48 01 d0             	add    %rdx,%rax
   1101c:	48 c1 e0 03          	shl    $0x3,%rax
   11020:	48 89 c2             	mov    %rax,%rdx
   11023:	48 8d 05 a6 a2 00 00 	lea    0xa2a6(%rip),%rax        # 1b2d0 <global_profiler+0x10>
   1102a:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1102d:	8d 48 01             	lea    0x1(%rax),%ecx
   11030:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   11036:	48 89 d0             	mov    %rdx,%rax
   11039:	48 01 c0             	add    %rax,%rax
   1103c:	48 01 d0             	add    %rdx,%rax
   1103f:	48 c1 e0 03          	shl    $0x3,%rax
   11043:	48 89 c2             	mov    %rax,%rdx
   11046:	48 8d 05 83 a2 00 00 	lea    0xa283(%rip),%rax        # 1b2d0 <global_profiler+0x10>
   1104d:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
   11050:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   11056:	48 89 d0             	mov    %rdx,%rax
   11059:	48 01 c0             	add    %rax,%rax
   1105c:	48 01 d0             	add    %rdx,%rax
   1105f:	48 c1 e0 03          	shl    $0x3,%rax
   11063:	48 8d 15 56 a2 00 00 	lea    0xa256(%rip),%rdx        # 1b2c0 <global_profiler>
   1106a:	48 01 d0             	add    %rdx,%rax
   1106d:	48 89 c2             	mov    %rax,%rdx
   11070:	48 c1 ea 03          	shr    $0x3,%rdx
   11074:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1107b:	0f b6 12             	movzbl (%rdx),%edx
   1107e:	84 d2                	test   %dl,%dl
   11080:	74 08                	je     1108a <read_file+0x54a>
   11082:	48 89 c7             	mov    %rax,%rdi
   11085:	e8 36 31 ff ff       	call   41c0 <__asan_report_load8@plt>
   1108a:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   11090:	48 89 d0             	mov    %rdx,%rax
   11093:	48 01 c0             	add    %rax,%rax
   11096:	48 01 d0             	add    %rdx,%rax
   11099:	48 c1 e0 03          	shl    $0x3,%rax
   1109d:	48 89 c2             	mov    %rax,%rdx
   110a0:	48 8d 05 19 a2 00 00 	lea    0xa219(%rip),%rax        # 1b2c0 <global_profiler>
   110a7:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
   110ab:	8b 85 8c fe ff ff    	mov    -0x174(%rbp),%eax
   110b1:	2b 85 94 fe ff ff    	sub    -0x16c(%rbp),%eax
   110b7:	89 c0                	mov    %eax,%eax
   110b9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   110bd:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   110c3:	48 89 d0             	mov    %rdx,%rax
   110c6:	48 01 c0             	add    %rax,%rax
   110c9:	48 01 d0             	add    %rdx,%rax
   110cc:	48 c1 e0 03          	shl    $0x3,%rax
   110d0:	48 89 c2             	mov    %rax,%rdx
   110d3:	48 8d 05 e6 a1 00 00 	lea    0xa1e6(%rip),%rax        # 1b2c0 <global_profiler>
   110da:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
   110de:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   110e4:	48 89 d0             	mov    %rdx,%rax
   110e7:	48 01 c0             	add    %rax,%rax
   110ea:	48 01 d0             	add    %rdx,%rax
   110ed:	48 c1 e0 03          	shl    $0x3,%rax
   110f1:	48 8d 15 c8 a1 00 00 	lea    0xa1c8(%rip),%rdx        # 1b2c0 <global_profiler>
   110f8:	48 01 d0             	add    %rdx,%rax
   110fb:	48 83 c0 08          	add    $0x8,%rax
   110ff:	48 89 c2             	mov    %rax,%rdx
   11102:	48 c1 ea 03          	shr    $0x3,%rdx
   11106:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1110d:	0f b6 12             	movzbl (%rdx),%edx
   11110:	84 d2                	test   %dl,%dl
   11112:	74 08                	je     1111c <read_file+0x5dc>
   11114:	48 89 c7             	mov    %rax,%rdi
   11117:	e8 24 30 ff ff       	call   4140 <__asan_report_store8@plt>
   1111c:	8b 95 90 fe ff ff    	mov    -0x170(%rbp),%edx
   11122:	48 89 d0             	mov    %rdx,%rax
   11125:	48 01 c0             	add    %rax,%rax
   11128:	48 01 d0             	add    %rdx,%rax
   1112b:	48 c1 e0 03          	shl    $0x3,%rax
   1112f:	48 89 c1             	mov    %rax,%rcx
   11132:	48 8d 05 8f a1 00 00 	lea    0xa18f(%rip),%rax        # 1b2c8 <global_profiler+0x8>
   11139:	48 8d 15 e0 50 00 00 	lea    0x50e0(%rip),%rdx        # 16220 <__func__.1>
   11140:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   11144:	48 8b 85 98 fe ff ff 	mov    -0x168(%rbp),%rax
   1114b:	48 89 c2             	mov    %rax,%rdx
   1114e:	4d 39 ee             	cmp    %r13,%r14
   11151:	74 38                	je     1118b <read_file+0x64b>
   11153:	49 c7 45 00 0e 36 e0 	movq   $0x45e0360e,0x0(%r13)
   1115a:	45 
   1115b:	b8 f5 f5 f5 f5       	mov    $0xf5f5f5f5,%eax
   11160:	66 0f 6e c8          	movd   %eax,%xmm1
   11164:	66 0f 70 c1 00       	pshufd $0x0,%xmm1,%xmm0
   11169:	0f 11 83 00 80 ff 7f 	movups %xmm0,0x7fff8000(%rbx)
   11170:	0f 11 83 10 80 ff 7f 	movups %xmm0,0x7fff8010(%rbx)
   11177:	66 0f 7e 83 20 80 ff 	movd   %xmm0,0x7fff8020(%rbx)
   1117e:	7f 
   1117f:	49 8b 85 f8 01 00 00 	mov    0x1f8(%r13),%rax
   11186:	c6 00 00             	movb   $0x0,(%rax)
   11189:	eb 20                	jmp    111ab <read_file+0x66b>
   1118b:	48 c7 83 00 80 ff 7f 	movq   $0x0,0x7fff8000(%rbx)
   11192:	00 00 00 00 
   11196:	c7 83 08 80 ff 7f 00 	movl   $0x0,0x7fff8008(%rbx)
   1119d:	00 00 00 
   111a0:	48 c7 83 1c 80 ff 7f 	movq   $0x0,0x7fff801c(%rbx)
   111a7:	00 00 00 00 
   111ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111af:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   111b6:	00 00 
   111b8:	74 05                	je     111bf <read_file+0x67f>
   111ba:	e8 a1 2f ff ff       	call   4160 <__stack_chk_fail@plt>
   111bf:	48 89 d0             	mov    %rdx,%rax
   111c2:	48 81 c4 70 01 00 00 	add    $0x170,%rsp
   111c9:	5b                   	pop    %rbx
   111ca:	41 5c                	pop    %r12
   111cc:	41 5d                	pop    %r13
   111ce:	41 5e                	pop    %r14
   111d0:	5d                   	pop    %rbp
   111d1:	c3                   	ret

00000000000111d2 <compute_haversine_sums>:
   111d2:	55                   	push   %rbp
   111d3:	48 89 e5             	mov    %rsp,%rbp
   111d6:	41 57                	push   %r15
   111d8:	41 56                	push   %r14
   111da:	41 55                	push   %r13
   111dc:	41 54                	push   %r12
   111de:	53                   	push   %rbx
   111df:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
   111e6:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
   111ed:	89 b5 a4 fe ff ff    	mov    %esi,-0x15c(%rbp)
   111f3:	89 95 a0 fe ff ff    	mov    %edx,-0x160(%rbp)
   111f9:	4c 8d a5 30 ff ff ff 	lea    -0xd0(%rbp),%r12
   11200:	4d 89 e7             	mov    %r12,%r15
   11203:	83 3d 56 a0 00 00 00 	cmpl   $0x0,0xa056(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
   1120a:	74 12                	je     1121e <compute_haversine_sums+0x4c>
   1120c:	bf 80 00 00 00       	mov    $0x80,%edi
   11211:	e8 ca 2e ff ff       	call   40e0 <__asan_stack_malloc_1@plt>
   11216:	48 85 c0             	test   %rax,%rax
   11219:	74 03                	je     1121e <compute_haversine_sums+0x4c>
   1121b:	49 89 c4             	mov    %rax,%r12
   1121e:	49 8d 84 24 a0 00 00 	lea    0xa0(%r12),%rax
   11225:	00 
   11226:	48 89 c3             	mov    %rax,%rbx
   11229:	49 c7 04 24 b3 8a b5 	movq   $0x41b58ab3,(%r12)
   11230:	41 
   11231:	48 8d 05 88 46 00 00 	lea    0x4688(%rip),%rax        # 158c0 <_IO_stdin_used+0x28c0>
   11238:	49 89 44 24 08       	mov    %rax,0x8(%r12)
   1123d:	48 8d 05 8e ff ff ff 	lea    -0x72(%rip),%rax        # 111d2 <compute_haversine_sums>
   11244:	49 89 44 24 10       	mov    %rax,0x10(%r12)
   11249:	4d 89 e5             	mov    %r12,%r13
   1124c:	49 c1 ed 03          	shr    $0x3,%r13
   11250:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
   11257:	f1 f1 f1 f1 
   1125b:	41 c7 85 04 80 ff 7f 	movl   $0xf2f2f200,0x7fff8004(%r13)
   11262:	00 f2 f2 f2 
   11266:	41 c7 85 08 80 ff 7f 	movl   $0xf2f2f200,0x7fff8008(%r13)
   1126d:	00 f2 f2 f2 
   11271:	41 c7 85 0c 80 ff 7f 	movl   $0xf3f30000,0x7fff800c(%r13)
   11278:	00 00 f3 f3 
   1127c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11283:	00 00 
   11285:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   11289:	31 c0                	xor    %eax,%eax
   1128b:	b8 00 00 00 00       	mov    $0x0,%eax
   11290:	e8 13 c1 ff ff       	call   d3a8 <read_cpu_timer>
   11295:	48 89 43 c0          	mov    %rax,-0x40(%rbx)
   11299:	c7 43 c8 02 00 00 00 	movl   $0x2,-0x38(%rbx)
   112a0:	b8 00 00 00 00       	mov    $0x0,%eax
   112a5:	e8 fe c0 ff ff       	call   d3a8 <read_cpu_timer>
   112aa:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
   112b0:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   112b7:	48 89 c2             	mov    %rax,%rdx
   112ba:	48 89 d0             	mov    %rdx,%rax
   112bd:	48 c1 e8 03          	shr    $0x3,%rax
   112c1:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   112c7:	0f b6 00             	movzbl (%rax),%eax
   112ca:	84 c0                	test   %al,%al
   112cc:	0f 95 c1             	setne  %cl
   112cf:	3c 03                	cmp    $0x3,%al
   112d1:	0f 9e c0             	setle  %al
   112d4:	21 c8                	and    %ecx,%eax
   112d6:	84 c0                	test   %al,%al
   112d8:	74 08                	je     112e2 <compute_haversine_sums+0x110>
   112da:	48 89 d7             	mov    %rdx,%rdi
   112dd:	e8 0e 2e ff ff       	call   40f0 <__asan_report_load4@plt>
   112e2:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   112e9:	8b 00                	mov    (%rax),%eax
   112eb:	85 c0                	test   %eax,%eax
   112ed:	74 29                	je     11318 <compute_haversine_sums+0x146>
   112ef:	48 8d 15 6a 44 00 00 	lea    0x446a(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   112f6:	48 8d 35 23 46 00 00 	lea    0x4623(%rip),%rsi        # 15920 <_IO_stdin_used+0x2920>
   112fd:	48 8d 05 dc 2f 00 00 	lea    0x2fdc(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11304:	b9 4b 00 00 00       	mov    $0x4b,%ecx
   11309:	48 89 c7             	mov    %rax,%rdi
   1130c:	b8 00 00 00 00       	mov    $0x0,%eax
   11311:	e8 3a 2d ff ff       	call   4050 <printf@plt>
   11316:	0f 0b                	ud2
   11318:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1131f:	48 83 c0 08          	add    $0x8,%rax
   11323:	48 89 c2             	mov    %rax,%rdx
   11326:	48 c1 ea 03          	shr    $0x3,%rdx
   1132a:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11331:	0f b6 12             	movzbl (%rdx),%edx
   11334:	84 d2                	test   %dl,%dl
   11336:	74 08                	je     11340 <compute_haversine_sums+0x16e>
   11338:	48 89 c7             	mov    %rax,%rdi
   1133b:	e8 80 2e ff ff       	call   41c0 <__asan_report_load8@plt>
   11340:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11347:	48 8b 40 08          	mov    0x8(%rax),%rax
   1134b:	48 8d 50 10          	lea    0x10(%rax),%rdx
   1134f:	48 89 d1             	mov    %rdx,%rcx
   11352:	48 89 ca             	mov    %rcx,%rdx
   11355:	48 c1 ea 03          	shr    $0x3,%rdx
   11359:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11360:	0f b6 12             	movzbl (%rdx),%edx
   11363:	84 d2                	test   %dl,%dl
   11365:	40 0f 95 c6          	setne  %sil
   11369:	80 fa 03             	cmp    $0x3,%dl
   1136c:	0f 9e c2             	setle  %dl
   1136f:	21 f2                	and    %esi,%edx
   11371:	84 d2                	test   %dl,%dl
   11373:	74 08                	je     1137d <compute_haversine_sums+0x1ab>
   11375:	48 89 cf             	mov    %rcx,%rdi
   11378:	e8 73 2d ff ff       	call   40f0 <__asan_report_load4@plt>
   1137d:	8b 40 10             	mov    0x10(%rax),%eax
   11380:	83 f8 01             	cmp    $0x1,%eax
   11383:	74 29                	je     113ae <compute_haversine_sums+0x1dc>
   11385:	48 8d 15 d4 43 00 00 	lea    0x43d4(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   1138c:	48 8d 35 ed 45 00 00 	lea    0x45ed(%rip),%rsi        # 15980 <_IO_stdin_used+0x2980>
   11393:	48 8d 05 46 2f 00 00 	lea    0x2f46(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   1139a:	b9 4c 00 00 00       	mov    $0x4c,%ecx
   1139f:	48 89 c7             	mov    %rax,%rdi
   113a2:	b8 00 00 00 00       	mov    $0x0,%eax
   113a7:	e8 a4 2c ff ff       	call   4050 <printf@plt>
   113ac:	0f 0b                	ud2
   113ae:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   113b5:	48 83 c0 08          	add    $0x8,%rax
   113b9:	48 89 c2             	mov    %rax,%rdx
   113bc:	48 c1 ea 03          	shr    $0x3,%rdx
   113c0:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   113c7:	0f b6 12             	movzbl (%rdx),%edx
   113ca:	84 d2                	test   %dl,%dl
   113cc:	74 08                	je     113d6 <compute_haversine_sums+0x204>
   113ce:	48 89 c7             	mov    %rax,%rdi
   113d1:	e8 ea 2d ff ff       	call   41c0 <__asan_report_load8@plt>
   113d6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   113dd:	48 8b 40 08          	mov    0x8(%rax),%rax
   113e1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   113e5:	48 89 d1             	mov    %rdx,%rcx
   113e8:	48 c1 e9 03          	shr    $0x3,%rcx
   113ec:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   113f3:	0f b6 09             	movzbl (%rcx),%ecx
   113f6:	84 c9                	test   %cl,%cl
   113f8:	74 08                	je     11402 <compute_haversine_sums+0x230>
   113fa:	48 89 d7             	mov    %rdx,%rdi
   113fd:	e8 be 2d ff ff       	call   41c0 <__asan_report_load8@plt>
   11402:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11406:	48 89 d0             	mov    %rdx,%rax
   11409:	48 89 c1             	mov    %rax,%rcx
   1140c:	48 89 c8             	mov    %rcx,%rax
   1140f:	48 c1 e8 03          	shr    $0x3,%rax
   11413:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11419:	0f b6 00             	movzbl (%rax),%eax
   1141c:	84 c0                	test   %al,%al
   1141e:	40 0f 95 c6          	setne  %sil
   11422:	3c 03                	cmp    $0x3,%al
   11424:	0f 9e c0             	setle  %al
   11427:	21 f0                	and    %esi,%eax
   11429:	84 c0                	test   %al,%al
   1142b:	74 08                	je     11435 <compute_haversine_sums+0x263>
   1142d:	48 89 cf             	mov    %rcx,%rdi
   11430:	e8 bb 2c ff ff       	call   40f0 <__asan_report_load4@plt>
   11435:	8b 02                	mov    (%rdx),%eax
   11437:	83 f8 01             	cmp    $0x1,%eax
   1143a:	74 29                	je     11465 <compute_haversine_sums+0x293>
   1143c:	48 8d 15 1d 43 00 00 	lea    0x431d(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   11443:	48 8d 35 96 45 00 00 	lea    0x4596(%rip),%rsi        # 159e0 <_IO_stdin_used+0x29e0>
   1144a:	48 8d 05 8f 2e 00 00 	lea    0x2e8f(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11451:	b9 4d 00 00 00       	mov    $0x4d,%ecx
   11456:	48 89 c7             	mov    %rax,%rdi
   11459:	b8 00 00 00 00       	mov    $0x0,%eax
   1145e:	e8 ed 2b ff ff       	call   4050 <printf@plt>
   11463:	0f 0b                	ud2
   11465:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   1146c:	48 83 c0 08          	add    $0x8,%rax
   11470:	48 89 c2             	mov    %rax,%rdx
   11473:	48 c1 ea 03          	shr    $0x3,%rdx
   11477:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1147e:	0f b6 12             	movzbl (%rdx),%edx
   11481:	84 d2                	test   %dl,%dl
   11483:	74 08                	je     1148d <compute_haversine_sums+0x2bb>
   11485:	48 89 c7             	mov    %rax,%rdi
   11488:	e8 33 2d ff ff       	call   41c0 <__asan_report_load8@plt>
   1148d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11494:	48 8b 40 08          	mov    0x8(%rax),%rax
   11498:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1149c:	48 89 d1             	mov    %rdx,%rcx
   1149f:	48 c1 e9 03          	shr    $0x3,%rcx
   114a3:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   114aa:	0f b6 09             	movzbl (%rcx),%ecx
   114ad:	84 c9                	test   %cl,%cl
   114af:	74 08                	je     114b9 <compute_haversine_sums+0x2e7>
   114b1:	48 89 d7             	mov    %rdx,%rdi
   114b4:	e8 07 2d ff ff       	call   41c0 <__asan_report_load8@plt>
   114b9:	48 8b 40 08          	mov    0x8(%rax),%rax
   114bd:	48 8d 50 10          	lea    0x10(%rax),%rdx
   114c1:	48 89 d1             	mov    %rdx,%rcx
   114c4:	48 c1 e9 03          	shr    $0x3,%rcx
   114c8:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   114cf:	0f b6 09             	movzbl (%rcx),%ecx
   114d2:	84 c9                	test   %cl,%cl
   114d4:	74 08                	je     114de <compute_haversine_sums+0x30c>
   114d6:	48 89 d7             	mov    %rdx,%rdi
   114d9:	e8 e2 2c ff ff       	call   41c0 <__asan_report_load8@plt>
   114de:	48 8b 40 10          	mov    0x10(%rax),%rax
   114e2:	48 89 c2             	mov    %rax,%rdx
   114e5:	48 89 d1             	mov    %rdx,%rcx
   114e8:	48 c1 e9 03          	shr    $0x3,%rcx
   114ec:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   114f3:	0f b6 09             	movzbl (%rcx),%ecx
   114f6:	84 c9                	test   %cl,%cl
   114f8:	74 08                	je     11502 <compute_haversine_sums+0x330>
   114fa:	48 89 d7             	mov    %rdx,%rdi
   114fd:	e8 be 2c ff ff       	call   41c0 <__asan_report_load8@plt>
   11502:	48 8b 00             	mov    (%rax),%rax
   11505:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
   1150c:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
   11513:	48 8b 40 08          	mov    0x8(%rax),%rax
   11517:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1151b:	48 89 d1             	mov    %rdx,%rcx
   1151e:	48 c1 e9 03          	shr    $0x3,%rcx
   11522:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   11529:	0f b6 09             	movzbl (%rcx),%ecx
   1152c:	84 c9                	test   %cl,%cl
   1152e:	74 08                	je     11538 <compute_haversine_sums+0x366>
   11530:	48 89 d7             	mov    %rdx,%rdi
   11533:	e8 88 2c ff ff       	call   41c0 <__asan_report_load8@plt>
   11538:	48 8b 40 08          	mov    0x8(%rax),%rax
   1153c:	48 8d 50 10          	lea    0x10(%rax),%rdx
   11540:	48 89 d1             	mov    %rdx,%rcx
   11543:	48 c1 e9 03          	shr    $0x3,%rcx
   11547:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   1154e:	0f b6 09             	movzbl (%rcx),%ecx
   11551:	84 c9                	test   %cl,%cl
   11553:	74 08                	je     1155d <compute_haversine_sums+0x38b>
   11555:	48 89 d7             	mov    %rdx,%rdi
   11558:	e8 63 2c ff ff       	call   41c0 <__asan_report_load8@plt>
   1155d:	48 8b 40 10          	mov    0x10(%rax),%rax
   11561:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11565:	48 89 d1             	mov    %rdx,%rcx
   11568:	48 89 ca             	mov    %rcx,%rdx
   1156b:	48 c1 ea 03          	shr    $0x3,%rdx
   1156f:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11576:	0f b6 12             	movzbl (%rdx),%edx
   11579:	84 d2                	test   %dl,%dl
   1157b:	40 0f 95 c6          	setne  %sil
   1157f:	80 fa 03             	cmp    $0x3,%dl
   11582:	0f 9e c2             	setle  %dl
   11585:	21 f2                	and    %esi,%edx
   11587:	84 d2                	test   %dl,%dl
   11589:	74 08                	je     11593 <compute_haversine_sums+0x3c1>
   1158b:	48 89 cf             	mov    %rcx,%rdi
   1158e:	e8 5d 2b ff ff       	call   40f0 <__asan_report_load4@plt>
   11593:	8b 40 08             	mov    0x8(%rax),%eax
   11596:	89 85 c4 fe ff ff    	mov    %eax,-0x13c(%rbp)
   1159c:	c7 85 bc fe ff ff 00 	movl   $0x0,-0x144(%rbp)
   115a3:	00 00 00 
   115a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
   115aa:	f2 0f 11 85 d8 fe ff 	movsd  %xmm0,-0x128(%rbp)
   115b1:	ff 
   115b2:	e9 1c 07 00 00       	jmp    11cd3 <compute_haversine_sums+0xb01>
   115b7:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
   115bd:	48 89 d0             	mov    %rdx,%rax
   115c0:	48 01 c0             	add    %rax,%rax
   115c3:	48 01 d0             	add    %rdx,%rax
   115c6:	48 c1 e0 04          	shl    $0x4,%rax
   115ca:	48 89 c2             	mov    %rax,%rdx
   115cd:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   115d4:	48 01 c2             	add    %rax,%rdx
   115d7:	48 89 d0             	mov    %rdx,%rax
   115da:	48 89 c1             	mov    %rax,%rcx
   115dd:	48 89 c8             	mov    %rcx,%rax
   115e0:	48 c1 e8 03          	shr    $0x3,%rax
   115e4:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   115ea:	0f b6 00             	movzbl (%rax),%eax
   115ed:	84 c0                	test   %al,%al
   115ef:	40 0f 95 c6          	setne  %sil
   115f3:	3c 03                	cmp    $0x3,%al
   115f5:	0f 9e c0             	setle  %al
   115f8:	21 f0                	and    %esi,%eax
   115fa:	84 c0                	test   %al,%al
   115fc:	74 08                	je     11606 <compute_haversine_sums+0x434>
   115fe:	48 89 cf             	mov    %rcx,%rdi
   11601:	e8 ea 2a ff ff       	call   40f0 <__asan_report_load4@plt>
   11606:	8b 02                	mov    (%rdx),%eax
   11608:	85 c0                	test   %eax,%eax
   1160a:	74 29                	je     11635 <compute_haversine_sums+0x463>
   1160c:	48 8d 15 4d 41 00 00 	lea    0x414d(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   11613:	48 8d 35 26 44 00 00 	lea    0x4426(%rip),%rsi        # 15a40 <_IO_stdin_used+0x2a40>
   1161a:	48 8d 05 bf 2c 00 00 	lea    0x2cbf(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11621:	b9 56 00 00 00       	mov    $0x56,%ecx
   11626:	48 89 c7             	mov    %rax,%rdi
   11629:	b8 00 00 00 00       	mov    $0x0,%eax
   1162e:	e8 1d 2a ff ff       	call   4050 <printf@plt>
   11633:	0f 0b                	ud2
   11635:	8b 95 bc fe ff ff    	mov    -0x144(%rbp),%edx
   1163b:	48 89 d0             	mov    %rdx,%rax
   1163e:	48 01 c0             	add    %rax,%rax
   11641:	48 01 d0             	add    %rdx,%rax
   11644:	48 c1 e0 04          	shl    $0x4,%rax
   11648:	48 89 c2             	mov    %rax,%rdx
   1164b:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
   11652:	48 01 d0             	add    %rdx,%rax
   11655:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11659:	48 89 d1             	mov    %rdx,%rcx
   1165c:	48 c1 e9 03          	shr    $0x3,%rcx
   11660:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   11667:	0f b6 09             	movzbl (%rcx),%ecx
   1166a:	84 c9                	test   %cl,%cl
   1166c:	74 08                	je     11676 <compute_haversine_sums+0x4a4>
   1166e:	48 89 d7             	mov    %rdx,%rdi
   11671:	e8 4a 2b ff ff       	call   41c0 <__asan_report_load8@plt>
   11676:	48 8b 40 08          	mov    0x8(%rax),%rax
   1167a:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
   11681:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11688:	48 83 c0 10          	add    $0x10,%rax
   1168c:	48 89 c2             	mov    %rax,%rdx
   1168f:	48 89 d0             	mov    %rdx,%rax
   11692:	48 c1 e8 03          	shr    $0x3,%rax
   11696:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   1169c:	0f b6 00             	movzbl (%rax),%eax
   1169f:	84 c0                	test   %al,%al
   116a1:	0f 95 c1             	setne  %cl
   116a4:	3c 03                	cmp    $0x3,%al
   116a6:	0f 9e c0             	setle  %al
   116a9:	21 c8                	and    %ecx,%eax
   116ab:	84 c0                	test   %al,%al
   116ad:	74 08                	je     116b7 <compute_haversine_sums+0x4e5>
   116af:	48 89 d7             	mov    %rdx,%rdi
   116b2:	e8 39 2a ff ff       	call   40f0 <__asan_report_load4@plt>
   116b7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   116be:	8b 40 10             	mov    0x10(%rax),%eax
   116c1:	83 f8 04             	cmp    $0x4,%eax
   116c4:	74 29                	je     116ef <compute_haversine_sums+0x51d>
   116c6:	48 8d 15 93 40 00 00 	lea    0x4093(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   116cd:	48 8d 35 ec 43 00 00 	lea    0x43ec(%rip),%rsi        # 15ac0 <_IO_stdin_used+0x2ac0>
   116d4:	48 8d 05 05 2c 00 00 	lea    0x2c05(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   116db:	b9 5a 00 00 00       	mov    $0x5a,%ecx
   116e0:	48 89 c7             	mov    %rax,%rdi
   116e3:	b8 00 00 00 00       	mov    $0x0,%eax
   116e8:	e8 63 29 ff ff       	call   4050 <printf@plt>
   116ed:	0f 0b                	ud2
   116ef:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   116f6:	48 83 c0 08          	add    $0x8,%rax
   116fa:	48 89 c2             	mov    %rax,%rdx
   116fd:	48 c1 ea 03          	shr    $0x3,%rdx
   11701:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11708:	0f b6 12             	movzbl (%rdx),%edx
   1170b:	84 d2                	test   %dl,%dl
   1170d:	74 08                	je     11717 <compute_haversine_sums+0x545>
   1170f:	48 89 c7             	mov    %rax,%rdi
   11712:	e8 a9 2a ff ff       	call   41c0 <__asan_report_load8@plt>
   11717:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1171e:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11722:	48 89 d0             	mov    %rdx,%rax
   11725:	48 89 c1             	mov    %rax,%rcx
   11728:	48 89 c8             	mov    %rcx,%rax
   1172b:	48 c1 e8 03          	shr    $0x3,%rax
   1172f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11735:	0f b6 00             	movzbl (%rax),%eax
   11738:	84 c0                	test   %al,%al
   1173a:	40 0f 95 c6          	setne  %sil
   1173e:	3c 03                	cmp    $0x3,%al
   11740:	0f 9e c0             	setle  %al
   11743:	21 f0                	and    %esi,%eax
   11745:	84 c0                	test   %al,%al
   11747:	74 08                	je     11751 <compute_haversine_sums+0x57f>
   11749:	48 89 cf             	mov    %rcx,%rdi
   1174c:	e8 9f 29 ff ff       	call   40f0 <__asan_report_load4@plt>
   11751:	8b 02                	mov    (%rdx),%eax
   11753:	83 f8 03             	cmp    $0x3,%eax
   11756:	74 29                	je     11781 <compute_haversine_sums+0x5af>
   11758:	48 8d 15 01 40 00 00 	lea    0x4001(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   1175f:	48 8d 35 ba 43 00 00 	lea    0x43ba(%rip),%rsi        # 15b20 <_IO_stdin_used+0x2b20>
   11766:	48 8d 05 73 2b 00 00 	lea    0x2b73(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   1176d:	b9 5b 00 00 00       	mov    $0x5b,%ecx
   11772:	48 89 c7             	mov    %rax,%rdi
   11775:	b8 00 00 00 00       	mov    $0x0,%eax
   1177a:	e8 d1 28 ff ff       	call   4050 <printf@plt>
   1177f:	0f 0b                	ud2
   11781:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11788:	48 83 c0 08          	add    $0x8,%rax
   1178c:	48 89 c2             	mov    %rax,%rdx
   1178f:	48 c1 ea 03          	shr    $0x3,%rdx
   11793:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1179a:	0f b6 12             	movzbl (%rdx),%edx
   1179d:	84 d2                	test   %dl,%dl
   1179f:	74 08                	je     117a9 <compute_haversine_sums+0x5d7>
   117a1:	48 89 c7             	mov    %rax,%rdi
   117a4:	e8 17 2a ff ff       	call   41c0 <__asan_report_load8@plt>
   117a9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   117b0:	48 8b 40 08          	mov    0x8(%rax),%rax
   117b4:	48 8d 50 30          	lea    0x30(%rax),%rdx
   117b8:	48 89 d0             	mov    %rdx,%rax
   117bb:	48 89 c1             	mov    %rax,%rcx
   117be:	48 89 c8             	mov    %rcx,%rax
   117c1:	48 c1 e8 03          	shr    $0x3,%rax
   117c5:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   117cb:	0f b6 00             	movzbl (%rax),%eax
   117ce:	84 c0                	test   %al,%al
   117d0:	40 0f 95 c6          	setne  %sil
   117d4:	3c 03                	cmp    $0x3,%al
   117d6:	0f 9e c0             	setle  %al
   117d9:	21 f0                	and    %esi,%eax
   117db:	84 c0                	test   %al,%al
   117dd:	74 08                	je     117e7 <compute_haversine_sums+0x615>
   117df:	48 89 cf             	mov    %rcx,%rdi
   117e2:	e8 09 29 ff ff       	call   40f0 <__asan_report_load4@plt>
   117e7:	8b 02                	mov    (%rdx),%eax
   117e9:	83 f8 03             	cmp    $0x3,%eax
   117ec:	74 29                	je     11817 <compute_haversine_sums+0x645>
   117ee:	48 8d 15 6b 3f 00 00 	lea    0x3f6b(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   117f5:	48 8d 35 84 43 00 00 	lea    0x4384(%rip),%rsi        # 15b80 <_IO_stdin_used+0x2b80>
   117fc:	48 8d 05 dd 2a 00 00 	lea    0x2add(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11803:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   11808:	48 89 c7             	mov    %rax,%rdi
   1180b:	b8 00 00 00 00       	mov    $0x0,%eax
   11810:	e8 3b 28 ff ff       	call   4050 <printf@plt>
   11815:	0f 0b                	ud2
   11817:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1181e:	48 83 c0 08          	add    $0x8,%rax
   11822:	48 89 c2             	mov    %rax,%rdx
   11825:	48 c1 ea 03          	shr    $0x3,%rdx
   11829:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11830:	0f b6 12             	movzbl (%rdx),%edx
   11833:	84 d2                	test   %dl,%dl
   11835:	74 08                	je     1183f <compute_haversine_sums+0x66d>
   11837:	48 89 c7             	mov    %rax,%rdi
   1183a:	e8 81 29 ff ff       	call   41c0 <__asan_report_load8@plt>
   1183f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11846:	48 8b 40 08          	mov    0x8(%rax),%rax
   1184a:	48 8d 50 60          	lea    0x60(%rax),%rdx
   1184e:	48 89 d0             	mov    %rdx,%rax
   11851:	48 89 c1             	mov    %rax,%rcx
   11854:	48 89 c8             	mov    %rcx,%rax
   11857:	48 c1 e8 03          	shr    $0x3,%rax
   1185b:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11861:	0f b6 00             	movzbl (%rax),%eax
   11864:	84 c0                	test   %al,%al
   11866:	40 0f 95 c6          	setne  %sil
   1186a:	3c 03                	cmp    $0x3,%al
   1186c:	0f 9e c0             	setle  %al
   1186f:	21 f0                	and    %esi,%eax
   11871:	84 c0                	test   %al,%al
   11873:	74 08                	je     1187d <compute_haversine_sums+0x6ab>
   11875:	48 89 cf             	mov    %rcx,%rdi
   11878:	e8 73 28 ff ff       	call   40f0 <__asan_report_load4@plt>
   1187d:	8b 02                	mov    (%rdx),%eax
   1187f:	83 f8 03             	cmp    $0x3,%eax
   11882:	74 29                	je     118ad <compute_haversine_sums+0x6db>
   11884:	48 8d 15 d5 3e 00 00 	lea    0x3ed5(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   1188b:	48 8d 35 4e 43 00 00 	lea    0x434e(%rip),%rsi        # 15be0 <_IO_stdin_used+0x2be0>
   11892:	48 8d 05 47 2a 00 00 	lea    0x2a47(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11899:	b9 5d 00 00 00       	mov    $0x5d,%ecx
   1189e:	48 89 c7             	mov    %rax,%rdi
   118a1:	b8 00 00 00 00       	mov    $0x0,%eax
   118a6:	e8 a5 27 ff ff       	call   4050 <printf@plt>
   118ab:	0f 0b                	ud2
   118ad:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   118b4:	48 83 c0 08          	add    $0x8,%rax
   118b8:	48 89 c2             	mov    %rax,%rdx
   118bb:	48 c1 ea 03          	shr    $0x3,%rdx
   118bf:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   118c6:	0f b6 12             	movzbl (%rdx),%edx
   118c9:	84 d2                	test   %dl,%dl
   118cb:	74 08                	je     118d5 <compute_haversine_sums+0x703>
   118cd:	48 89 c7             	mov    %rax,%rdi
   118d0:	e8 eb 28 ff ff       	call   41c0 <__asan_report_load8@plt>
   118d5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   118dc:	48 8b 40 08          	mov    0x8(%rax),%rax
   118e0:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
   118e7:	48 89 d0             	mov    %rdx,%rax
   118ea:	48 89 c1             	mov    %rax,%rcx
   118ed:	48 89 c8             	mov    %rcx,%rax
   118f0:	48 c1 e8 03          	shr    $0x3,%rax
   118f4:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   118fa:	0f b6 00             	movzbl (%rax),%eax
   118fd:	84 c0                	test   %al,%al
   118ff:	40 0f 95 c6          	setne  %sil
   11903:	3c 03                	cmp    $0x3,%al
   11905:	0f 9e c0             	setle  %al
   11908:	21 f0                	and    %esi,%eax
   1190a:	84 c0                	test   %al,%al
   1190c:	74 08                	je     11916 <compute_haversine_sums+0x744>
   1190e:	48 89 cf             	mov    %rcx,%rdi
   11911:	e8 da 27 ff ff       	call   40f0 <__asan_report_load4@plt>
   11916:	8b 02                	mov    (%rdx),%eax
   11918:	83 f8 03             	cmp    $0x3,%eax
   1191b:	74 29                	je     11946 <compute_haversine_sums+0x774>
   1191d:	48 8d 15 3c 3e 00 00 	lea    0x3e3c(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   11924:	48 8d 35 15 43 00 00 	lea    0x4315(%rip),%rsi        # 15c40 <_IO_stdin_used+0x2c40>
   1192b:	48 8d 05 ae 29 00 00 	lea    0x29ae(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   11932:	b9 5e 00 00 00       	mov    $0x5e,%ecx
   11937:	48 89 c7             	mov    %rax,%rdi
   1193a:	b8 00 00 00 00       	mov    $0x0,%eax
   1193f:	e8 0c 27 ff ff       	call   4050 <printf@plt>
   11944:	0f 0b                	ud2
   11946:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1194d:	48 83 c0 08          	add    $0x8,%rax
   11951:	48 89 c2             	mov    %rax,%rdx
   11954:	48 c1 ea 03          	shr    $0x3,%rdx
   11958:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1195f:	0f b6 12             	movzbl (%rdx),%edx
   11962:	84 d2                	test   %dl,%dl
   11964:	74 08                	je     1196e <compute_haversine_sums+0x79c>
   11966:	48 89 c7             	mov    %rax,%rdi
   11969:	e8 52 28 ff ff       	call   41c0 <__asan_report_load8@plt>
   1196e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11975:	48 8b 40 08          	mov    0x8(%rax),%rax
   11979:	48 8d 50 28          	lea    0x28(%rax),%rdx
   1197d:	48 89 d1             	mov    %rdx,%rcx
   11980:	48 c1 e9 03          	shr    $0x3,%rcx
   11984:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   1198b:	0f b6 09             	movzbl (%rcx),%ecx
   1198e:	84 c9                	test   %cl,%cl
   11990:	74 08                	je     1199a <compute_haversine_sums+0x7c8>
   11992:	48 89 d7             	mov    %rdx,%rdi
   11995:	e8 26 28 ff ff       	call   41c0 <__asan_report_load8@plt>
   1199a:	f2 0f 10 40 28       	movsd  0x28(%rax),%xmm0
   1199f:	f2 0f 11 85 00 ff ff 	movsd  %xmm0,-0x100(%rbp)
   119a6:	ff 
   119a7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   119ae:	48 8b 40 08          	mov    0x8(%rax),%rax
   119b2:	48 83 c0 30          	add    $0x30,%rax
   119b6:	48 8d 50 28          	lea    0x28(%rax),%rdx
   119ba:	48 89 d1             	mov    %rdx,%rcx
   119bd:	48 c1 e9 03          	shr    $0x3,%rcx
   119c1:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   119c8:	0f b6 09             	movzbl (%rcx),%ecx
   119cb:	84 c9                	test   %cl,%cl
   119cd:	74 08                	je     119d7 <compute_haversine_sums+0x805>
   119cf:	48 89 d7             	mov    %rdx,%rdi
   119d2:	e8 e9 27 ff ff       	call   41c0 <__asan_report_load8@plt>
   119d7:	f2 0f 10 40 28       	movsd  0x28(%rax),%xmm0
   119dc:	f2 0f 11 85 08 ff ff 	movsd  %xmm0,-0xf8(%rbp)
   119e3:	ff 
   119e4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   119eb:	48 8b 40 08          	mov    0x8(%rax),%rax
   119ef:	48 83 c0 60          	add    $0x60,%rax
   119f3:	48 8d 50 28          	lea    0x28(%rax),%rdx
   119f7:	48 89 d1             	mov    %rdx,%rcx
   119fa:	48 c1 e9 03          	shr    $0x3,%rcx
   119fe:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   11a05:	0f b6 09             	movzbl (%rcx),%ecx
   11a08:	84 c9                	test   %cl,%cl
   11a0a:	74 08                	je     11a14 <compute_haversine_sums+0x842>
   11a0c:	48 89 d7             	mov    %rdx,%rdi
   11a0f:	e8 ac 27 ff ff       	call   41c0 <__asan_report_load8@plt>
   11a14:	f2 0f 10 40 28       	movsd  0x28(%rax),%xmm0
   11a19:	f2 0f 11 85 10 ff ff 	movsd  %xmm0,-0xf0(%rbp)
   11a20:	ff 
   11a21:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   11a28:	48 8b 40 08          	mov    0x8(%rax),%rax
   11a2c:	48 05 90 00 00 00    	add    $0x90,%rax
   11a32:	48 8d 50 28          	lea    0x28(%rax),%rdx
   11a36:	48 89 d1             	mov    %rdx,%rcx
   11a39:	48 c1 e9 03          	shr    $0x3,%rcx
   11a3d:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   11a44:	0f b6 09             	movzbl (%rcx),%ecx
   11a47:	84 c9                	test   %cl,%cl
   11a49:	74 08                	je     11a53 <compute_haversine_sums+0x881>
   11a4b:	48 89 d7             	mov    %rdx,%rdi
   11a4e:	e8 6d 27 ff ff       	call   41c0 <__asan_report_load8@plt>
   11a53:	f2 0f 10 40 28       	movsd  0x28(%rax),%xmm0
   11a58:	f2 0f 11 85 18 ff ff 	movsd  %xmm0,-0xe8(%rbp)
   11a5f:	ff 
   11a60:	f2 0f 10 1d 58 4c 00 	movsd  0x4c58(%rip),%xmm3        # 166c0 <__func__.0+0x460>
   11a67:	00 
   11a68:	f2 0f 10 95 18 ff ff 	movsd  -0xe8(%rbp),%xmm2
   11a6f:	ff 
   11a70:	f2 0f 10 8d 10 ff ff 	movsd  -0xf0(%rbp),%xmm1
   11a77:	ff 
   11a78:	f2 0f 10 85 08 ff ff 	movsd  -0xf8(%rbp),%xmm0
   11a7f:	ff 
   11a80:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   11a87:	66 0f 28 e3          	movapd %xmm3,%xmm4
   11a8b:	66 0f 28 da          	movapd %xmm2,%xmm3
   11a8f:	66 0f 28 d1          	movapd %xmm1,%xmm2
   11a93:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11a97:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11a9c:	e8 c4 bd ff ff       	call   d865 <reference_haversine>
   11aa1:	66 48 0f 7e c0       	movq   %xmm0,%rax
   11aa6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
   11aad:	f2 0f 10 85 d8 fe ff 	movsd  -0x128(%rbp),%xmm0
   11ab4:	ff 
   11ab5:	f2 0f 58 85 20 ff ff 	addsd  -0xe0(%rbp),%xmm0
   11abc:	ff 
   11abd:	f2 0f 11 85 d8 fe ff 	movsd  %xmm0,-0x128(%rbp)
   11ac4:	ff 
   11ac5:	f2 0f 10 9d 20 ff ff 	movsd  -0xe0(%rbp),%xmm3
   11acc:	ff 
   11acd:	f2 0f 10 95 18 ff ff 	movsd  -0xe8(%rbp),%xmm2
   11ad4:	ff 
   11ad5:	f2 0f 10 8d 10 ff ff 	movsd  -0xf0(%rbp),%xmm1
   11adc:	ff 
   11add:	f2 0f 10 85 08 ff ff 	movsd  -0xf8(%rbp),%xmm0
   11ae4:	ff 
   11ae5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
   11aec:	48 8d 15 ad 41 00 00 	lea    0x41ad(%rip),%rdx        # 15ca0 <_IO_stdin_used+0x2ca0>
   11af3:	66 0f 28 e3          	movapd %xmm3,%xmm4
   11af7:	66 0f 28 da          	movapd %xmm2,%xmm3
   11afb:	66 0f 28 d1          	movapd %xmm1,%xmm2
   11aff:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11b03:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11b08:	48 89 d7             	mov    %rdx,%rdi
   11b0b:	b8 05 00 00 00       	mov    $0x5,%eax
   11b10:	e8 f3 b6 ff ff       	call   d208 <log_trace>
   11b15:	83 bd a4 fe ff ff 00 	cmpl   $0x0,-0x15c(%rbp)
   11b1c:	0f 84 aa 01 00 00    	je     11ccc <compute_haversine_sums+0xafa>
   11b22:	48 8d 43 80          	lea    -0x80(%rbx),%rax
   11b26:	48 c1 e8 03          	shr    $0x3,%rax
   11b2a:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11b30:	c6 00 00             	movb   $0x0,(%rax)
   11b33:	48 8d 4b 80          	lea    -0x80(%rbx),%rcx
   11b37:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
   11b3d:	ba 08 00 00 00       	mov    $0x8,%edx
   11b42:	48 89 ce             	mov    %rcx,%rsi
   11b45:	89 c7                	mov    %eax,%edi
   11b47:	b8 00 00 00 00       	mov    $0x0,%eax
   11b4c:	e8 df 25 ff ff       	call   4130 <read@plt>
   11b51:	83 f8 ff             	cmp    $0xffffffff,%eax
   11b54:	75 67                	jne    11bbd <compute_haversine_sums+0x9eb>
   11b56:	e8 e5 24 ff ff       	call   4040 <__errno_location@plt>
   11b5b:	48 89 c1             	mov    %rax,%rcx
   11b5e:	48 89 c8             	mov    %rcx,%rax
   11b61:	48 89 c2             	mov    %rax,%rdx
   11b64:	48 c1 ea 03          	shr    $0x3,%rdx
   11b68:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11b6f:	0f b6 12             	movzbl (%rdx),%edx
   11b72:	84 d2                	test   %dl,%dl
   11b74:	40 0f 95 c7          	setne  %dil
   11b78:	48 89 c6             	mov    %rax,%rsi
   11b7b:	83 e6 07             	and    $0x7,%esi
   11b7e:	83 c6 03             	add    $0x3,%esi
   11b81:	40 38 d6             	cmp    %dl,%sil
   11b84:	0f 9d c2             	setge  %dl
   11b87:	21 fa                	and    %edi,%edx
   11b89:	84 d2                	test   %dl,%dl
   11b8b:	74 08                	je     11b95 <compute_haversine_sums+0x9c3>
   11b8d:	48 89 c7             	mov    %rax,%rdi
   11b90:	e8 5b 25 ff ff       	call   40f0 <__asan_report_load4@plt>
   11b95:	8b 01                	mov    (%rcx),%eax
   11b97:	48 8d 15 82 41 00 00 	lea    0x4182(%rip),%rdx        # 15d20 <_IO_stdin_used+0x2d20>
   11b9e:	89 c6                	mov    %eax,%esi
   11ba0:	48 89 d7             	mov    %rdx,%rdi
   11ba3:	b8 00 00 00 00       	mov    $0x0,%eax
   11ba8:	e8 df ad ff ff       	call   c98c <log_error>
   11bad:	41 be 00 00 00 00    	mov    $0x0,%r14d
   11bb3:	ba 00 00 00 00       	mov    $0x0,%edx
   11bb8:	e9 f5 00 00 00       	jmp    11cb2 <compute_haversine_sums+0xae0>
   11bbd:	48 8d 43 80          	lea    -0x80(%rbx),%rax
   11bc1:	48 89 c2             	mov    %rax,%rdx
   11bc4:	48 c1 ea 03          	shr    $0x3,%rdx
   11bc8:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11bcf:	0f b6 12             	movzbl (%rdx),%edx
   11bd2:	84 d2                	test   %dl,%dl
   11bd4:	74 08                	je     11bde <compute_haversine_sums+0xa0c>
   11bd6:	48 89 c7             	mov    %rax,%rdi
   11bd9:	e8 e2 25 ff ff       	call   41c0 <__asan_report_load8@plt>
   11bde:	f2 0f 10 43 80       	movsd  -0x80(%rbx),%xmm0
   11be3:	f2 0f 5c 85 20 ff ff 	subsd  -0xe0(%rbp),%xmm0
   11bea:	ff 
   11beb:	f2 0f 11 85 28 ff ff 	movsd  %xmm0,-0xd8(%rbp)
   11bf2:	ff 
   11bf3:	f2 0f 10 85 28 ff ff 	movsd  -0xd8(%rbp),%xmm0
   11bfa:	ff 
   11bfb:	66 0f 2f 05 c5 4a 00 	comisd 0x4ac5(%rip),%xmm0        # 166c8 <__func__.0+0x468>
   11c02:	00 
   11c03:	77 12                	ja     11c17 <compute_haversine_sums+0xa45>
   11c05:	f2 0f 10 05 c3 4a 00 	movsd  0x4ac3(%rip),%xmm0        # 166d0 <__func__.0+0x470>
   11c0c:	00 
   11c0d:	66 0f 2f 85 28 ff ff 	comisd -0xd8(%rbp),%xmm0
   11c14:	ff 
   11c15:	76 4c                	jbe    11c63 <compute_haversine_sums+0xa91>
   11c17:	48 8d 43 80          	lea    -0x80(%rbx),%rax
   11c1b:	48 89 c2             	mov    %rax,%rdx
   11c1e:	48 c1 ea 03          	shr    $0x3,%rdx
   11c22:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11c29:	0f b6 12             	movzbl (%rdx),%edx
   11c2c:	84 d2                	test   %dl,%dl
   11c2e:	74 08                	je     11c38 <compute_haversine_sums+0xa66>
   11c30:	48 89 c7             	mov    %rax,%rdi
   11c33:	e8 88 25 ff ff       	call   41c0 <__asan_report_load8@plt>
   11c38:	f2 0f 10 43 80       	movsd  -0x80(%rbx),%xmm0
   11c3d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11c44:	48 8d 15 55 41 00 00 	lea    0x4155(%rip),%rdx        # 15da0 <_IO_stdin_used+0x2da0>
   11c4b:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11c4f:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11c54:	48 89 d7             	mov    %rdx,%rdi
   11c57:	b8 02 00 00 00       	mov    $0x2,%eax
   11c5c:	e8 a7 b5 ff ff       	call   d208 <log_trace>
   11c61:	eb 4a                	jmp    11cad <compute_haversine_sums+0xadb>
   11c63:	48 8d 43 80          	lea    -0x80(%rbx),%rax
   11c67:	48 89 c2             	mov    %rax,%rdx
   11c6a:	48 c1 ea 03          	shr    $0x3,%rdx
   11c6e:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11c75:	0f b6 12             	movzbl (%rdx),%edx
   11c78:	84 d2                	test   %dl,%dl
   11c7a:	74 08                	je     11c84 <compute_haversine_sums+0xab2>
   11c7c:	48 89 c7             	mov    %rax,%rdi
   11c7f:	e8 3c 25 ff ff       	call   41c0 <__asan_report_load8@plt>
   11c84:	f2 0f 10 43 80       	movsd  -0x80(%rbx),%xmm0
   11c89:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   11c90:	48 8d 15 09 41 00 00 	lea    0x4109(%rip),%rdx        # 15da0 <_IO_stdin_used+0x2da0>
   11c97:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11c9b:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11ca0:	48 89 d7             	mov    %rdx,%rdi
   11ca3:	b8 02 00 00 00       	mov    $0x2,%eax
   11ca8:	e8 5b b5 ff ff       	call   d208 <log_trace>
   11cad:	ba 01 00 00 00       	mov    $0x1,%edx
   11cb2:	48 8d 43 80          	lea    -0x80(%rbx),%rax
   11cb6:	48 c1 e8 03          	shr    $0x3,%rax
   11cba:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11cc0:	c6 00 f8             	movb   $0xf8,(%rax)
   11cc3:	83 fa 01             	cmp    $0x1,%edx
   11cc6:	0f 85 f1 03 00 00    	jne    120bd <compute_haversine_sums+0xeeb>
   11ccc:	83 85 bc fe ff ff 01 	addl   $0x1,-0x144(%rbp)
   11cd3:	8b 85 bc fe ff ff    	mov    -0x144(%rbp),%eax
   11cd9:	3b 85 c4 fe ff ff    	cmp    -0x13c(%rbp),%eax
   11cdf:	0f 82 d2 f8 ff ff    	jb     115b7 <compute_haversine_sums+0x3e5>
   11ce5:	8b 85 c4 fe ff ff    	mov    -0x13c(%rbp),%eax
   11ceb:	48 85 c0             	test   %rax,%rax
   11cee:	78 0b                	js     11cfb <compute_haversine_sums+0xb29>
   11cf0:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11cf4:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
   11cf9:	eb 19                	jmp    11d14 <compute_haversine_sums+0xb42>
   11cfb:	48 89 c2             	mov    %rax,%rdx
   11cfe:	48 d1 ea             	shr    $1,%rdx
   11d01:	83 e0 01             	and    $0x1,%eax
   11d04:	48 09 c2             	or     %rax,%rdx
   11d07:	66 0f ef c0          	pxor   %xmm0,%xmm0
   11d0b:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
   11d10:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
   11d14:	f2 0f 10 8d d8 fe ff 	movsd  -0x128(%rbp),%xmm1
   11d1b:	ff 
   11d1c:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
   11d20:	f2 0f 11 8d e8 fe ff 	movsd  %xmm1,-0x118(%rbp)
   11d27:	ff 
   11d28:	83 bd a4 fe ff ff 00 	cmpl   $0x0,-0x15c(%rbp)
   11d2f:	0f 84 aa 01 00 00    	je     11edf <compute_haversine_sums+0xd0d>
   11d35:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
   11d39:	48 c1 e8 03          	shr    $0x3,%rax
   11d3d:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11d43:	c6 00 00             	movb   $0x0,(%rax)
   11d46:	48 8d 4b a0          	lea    -0x60(%rbx),%rcx
   11d4a:	8b 85 a0 fe ff ff    	mov    -0x160(%rbp),%eax
   11d50:	ba 08 00 00 00       	mov    $0x8,%edx
   11d55:	48 89 ce             	mov    %rcx,%rsi
   11d58:	89 c7                	mov    %eax,%edi
   11d5a:	b8 00 00 00 00       	mov    $0x0,%eax
   11d5f:	e8 cc 23 ff ff       	call   4130 <read@plt>
   11d64:	83 f8 ff             	cmp    $0xffffffff,%eax
   11d67:	75 67                	jne    11dd0 <compute_haversine_sums+0xbfe>
   11d69:	e8 d2 22 ff ff       	call   4040 <__errno_location@plt>
   11d6e:	48 89 c1             	mov    %rax,%rcx
   11d71:	48 89 c8             	mov    %rcx,%rax
   11d74:	48 89 c2             	mov    %rax,%rdx
   11d77:	48 c1 ea 03          	shr    $0x3,%rdx
   11d7b:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11d82:	0f b6 12             	movzbl (%rdx),%edx
   11d85:	84 d2                	test   %dl,%dl
   11d87:	40 0f 95 c7          	setne  %dil
   11d8b:	48 89 c6             	mov    %rax,%rsi
   11d8e:	83 e6 07             	and    $0x7,%esi
   11d91:	83 c6 03             	add    $0x3,%esi
   11d94:	40 38 d6             	cmp    %dl,%sil
   11d97:	0f 9d c2             	setge  %dl
   11d9a:	21 fa                	and    %edi,%edx
   11d9c:	84 d2                	test   %dl,%dl
   11d9e:	74 08                	je     11da8 <compute_haversine_sums+0xbd6>
   11da0:	48 89 c7             	mov    %rax,%rdi
   11da3:	e8 48 23 ff ff       	call   40f0 <__asan_report_load4@plt>
   11da8:	8b 01                	mov    (%rcx),%eax
   11daa:	48 8d 15 6f 3f 00 00 	lea    0x3f6f(%rip),%rdx        # 15d20 <_IO_stdin_used+0x2d20>
   11db1:	89 c6                	mov    %eax,%esi
   11db3:	48 89 d7             	mov    %rdx,%rdi
   11db6:	b8 00 00 00 00       	mov    $0x0,%eax
   11dbb:	e8 cc ab ff ff       	call   c98c <log_error>
   11dc0:	41 be 00 00 00 00    	mov    $0x0,%r14d
   11dc6:	ba 00 00 00 00       	mov    $0x0,%edx
   11dcb:	e9 f5 00 00 00       	jmp    11ec5 <compute_haversine_sums+0xcf3>
   11dd0:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
   11dd4:	48 89 c2             	mov    %rax,%rdx
   11dd7:	48 c1 ea 03          	shr    $0x3,%rdx
   11ddb:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11de2:	0f b6 12             	movzbl (%rdx),%edx
   11de5:	84 d2                	test   %dl,%dl
   11de7:	74 08                	je     11df1 <compute_haversine_sums+0xc1f>
   11de9:	48 89 c7             	mov    %rax,%rdi
   11dec:	e8 cf 23 ff ff       	call   41c0 <__asan_report_load8@plt>
   11df1:	f2 0f 10 43 a0       	movsd  -0x60(%rbx),%xmm0
   11df6:	f2 0f 5c 85 e8 fe ff 	subsd  -0x118(%rbp),%xmm0
   11dfd:	ff 
   11dfe:	f2 0f 11 85 f0 fe ff 	movsd  %xmm0,-0x110(%rbp)
   11e05:	ff 
   11e06:	f2 0f 10 85 f0 fe ff 	movsd  -0x110(%rbp),%xmm0
   11e0d:	ff 
   11e0e:	66 0f 2f 05 b2 48 00 	comisd 0x48b2(%rip),%xmm0        # 166c8 <__func__.0+0x468>
   11e15:	00 
   11e16:	77 12                	ja     11e2a <compute_haversine_sums+0xc58>
   11e18:	f2 0f 10 05 b0 48 00 	movsd  0x48b0(%rip),%xmm0        # 166d0 <__func__.0+0x470>
   11e1f:	00 
   11e20:	66 0f 2f 85 f0 fe ff 	comisd -0x110(%rbp),%xmm0
   11e27:	ff 
   11e28:	76 4c                	jbe    11e76 <compute_haversine_sums+0xca4>
   11e2a:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
   11e2e:	48 89 c2             	mov    %rax,%rdx
   11e31:	48 c1 ea 03          	shr    $0x3,%rdx
   11e35:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11e3c:	0f b6 12             	movzbl (%rdx),%edx
   11e3f:	84 d2                	test   %dl,%dl
   11e41:	74 08                	je     11e4b <compute_haversine_sums+0xc79>
   11e43:	48 89 c7             	mov    %rax,%rdi
   11e46:	e8 75 23 ff ff       	call   41c0 <__asan_report_load8@plt>
   11e4b:	f2 0f 10 43 a0       	movsd  -0x60(%rbx),%xmm0
   11e50:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   11e57:	48 8d 15 a2 3f 00 00 	lea    0x3fa2(%rip),%rdx        # 15e00 <_IO_stdin_used+0x2e00>
   11e5e:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11e62:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11e67:	48 89 d7             	mov    %rdx,%rdi
   11e6a:	b8 02 00 00 00       	mov    $0x2,%eax
   11e6f:	e8 18 ab ff ff       	call   c98c <log_error>
   11e74:	eb 4a                	jmp    11ec0 <compute_haversine_sums+0xcee>
   11e76:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
   11e7a:	48 89 c2             	mov    %rax,%rdx
   11e7d:	48 c1 ea 03          	shr    $0x3,%rdx
   11e81:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11e88:	0f b6 12             	movzbl (%rdx),%edx
   11e8b:	84 d2                	test   %dl,%dl
   11e8d:	74 08                	je     11e97 <compute_haversine_sums+0xcc5>
   11e8f:	48 89 c7             	mov    %rax,%rdi
   11e92:	e8 29 23 ff ff       	call   41c0 <__asan_report_load8@plt>
   11e97:	f2 0f 10 43 a0       	movsd  -0x60(%rbx),%xmm0
   11e9c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   11ea3:	48 8d 15 56 3f 00 00 	lea    0x3f56(%rip),%rdx        # 15e00 <_IO_stdin_used+0x2e00>
   11eaa:	66 0f 28 c8          	movapd %xmm0,%xmm1
   11eae:	66 48 0f 6e c0       	movq   %rax,%xmm0
   11eb3:	48 89 d7             	mov    %rdx,%rdi
   11eb6:	b8 02 00 00 00       	mov    $0x2,%eax
   11ebb:	e8 0a af ff ff       	call   cdca <log_info>
   11ec0:	ba 01 00 00 00       	mov    $0x1,%edx
   11ec5:	48 8d 43 a0          	lea    -0x60(%rbx),%rax
   11ec9:	48 c1 e8 03          	shr    $0x3,%rax
   11ecd:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11ed3:	c6 00 f8             	movb   $0xf8,(%rax)
   11ed6:	83 fa 01             	cmp    $0x1,%edx
   11ed9:	0f 85 de 01 00 00    	jne    120bd <compute_haversine_sums+0xeeb>
   11edf:	b8 00 00 00 00       	mov    $0x0,%eax
   11ee4:	e8 bf b4 ff ff       	call   d3a8 <read_cpu_timer>
   11ee9:	89 85 c8 fe ff ff    	mov    %eax,-0x138(%rbp)
   11eef:	8b 85 c8 fe ff ff    	mov    -0x138(%rbp),%eax
   11ef5:	2b 85 c0 fe ff ff    	sub    -0x140(%rbp),%eax
   11efb:	48 8d 15 5e 3f 00 00 	lea    0x3f5e(%rip),%rdx        # 15e60 <_IO_stdin_used+0x2e60>
   11f02:	89 c6                	mov    %eax,%esi
   11f04:	48 89 d7             	mov    %rdx,%rdi
   11f07:	b8 00 00 00 00       	mov    $0x0,%eax
   11f0c:	e8 b9 ae ff ff       	call   cdca <log_info>
   11f11:	b8 00 00 00 00       	mov    $0x0,%eax
   11f16:	e8 8d b4 ff ff       	call   d3a8 <read_cpu_timer>
   11f1b:	89 85 cc fe ff ff    	mov    %eax,-0x134(%rbp)
   11f21:	8b 43 c8             	mov    -0x38(%rbx),%eax
   11f24:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
   11f2a:	48 8b 43 c0          	mov    -0x40(%rbx),%rax
   11f2e:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%rbp)
   11f34:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   11f3a:	48 89 d0             	mov    %rdx,%rax
   11f3d:	48 01 c0             	add    %rax,%rax
   11f40:	48 01 d0             	add    %rdx,%rax
   11f43:	48 c1 e0 03          	shl    $0x3,%rax
   11f47:	48 8d 50 10          	lea    0x10(%rax),%rdx
   11f4b:	48 8d 05 6e 93 00 00 	lea    0x936e(%rip),%rax        # 1b2c0 <global_profiler>
   11f52:	48 01 d0             	add    %rdx,%rax
   11f55:	48 89 c2             	mov    %rax,%rdx
   11f58:	48 89 d0             	mov    %rdx,%rax
   11f5b:	48 c1 e8 03          	shr    $0x3,%rax
   11f5f:	48 05 00 80 ff 7f    	add    $0x7fff8000,%rax
   11f65:	0f b6 00             	movzbl (%rax),%eax
   11f68:	84 c0                	test   %al,%al
   11f6a:	0f 95 c1             	setne  %cl
   11f6d:	3c 03                	cmp    $0x3,%al
   11f6f:	0f 9e c0             	setle  %al
   11f72:	21 c8                	and    %ecx,%eax
   11f74:	84 c0                	test   %al,%al
   11f76:	74 08                	je     11f80 <compute_haversine_sums+0xdae>
   11f78:	48 89 d7             	mov    %rdx,%rdi
   11f7b:	e8 70 21 ff ff       	call   40f0 <__asan_report_load4@plt>
   11f80:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   11f86:	48 89 d0             	mov    %rdx,%rax
   11f89:	48 01 c0             	add    %rax,%rax
   11f8c:	48 01 d0             	add    %rdx,%rax
   11f8f:	48 c1 e0 03          	shl    $0x3,%rax
   11f93:	48 89 c2             	mov    %rax,%rdx
   11f96:	48 8d 05 33 93 00 00 	lea    0x9333(%rip),%rax        # 1b2d0 <global_profiler+0x10>
   11f9d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   11fa0:	8d 48 01             	lea    0x1(%rax),%ecx
   11fa3:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   11fa9:	48 89 d0             	mov    %rdx,%rax
   11fac:	48 01 c0             	add    %rax,%rax
   11faf:	48 01 d0             	add    %rdx,%rax
   11fb2:	48 c1 e0 03          	shl    $0x3,%rax
   11fb6:	48 89 c2             	mov    %rax,%rdx
   11fb9:	48 8d 05 10 93 00 00 	lea    0x9310(%rip),%rax        # 1b2d0 <global_profiler+0x10>
   11fc0:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
   11fc3:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   11fc9:	48 89 d0             	mov    %rdx,%rax
   11fcc:	48 01 c0             	add    %rax,%rax
   11fcf:	48 01 d0             	add    %rdx,%rax
   11fd2:	48 c1 e0 03          	shl    $0x3,%rax
   11fd6:	48 8d 15 e3 92 00 00 	lea    0x92e3(%rip),%rdx        # 1b2c0 <global_profiler>
   11fdd:	48 01 d0             	add    %rdx,%rax
   11fe0:	48 89 c2             	mov    %rax,%rdx
   11fe3:	48 c1 ea 03          	shr    $0x3,%rdx
   11fe7:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   11fee:	0f b6 12             	movzbl (%rdx),%edx
   11ff1:	84 d2                	test   %dl,%dl
   11ff3:	74 08                	je     11ffd <compute_haversine_sums+0xe2b>
   11ff5:	48 89 c7             	mov    %rax,%rdi
   11ff8:	e8 c3 21 ff ff       	call   41c0 <__asan_report_load8@plt>
   11ffd:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   12003:	48 89 d0             	mov    %rdx,%rax
   12006:	48 01 c0             	add    %rax,%rax
   12009:	48 01 d0             	add    %rdx,%rax
   1200c:	48 c1 e0 03          	shl    $0x3,%rax
   12010:	48 89 c2             	mov    %rax,%rdx
   12013:	48 8d 05 a6 92 00 00 	lea    0x92a6(%rip),%rax        # 1b2c0 <global_profiler>
   1201a:	48 8b 14 02          	mov    (%rdx,%rax,1),%rdx
   1201e:	8b 85 cc fe ff ff    	mov    -0x134(%rbp),%eax
   12024:	2b 85 d4 fe ff ff    	sub    -0x12c(%rbp),%eax
   1202a:	89 c0                	mov    %eax,%eax
   1202c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12030:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   12036:	48 89 d0             	mov    %rdx,%rax
   12039:	48 01 c0             	add    %rax,%rax
   1203c:	48 01 d0             	add    %rdx,%rax
   1203f:	48 c1 e0 03          	shl    $0x3,%rax
   12043:	48 89 c2             	mov    %rax,%rdx
   12046:	48 8d 05 73 92 00 00 	lea    0x9273(%rip),%rax        # 1b2c0 <global_profiler>
   1204d:	48 89 0c 02          	mov    %rcx,(%rdx,%rax,1)
   12051:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   12057:	48 89 d0             	mov    %rdx,%rax
   1205a:	48 01 c0             	add    %rax,%rax
   1205d:	48 01 d0             	add    %rdx,%rax
   12060:	48 c1 e0 03          	shl    $0x3,%rax
   12064:	48 8d 15 55 92 00 00 	lea    0x9255(%rip),%rdx        # 1b2c0 <global_profiler>
   1206b:	48 01 d0             	add    %rdx,%rax
   1206e:	48 83 c0 08          	add    $0x8,%rax
   12072:	48 89 c2             	mov    %rax,%rdx
   12075:	48 c1 ea 03          	shr    $0x3,%rdx
   12079:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   12080:	0f b6 12             	movzbl (%rdx),%edx
   12083:	84 d2                	test   %dl,%dl
   12085:	74 08                	je     1208f <compute_haversine_sums+0xebd>
   12087:	48 89 c7             	mov    %rax,%rdi
   1208a:	e8 b1 20 ff ff       	call   4140 <__asan_report_store8@plt>
   1208f:	8b 95 d0 fe ff ff    	mov    -0x130(%rbp),%edx
   12095:	48 89 d0             	mov    %rdx,%rax
   12098:	48 01 c0             	add    %rax,%rax
   1209b:	48 01 d0             	add    %rdx,%rax
   1209e:	48 c1 e0 03          	shl    $0x3,%rax
   120a2:	48 89 c1             	mov    %rax,%rcx
   120a5:	48 8d 05 1c 92 00 00 	lea    0x921c(%rip),%rax        # 1b2c8 <global_profiler+0x8>
   120ac:	48 8d 15 ad 41 00 00 	lea    0x41ad(%rip),%rdx        # 16260 <__func__.0>
   120b3:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)
   120b7:	41 be 01 00 00 00    	mov    $0x1,%r14d
   120bd:	44 89 f2             	mov    %r14d,%edx
   120c0:	4d 39 e7             	cmp    %r12,%r15
   120c3:	74 28                	je     120ed <compute_haversine_sums+0xf1b>
   120c5:	49 c7 04 24 0e 36 e0 	movq   $0x45e0360e,(%r12)
   120cc:	45 
   120cd:	b8 f5 f5 f5 f5       	mov    $0xf5f5f5f5,%eax
   120d2:	66 0f 6e e8          	movd   %eax,%xmm5
   120d6:	66 0f 70 c5 00       	pshufd $0x0,%xmm5,%xmm0
   120db:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
   120e2:	7f 
   120e3:	49 8b 44 24 78       	mov    0x78(%r12),%rax
   120e8:	c6 00 00             	movb   $0x0,(%rax)
   120eb:	eb 0c                	jmp    120f9 <compute_haversine_sums+0xf27>
   120ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
   120f1:	41 0f 11 85 00 80 ff 	movups %xmm0,0x7fff8000(%r13)
   120f8:	7f 
   120f9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   120fd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   12104:	00 00 
   12106:	74 05                	je     1210d <compute_haversine_sums+0xf3b>
   12108:	e8 53 20 ff ff       	call   4160 <__stack_chk_fail@plt>
   1210d:	89 d0                	mov    %edx,%eax
   1210f:	48 81 c4 38 01 00 00 	add    $0x138,%rsp
   12116:	5b                   	pop    %rbx
   12117:	41 5c                	pop    %r12
   12119:	41 5d                	pop    %r13
   1211b:	41 5e                	pop    %r14
   1211d:	41 5f                	pop    %r15
   1211f:	5d                   	pop    %rbp
   12120:	c3                   	ret

0000000000012121 <main>:
   12121:	55                   	push   %rbp
   12122:	48 89 e5             	mov    %rsp,%rbp
   12125:	41 56                	push   %r14
   12127:	41 55                	push   %r13
   12129:	41 54                	push   %r12
   1212b:	53                   	push   %rbx
   1212c:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
   12133:	89 bd 3c ff ff ff    	mov    %edi,-0xc4(%rbp)
   12139:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
   12140:	48 8d 5d 80          	lea    -0x80(%rbp),%rbx
   12144:	49 89 de             	mov    %rbx,%r14
   12147:	83 3d 12 91 00 00 00 	cmpl   $0x0,0x9112(%rip)        # 1b260 <__asan_option_detect_stack_use_after_return@@Base>
   1214e:	74 12                	je     12162 <main+0x41>
   12150:	bf 40 00 00 00       	mov    $0x40,%edi
   12155:	e8 46 1f ff ff       	call   40a0 <__asan_stack_malloc_0@plt>
   1215a:	48 85 c0             	test   %rax,%rax
   1215d:	74 03                	je     12162 <main+0x41>
   1215f:	48 89 c3             	mov    %rax,%rbx
   12162:	48 8d 43 60          	lea    0x60(%rbx),%rax
   12166:	49 89 c4             	mov    %rax,%r12
   12169:	48 c7 03 b3 8a b5 41 	movq   $0x41b58ab3,(%rbx)
   12170:	48 8d 05 29 3d 00 00 	lea    0x3d29(%rip),%rax        # 15ea0 <_IO_stdin_used+0x2ea0>
   12177:	48 89 43 08          	mov    %rax,0x8(%rbx)
   1217b:	48 8d 05 9f ff ff ff 	lea    -0x61(%rip),%rax        # 12121 <main>
   12182:	48 89 43 10          	mov    %rax,0x10(%rbx)
   12186:	49 89 dd             	mov    %rbx,%r13
   12189:	49 c1 ed 03          	shr    $0x3,%r13
   1218d:	41 c7 85 00 80 ff 7f 	movl   $0xf1f1f1f1,0x7fff8000(%r13)
   12194:	f1 f1 f1 f1 
   12198:	41 c7 85 04 80 ff 7f 	movl   $0xf3f3f300,0x7fff8004(%r13)
   1219f:	00 f3 f3 f3 
   121a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   121aa:	00 00 
   121ac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   121b0:	31 c0                	xor    %eax,%eax
   121b2:	b8 00 00 00 00       	mov    $0x0,%eax
   121b7:	e8 34 b3 ff ff       	call   d4f0 <start_profile>
   121bc:	48 8d 05 e8 a9 ff ff 	lea    -0x5618(%rip),%rax        # cbab <log_warn>
   121c3:	48 89 c7             	mov    %rax,%rdi
   121c6:	e8 e4 22 ff ff       	call   44af <jstring_load_logging_function>
   121cb:	85 c0                	test   %eax,%eax
   121cd:	75 1e                	jne    121ed <main+0xcc>
   121cf:	48 8d 05 ea 3c 00 00 	lea    0x3cea(%rip),%rax        # 15ec0 <_IO_stdin_used+0x2ec0>
   121d6:	48 89 c7             	mov    %rax,%rdi
   121d9:	b8 00 00 00 00       	mov    $0x0,%eax
   121de:	e8 a9 a7 ff ff       	call   c98c <log_error>
   121e3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   121e8:	e9 0b 04 00 00       	jmp    125f8 <main+0x4d7>
   121ed:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)
   121f4:	00 00 00 
   121f7:	83 bd 3c ff ff ff 02 	cmpl   $0x2,-0xc4(%rbp)
   121fe:	74 27                	je     12227 <main+0x106>
   12200:	83 bd 3c ff ff ff 03 	cmpl   $0x3,-0xc4(%rbp)
   12207:	74 1e                	je     12227 <main+0x106>
   12209:	48 8d 05 10 3d 00 00 	lea    0x3d10(%rip),%rax        # 15f20 <_IO_stdin_used+0x2f20>
   12210:	48 89 c7             	mov    %rax,%rdi
   12213:	b8 00 00 00 00       	mov    $0x0,%eax
   12218:	e8 6f a7 ff ff       	call   c98c <log_error>
   1221d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12222:	e9 d1 03 00 00       	jmp    125f8 <main+0x4d7>
   12227:	83 bd 3c ff ff ff 03 	cmpl   $0x3,-0xc4(%rbp)
   1222e:	0f 85 e4 00 00 00    	jne    12318 <main+0x1f7>
   12234:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   1223b:	48 83 c0 10          	add    $0x10,%rax
   1223f:	48 89 c2             	mov    %rax,%rdx
   12242:	48 89 d1             	mov    %rdx,%rcx
   12245:	48 c1 e9 03          	shr    $0x3,%rcx
   12249:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   12250:	0f b6 09             	movzbl (%rcx),%ecx
   12253:	84 c9                	test   %cl,%cl
   12255:	74 08                	je     1225f <main+0x13e>
   12257:	48 89 d7             	mov    %rdx,%rdi
   1225a:	e8 61 1f ff ff       	call   41c0 <__asan_report_load8@plt>
   1225f:	48 8b 00             	mov    (%rax),%rax
   12262:	be 00 00 00 00       	mov    $0x0,%esi
   12267:	48 89 c7             	mov    %rax,%rdi
   1226a:	b8 00 00 00 00       	mov    $0x0,%eax
   1226f:	e8 9c 1e ff ff       	call   4110 <open@plt>
   12274:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
   1227a:	83 bd 4c ff ff ff ff 	cmpl   $0xffffffff,-0xb4(%rbp)
   12281:	0f 85 91 00 00 00    	jne    12318 <main+0x1f7>
   12287:	e8 b4 1d ff ff       	call   4040 <__errno_location@plt>
   1228c:	48 89 c1             	mov    %rax,%rcx
   1228f:	48 89 c8             	mov    %rcx,%rax
   12292:	48 89 c2             	mov    %rax,%rdx
   12295:	48 c1 ea 03          	shr    $0x3,%rdx
   12299:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   122a0:	0f b6 12             	movzbl (%rdx),%edx
   122a3:	84 d2                	test   %dl,%dl
   122a5:	40 0f 95 c7          	setne  %dil
   122a9:	48 89 c6             	mov    %rax,%rsi
   122ac:	83 e6 07             	and    $0x7,%esi
   122af:	83 c6 03             	add    $0x3,%esi
   122b2:	40 38 d6             	cmp    %dl,%sil
   122b5:	0f 9d c2             	setge  %dl
   122b8:	21 fa                	and    %edi,%edx
   122ba:	84 d2                	test   %dl,%dl
   122bc:	74 08                	je     122c6 <main+0x1a5>
   122be:	48 89 c7             	mov    %rax,%rdi
   122c1:	e8 2a 1e ff ff       	call   40f0 <__asan_report_load4@plt>
   122c6:	8b 11                	mov    (%rcx),%edx
   122c8:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   122cf:	48 83 c0 10          	add    $0x10,%rax
   122d3:	48 89 c1             	mov    %rax,%rcx
   122d6:	48 89 ce             	mov    %rcx,%rsi
   122d9:	48 c1 ee 03          	shr    $0x3,%rsi
   122dd:	48 81 c6 00 80 ff 7f 	add    $0x7fff8000,%rsi
   122e4:	0f b6 36             	movzbl (%rsi),%esi
   122e7:	40 84 f6             	test   %sil,%sil
   122ea:	74 08                	je     122f4 <main+0x1d3>
   122ec:	48 89 cf             	mov    %rcx,%rdi
   122ef:	e8 cc 1e ff ff       	call   41c0 <__asan_report_load8@plt>
   122f4:	48 8b 00             	mov    (%rax),%rax
   122f7:	48 8d 0d a2 33 00 00 	lea    0x33a2(%rip),%rcx        # 156a0 <_IO_stdin_used+0x26a0>
   122fe:	48 89 c6             	mov    %rax,%rsi
   12301:	48 89 cf             	mov    %rcx,%rdi
   12304:	b8 00 00 00 00       	mov    $0x0,%eax
   12309:	e8 7e a6 ff ff       	call   c98c <log_error>
   1230e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12313:	e9 e0 02 00 00       	jmp    125f8 <main+0x4d7>
   12318:	b8 00 00 00 00       	mov    $0x0,%eax
   1231d:	e8 86 b0 ff ff       	call   d3a8 <read_cpu_timer>
   12322:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   12329:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   12330:	48 83 c0 08          	add    $0x8,%rax
   12334:	48 89 c2             	mov    %rax,%rdx
   12337:	48 89 d1             	mov    %rdx,%rcx
   1233a:	48 c1 e9 03          	shr    $0x3,%rcx
   1233e:	48 81 c1 00 80 ff 7f 	add    $0x7fff8000,%rcx
   12345:	0f b6 09             	movzbl (%rcx),%ecx
   12348:	84 c9                	test   %cl,%cl
   1234a:	74 08                	je     12354 <main+0x233>
   1234c:	48 89 d7             	mov    %rdx,%rdi
   1234f:	e8 6c 1e ff ff       	call   41c0 <__asan_report_load8@plt>
   12354:	48 8b 00             	mov    (%rax),%rax
   12357:	49 8d 54 24 c0       	lea    -0x40(%r12),%rdx
   1235c:	48 89 d6             	mov    %rdx,%rsi
   1235f:	48 89 c7             	mov    %rax,%rdi
   12362:	e8 d9 e7 ff ff       	call   10b40 <read_file>
   12367:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
   1236e:	b8 00 00 00 00       	mov    $0x0,%eax
   12373:	e8 30 b0 ff ff       	call   d3a8 <read_cpu_timer>
   12378:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   1237f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   12386:	48 2b 85 58 ff ff ff 	sub    -0xa8(%rbp),%rax
   1238d:	48 8d 15 2c 3c 00 00 	lea    0x3c2c(%rip),%rdx        # 15fc0 <_IO_stdin_used+0x2fc0>
   12394:	48 89 c6             	mov    %rax,%rsi
   12397:	48 89 d7             	mov    %rdx,%rdi
   1239a:	b8 00 00 00 00       	mov    $0x0,%eax
   1239f:	e8 26 aa ff ff       	call   cdca <log_info>
   123a4:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)
   123ab:	00 
   123ac:	75 0a                	jne    123b8 <main+0x297>
   123ae:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   123b3:	e9 40 02 00 00       	jmp    125f8 <main+0x4d7>
   123b8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   123bf:	48 83 c0 01          	add    $0x1,%rax
   123c3:	48 01 c0             	add    %rax,%rax
   123c6:	48 89 c7             	mov    %rax,%rdi
   123c9:	e8 b2 1d ff ff       	call   4180 <malloc@plt>
   123ce:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
   123d5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
   123dc:	48 83 c0 01          	add    $0x1,%rax
   123e0:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   123e4:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   123eb:	48 89 c6             	mov    %rax,%rsi
   123ee:	48 89 d7             	mov    %rdx,%rdi
   123f1:	e8 ac 1f ff ff       	call   43a2 <jstring_memory_activate>
   123f6:	85 c0                	test   %eax,%eax
   123f8:	75 1e                	jne    12418 <main+0x2f7>
   123fa:	48 8d 05 ff 3b 00 00 	lea    0x3bff(%rip),%rax        # 16000 <_IO_stdin_used+0x3000>
   12401:	48 89 c7             	mov    %rax,%rdi
   12404:	b8 00 00 00 00       	mov    $0x0,%eax
   12409:	e8 7e a5 ff ff       	call   c98c <log_error>
   1240e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   12413:	e9 e0 01 00 00       	jmp    125f8 <main+0x4d7>
   12418:	bf 30 00 00 00       	mov    $0x30,%edi
   1241d:	e8 5e 1d ff ff       	call   4180 <malloc@plt>
   12422:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
   12429:	b8 00 00 00 00       	mov    $0x0,%eax
   1242e:	e8 75 af ff ff       	call   d3a8 <read_cpu_timer>
   12433:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   1243a:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
   1243f:	48 89 c2             	mov    %rax,%rdx
   12442:	48 c1 ea 03          	shr    $0x3,%rdx
   12446:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   1244d:	0f b6 12             	movzbl (%rdx),%edx
   12450:	84 d2                	test   %dl,%dl
   12452:	74 08                	je     1245c <main+0x33b>
   12454:	48 89 c7             	mov    %rax,%rdi
   12457:	e8 64 1d ff ff       	call   41c0 <__asan_report_load8@plt>
   1245c:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
   12461:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   12468:	48 8b b5 60 ff ff ff 	mov    -0xa0(%rbp),%rsi
   1246f:	b9 01 00 00 00       	mov    $0x1,%ecx
   12474:	48 89 c7             	mov    %rax,%rdi
   12477:	e8 2f b8 ff ff       	call   dcab <json_parse>
   1247c:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
   12482:	b8 00 00 00 00       	mov    $0x0,%eax
   12487:	e8 1c af ff ff       	call   d3a8 <read_cpu_timer>
   1248c:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   12493:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1249a:	48 2b 85 58 ff ff ff 	sub    -0xa8(%rbp),%rax
   124a1:	48 8d 15 b8 3b 00 00 	lea    0x3bb8(%rip),%rdx        # 16060 <_IO_stdin_used+0x3060>
   124a8:	48 89 c6             	mov    %rax,%rsi
   124ab:	48 89 d7             	mov    %rdx,%rdi
   124ae:	b8 00 00 00 00       	mov    $0x0,%eax
   124b3:	e8 12 a9 ff ff       	call   cdca <log_info>
   124b8:	83 bd 54 ff ff ff 01 	cmpl   $0x1,-0xac(%rbp)
   124bf:	74 29                	je     124ea <main+0x3c9>
   124c1:	48 8d 15 98 32 00 00 	lea    0x3298(%rip),%rdx        # 15760 <_IO_stdin_used+0x2760>
   124c8:	48 8d 35 d1 3b 00 00 	lea    0x3bd1(%rip),%rsi        # 160a0 <_IO_stdin_used+0x30a0>
   124cf:	48 8d 05 0a 1e 00 00 	lea    0x1e0a(%rip),%rax        # 142e0 <_IO_stdin_used+0x12e0>
   124d6:	b9 dc 00 00 00       	mov    $0xdc,%ecx
   124db:	48 89 c7             	mov    %rax,%rdi
   124de:	b8 00 00 00 00       	mov    $0x0,%eax
   124e3:	e8 68 1b ff ff       	call   4050 <printf@plt>
   124e8:	0f 0b                	ud2
   124ea:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%rbp)
   124f1:	00 00 00 
   124f4:	83 bd 3c ff ff ff 03 	cmpl   $0x3,-0xc4(%rbp)
   124fb:	75 0a                	jne    12507 <main+0x3e6>
   124fd:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
   12504:	00 00 00 
   12507:	b8 00 00 00 00       	mov    $0x0,%eax
   1250c:	e8 97 ae ff ff       	call   d3a8 <read_cpu_timer>
   12511:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
   12518:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx
   1251e:	8b 8d 50 ff ff ff    	mov    -0xb0(%rbp),%ecx
   12524:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1252b:	89 ce                	mov    %ecx,%esi
   1252d:	48 89 c7             	mov    %rax,%rdi
   12530:	e8 9d ec ff ff       	call   111d2 <compute_haversine_sums>
   12535:	85 c0                	test   %eax,%eax
   12537:	75 0a                	jne    12543 <main+0x422>
   12539:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   1253e:	e9 b5 00 00 00       	jmp    125f8 <main+0x4d7>
   12543:	b8 00 00 00 00       	mov    $0x0,%eax
   12548:	e8 5b ae ff ff       	call   d3a8 <read_cpu_timer>
   1254d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
   12554:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
   1255b:	48 2b 85 58 ff ff ff 	sub    -0xa8(%rbp),%rax
   12562:	48 8d 15 77 3b 00 00 	lea    0x3b77(%rip),%rdx        # 160e0 <_IO_stdin_used+0x30e0>
   12569:	48 89 c6             	mov    %rax,%rsi
   1256c:	48 89 d7             	mov    %rdx,%rdi
   1256f:	b8 00 00 00 00       	mov    $0x0,%eax
   12574:	e8 51 a8 ff ff       	call   cdca <log_info>
   12579:	48 8d 05 4a a8 ff ff 	lea    -0x57b6(%rip),%rax        # cdca <log_info>
   12580:	48 89 c7             	mov    %rax,%rdi
   12583:	e8 80 af ff ff       	call   d508 <finish_and_print_profile>
   12588:	b8 00 00 00 00       	mov    $0x0,%eax
   1258d:	e8 ce b6 ff ff       	call   dc60 <json_memory_clear>
   12592:	48 8d 05 a7 3b 00 00 	lea    0x3ba7(%rip),%rax        # 16140 <_IO_stdin_used+0x3140>
   12599:	48 89 c7             	mov    %rax,%rdi
   1259c:	b8 00 00 00 00       	mov    $0x0,%eax
   125a1:	e8 62 ac ff ff       	call   d208 <log_trace>
   125a6:	49 8d 44 24 c0       	lea    -0x40(%r12),%rax
   125ab:	48 89 c2             	mov    %rax,%rdx
   125ae:	48 c1 ea 03          	shr    $0x3,%rdx
   125b2:	48 81 c2 00 80 ff 7f 	add    $0x7fff8000,%rdx
   125b9:	0f b6 12             	movzbl (%rdx),%edx
   125bc:	84 d2                	test   %dl,%dl
   125be:	74 08                	je     125c8 <main+0x4a7>
   125c0:	48 89 c7             	mov    %rax,%rdi
   125c3:	e8 f8 1b ff ff       	call   41c0 <__asan_report_load8@plt>
   125c8:	49 8b 44 24 c0       	mov    -0x40(%r12),%rax
   125cd:	48 89 c7             	mov    %rax,%rdi
   125d0:	e8 ab 1a ff ff       	call   4080 <free@plt>
   125d5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   125dc:	48 89 c7             	mov    %rax,%rdi
   125df:	e8 9c 1a ff ff       	call   4080 <free@plt>
   125e4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   125eb:	48 89 c7             	mov    %rax,%rdi
   125ee:	e8 8d 1a ff ff       	call   4080 <free@plt>
   125f3:	b8 00 00 00 00       	mov    $0x0,%eax
   125f8:	89 c2                	mov    %eax,%edx
   125fa:	49 39 de             	cmp    %rbx,%r14
   125fd:	74 21                	je     12620 <main+0x4ff>
   125ff:	48 c7 03 0e 36 e0 45 	movq   $0x45e0360e,(%rbx)
   12606:	48 b8 f5 f5 f5 f5 f5 	movabs $0xf5f5f5f5f5f5f5f5,%rax
   1260d:	f5 f5 f5 
   12610:	49 89 85 00 80 ff 7f 	mov    %rax,0x7fff8000(%r13)
   12617:	48 8b 43 38          	mov    0x38(%rbx),%rax
   1261b:	c6 00 00             	movb   $0x0,(%rax)
   1261e:	eb 0b                	jmp    1262b <main+0x50a>
   12620:	49 c7 85 00 80 ff 7f 	movq   $0x0,0x7fff8000(%r13)
   12627:	00 00 00 00 
   1262b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1262f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   12636:	00 00 
   12638:	74 05                	je     1263f <main+0x51e>
   1263a:	e8 21 1b ff ff       	call   4160 <__stack_chk_fail@plt>
   1263f:	89 d0                	mov    %edx,%eax
   12641:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
   12648:	5b                   	pop    %rbx
   12649:	41 5c                	pop    %r12
   1264b:	41 5d                	pop    %r13
   1264d:	41 5e                	pop    %r14
   1264f:	5d                   	pop    %rbp
   12650:	c3                   	ret

0000000000012651 <_sub_D_00099_0>:
   12651:	55                   	push   %rbp
   12652:	48 89 e5             	mov    %rsp,%rbp
   12655:	48 8d 05 c4 6b 00 00 	lea    0x6bc4(%rip),%rax        # 19220 <jstring_log+0xe0>
   1265c:	be 81 00 00 00       	mov    $0x81,%esi
   12661:	48 89 c7             	mov    %rax,%rdi
   12664:	e8 e7 1a ff ff       	call   4150 <__asan_unregister_globals@plt>
   12669:	5d                   	pop    %rbp
   1266a:	c3                   	ret

000000000001266b <_sub_I_00099_1>:
   1266b:	55                   	push   %rbp
   1266c:	48 89 e5             	mov    %rsp,%rbp
   1266f:	e8 fc 1a ff ff       	call   4170 <__asan_init@plt>
   12674:	e8 a7 1b ff ff       	call   4220 <__asan_version_mismatch_check_v8@plt>
   12679:	48 8d 05 a0 6b 00 00 	lea    0x6ba0(%rip),%rax        # 19220 <jstring_log+0xe0>
   12680:	be 81 00 00 00       	mov    $0x81,%esi
   12685:	48 89 c7             	mov    %rax,%rdi
   12688:	e8 d3 19 ff ff       	call   4060 <__asan_register_globals@plt>
   1268d:	5d                   	pop    %rbp
   1268e:	c3                   	ret

Disassembly of section .fini:

0000000000012690 <_fini>:
   12690:	f3 0f 1e fa          	endbr64
   12694:	48 83 ec 08          	sub    $0x8,%rsp
   12698:	48 83 c4 08          	add    $0x8,%rsp
   1269c:	c3                   	ret
